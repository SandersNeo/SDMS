///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Функции, возвращающие имя события для оповещений 
// и проверяющие необходимость оповещения.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает строку с именем события изменения данных для группы заказчиков направлений.
//
// Возвращаемое значение:
//   Строка   - имя события
//
Функция ИмяСобытияГруппыЗаказчиковНаправлений() Экспорт
	
	Возврат "Справочник.ГруппыЗаказчиковНаправлений.УправлениеГруппами.ОбновитьДанныеФормы";
	
КонецФункции

// Проверяет, является ли событие изменением данных для группы заказчиков направлений.
//
// Параметры:
//  ИмяСобытия - Строка - имя события оповещения.
//
// Возвращаемое значение:
//  Булево - является ли событие записью элемента справочника группы заказчиков направлений или нет.
//
Функция СобытиеГруппыЗаказчиковНаправлений(Знач ИмяСобытия) Экспорт
	
	Возврат (ИмяСобытия = ИмяСобытияГруппыЗаказчиковНаправлений());
	
КонецФункции

// Возвращает строку с именем события добавления трудозатрат по объекту.
//
// Возвращаемое значение:
//   Строка - имя события
//
Функция ИмяСобытияДобавленияТрудозатрат() Экспорт
	
	Возврат "СобытиеСеансаКлиентскогоПриложения.ДобавлениеТрудозатрат";
	
КонецФункции

// Проверяет, принадлежит ли оповещение объекту и является ли событием добавления 
// трудозатрат.
//
// Параметры:
//  ИмяСобытия - Строка - имя события оповещения.
//  Владелец   - Произвольный - идентификатор объекта трудозатрат.
//  Параметр   - Структура - параметры, пришедшие с оповещением.
//
// Возвращаемое значение:
//  Булево - Истина, оповещение принадлежит владельцу. Ложь, когда оповещение не принадлежит 
//  владельцу.
//
Функция СобытиеДобавленияТрудозатратПоОбъекту(Знач ИмяСобытия, Знач Владелец, Знач Параметр) Экспорт
	
	Возврат (ИмяСобытия = ИмяСобытияДобавленияТрудозатрат() И Владелец = Параметр);
	
КонецФункции

// Возвращает строку с именем события изменения списка участников по объекту.
//
// Возвращаемое значение:
//   Строка - имя события
//
Функция ИмяСобытияИзменения() Экспорт
	
	Возврат "РегистрСведений.Участники.ИзменениеСпискаУчастников";
	
КонецФункции

// Проверяет, принадлежит ли оповещение объекту и является ли событием изменения 
// списка участников.
//
// Параметры:
//  ИмяСобытия - Строка - имя события оповещения.
//  Владелец   - Произвольный - идентификатор объекта.
//  Параметр   - Структура - параметры, пришедшие с оповещением.
//
// Возвращаемое значение:
//  Булево - Истина, оповещение принадлежит владельцу. Ложь, когда оповещение не принадлежит 
//  владельцу.
//
Функция СобытиеИзменения(Знач ИмяСобытия, Знач Владелец = Неопределено, Знач Параметр = Неопределено) Экспорт
		
	Возврат (ИмяСобытия = ИмяСобытияИзменения() И Владелец = Параметр);
	
КонецФункции

// Возвращает строку с именем события изменения заявки в очереди
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияИзмененияЗаявкиВОчереди() Экспорт
	
	Возврат "Документ.ЗаявкаНаРазработку.ИзмененияВОчереди";
	
КонецФункции

// Проверяет, является ли событие изменением заявки в очереди.
//
// Параметры:
//  ИмяСобытия - Строка - имя события оповещения
//	Источник - ДокументСсылка - источник изменений
//	Форма - УправляемаяФорма - оповещаемая форма.
//
// Возвращаемое значение:
//  Булево - является ли событие изменением заявки в очереди 
//	и форма не является источником изменений.
//
Функция СобытиеИзмененияЗаявкиВОчереди(Знач ИмяСобытия, Знач Источник, Знач Форма) Экспорт
	
	Возврат (ИмяСобытия = ИмяСобытияИзмененияЗаявкиВОчереди() И Источник <> Форма);
	
КонецФункции

// Возвращает строку с именем события изменения направления заявки
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияИзменениеНаправленияЗаявки() Экспорт
	
	Возврат "Документ.ЗаявкаНаРазработку.ИзменениеНаправления";
	
КонецФункции

// Возвращает имя события изменения состава списка экспертов знания для документа РезультатАттестации.
//
// Возвращаемое значение:
//  Строка - имя события
//
Функция ИмяСобытияИзмененияСоставаЭкспертовЗнания() Экспорт
	
	Возврат "РегистрыСведений.ЭкспертыПоЗнаниям.ИзменениеСоставаЭкспертовЗнания";
	
КонецФункции

// Возвращает строку с именем события изменения статуса задачи
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияИзмененияСтатусаЗадачи() Экспорт
		
	Возврат "Документ.Задача.ИзменениеСтатусаЗадачи";
	
КонецФункции

// Возвращает строку с именем события записи документа "Оценка навыков"
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияЗаписиДокументаОценкаНавыков() Экспорт
	
	Возврат "Документ.ОценкаНавыков.ЗаписьДокумента";
	
КонецФункции

// Возвращает строку с именем события записи документа подчиненного спринта
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияЗаписиПодчиненногоСпринта() Экспорт
	
	Возврат "Документ.Спринт.ЗаписьПодчиненногоСпринта";
	
КонецФункции

// Проверяет, принадлежит ли оповещение объекту и является ли событием записи 
// подчиненного спринта.
//
// Параметры:
//  ИмяСобытия - Строка - имя события оповещения.
//  Владелец   - Произвольный - идентификатор объекта.
//  Параметр   - Структура - параметры, пришедшие с оповещением.
//
// Возвращаемое значение:
//  Булево - Истина, оповещение принадлежит владельцу. Ложь, когда оповещение не принадлежит 
//  владельцу.
//
Функция СобытиеЗаписиПодчиненногоСпринта(Знач ИмяСобытия, Знач Владелец, Знач Параметр) Экспорт
	
	Возврат (ИмяСобытия = ИмяСобытияЗаписиПодчиненногоСпринта() И Владелец = Параметр);
	
КонецФункции

// Возвращает строку с именем события добавления трудозатрат по объекту.
//
// Возвращаемое значение:
//   Строка - имя события
//
Функция ИмяСобытияНажатиеСтоимостьВнутреннегоЗадания() Экспорт
	
	Возврат "НажатиеСтоимостьВнутреннегоЗадания";
	
КонецФункции

// Возвращает строку с именем события добавления трудозатрат по объекту.
//
// Возвращаемое значение:
//   Строка - имя события
//
Функция ИмяСобытияНажатиеСтоимостьЗаявки() Экспорт
	
	Возврат "НажатиеСтоимостьЗаявки";
	
КонецФункции

// Возвращает имя события изменения данных, связанных с профилем разработчика.
//
// Возвращаемое значение:
//   Строка   - имя события
//
Функция ИмяСобытияОбновленияДанныхПрофиляРазработчика() Экспорт
	
	Возврат "Справочник.ПрофильРазработчика.ОбновлениеСвязанныхДанных";
	
КонецФункции

// Возвращает строку с именем события изменения количества в списке заинтересованных лиц.
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияОбновленияКоличестваЗаинтересованныхЛиц() Экспорт
	
	Возврат "ИзменениеСпискаЗаинтересованныхЛиц";
	
КонецФункции

// Проверяет, принадлежит ли оповещение объекту и является ли событием изменения 
// количества заинтересованных лиц.
//
// Параметры:
//  ИмяСобытия - Строка - имя события оповещения.
//  Владелец   - Произвольный - идентификатор объекта.
//  Параметр   - Структура - параметры, пришедшие с оповещением.
//
// Возвращаемое значение:
//  Булево - Истина, оповещение принадлежит владельцу. Ложь, когда оповещение не принадлежит 
//  владельцу.
//
Функция СобытиеОбновленияКоличестваЗаинтересованныхЛиц(Знач ИмяСобытия, Знач Владелец, Знач Параметр) Экспорт
	
	Возврат (ИмяСобытия = ИмяСобытияОбновленияКоличестваЗаинтересованныхЛиц() И Владелец = Параметр);
	
КонецФункции

// Возвращает строку с именем события изменения количества комментариев в РС Комментарии.
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияОбновленияКоличестваКомментариев() Экспорт
	
	Возврат "РегистрыСведений.Комментарии.ОбновлениеКоличестваКомментариев";
	
КонецФункции

// Проверяет, принадлежит ли оповещение объекту и является ли событием изменения 
// количества комментариев в РС Комментарии.
//
// Параметры:
//  ИмяСобытия - Строка - имя события оповещения.
//  Владелец   - Произвольный - идентификатор объекта.
//  Параметр   - Структура - параметры, пришедшие с оповещением.
//
// Возвращаемое значение:
//  Булево - Истина, оповещение принадлежит владельцу. Ложь, когда оповещение не принадлежит 
//  владельцу.
//
Функция СобытиеОбновленияКоличестваКомментариев(Знач ИмяСобытия, Знач Владелец, Знач Параметр) Экспорт
	
	Возврат (ИмяСобытия = ИмяСобытияОбновленияКоличестваКомментариев() 
		И ОбщегоНазначенияВызовСервера.ПолучитьСписокОбъектовДляКомментириев(Владелец).НайтиПоЗначению(Параметр) <> Неопределено);
	
КонецФункции

// Возвращает строку с именем события обновления количества 
//подчиненных объектов для объекта основания внутреннего задания.
//
// Возвращаемое значение:
//   Строка   - имя события
//
Функция ИмяСобытияОбновленияКоличестваПодчиненныхОбъектов() Экспорт
	
	Возврат "ОбновлениеКоличестваПодчиненныхОбъектов";
	
КонецФункции

// Проверяет, принадлежит ли оповещение объекту и является ли событием изменением 
// количества подчиненных объектов для объекта основания внутреннего задания.
//
// Параметры:
//  ИмяСобытия - Строка - имя события оповещения.
//  Владелец   - Произвольный - идентификатор объекта.
//  Параметр   - Структура - параметры, пришедшие с оповещением.
//
// Возвращаемое значение:
//  Булево - Истина, оповещение принадлежит владельцу. Ложь, когда оповещение не принадлежит 
//  владельцу.
//
Функция СобытиеОбновленияКоличестваПодчиненныхОбъектов(Знач ИмяСобытия, Знач Владелец, Знач Параметр) Экспорт
	
	Возврат (ИмяСобытия = ИмяСобытияОбновленияКоличестваПодчиненныхОбъектов() И Владелец = Параметр);
	
КонецФункции

// Возвращает строку с именем события изменения количества сязанных объектов.
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияОбновленияКоличестваСвязанныхОбъектов() Экспорт
	
	Возврат "РегистрыСведений.СвязанныеОбъекты.ОбновлениеКоличестваСвязанныхОбъектов";
	
КонецФункции

// Проверяет, принадлежит ли оповещение объекту и является ли событием изменением 
// количества сязанных объектов.
//
// Параметры:
//  ИмяСобытия - Строка - имя события оповещения.
//  Владелец   - Произвольный - идентификатор объекта.
//  Параметр   - Структура - параметры, пришедшие с оповещением.
//
// Возвращаемое значение:
//  Булево - Истина, оповещение принадлежит владельцу. Ложь, когда оповещение не принадлежит 
//  владельцу.
//
Функция СобытиеОбновленияКоличестваСвязанныхОбъектов(Знач ИмяСобытия, Знач Владелец, Знач Параметр) Экспорт
	
	Возврат (ИмяСобытия = ИмяСобытияОбновленияКоличестваСвязанныхОбъектов() И Владелец = Параметр);
	
КонецФункции

// Возвращает строку с именем события изменения количества присоединенных файлов.
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияОбновленияКоличестваФайлов() Экспорт
	
	Возврат "РегистрСведений.ПрисоединенныеФайлы.ОбновлениеКоличестваФайлов";
	
КонецФункции

// Проверяет, принадлежит ли оповещение объекту и является ли событием изменением 
// количества присоединенных файлов.
//
// Параметры:
//  ИмяСобытия - Строка - имя события оповещения.
//  Владелец   - Произвольный - идентификатор объекта.
//  Параметр   - Структура - параметры, пришедшие с оповещением.
//
// Возвращаемое значение:
//  Булево - Истина, оповещение принадлежит владельцу. Ложь, когда оповещение не принадлежит 
//  владельцу.
//
Функция СобытиеОбновленияКоличестваФайлов(Знач ИмяСобытия, Знач Владелец, Знач Параметр) Экспорт
	
	Возврат (ИмяСобытия = ИмяСобытияОбновленияКоличестваФайлов() И Владелец = Параметр);
	
КонецФункции

// Возвращает строку с именем события обновления количества элементов в матрице требований
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияОбновленияКоличестваЭлементовМатрицыТребований() Экспорт
	
	Возврат "ИзменениеКоличестваЭлементовМатрицыТребований";
	
КонецФункции

// Проверяет, принадлежит ли оповещение объекту и является ли событием изменения 
// количества элементов в матрице требований.
//
// Параметры:
//  ИмяСобытия - Строка - имя события оповещения.
//  Владелец   - Произвольный - идентификатор объекта.
//  Параметр   - Структура - параметры, пришедшие с оповещением.
//
// Возвращаемое значение:
//  Булево - Истина, оповещение принадлежит владельцу. Ложь, когда оповещение не принадлежит 
//  владельцу.
//
Функция СобытиеОбновленияКоличестваЭлементовМатрицыТребований(Знач ИмяСобытия, Знач Владелец, Знач Параметр) Экспорт
	
	Возврат (ИмяСобытия = ИмяСобытияОбновленияКоличестваЭлементовМатрицыТребований() И Владелец = Параметр);
	
КонецФункции

// Возвращает имя события обновления просмотренных задач при групповом внесении трудозатрат.
//
// Возвращаемое значение:
//   Строка - имя события
//
Функция ИмяСобытияОбновленияПросмотренныхЗаявок() Экспорт
	
	Возврат "Обработка.ГрупповоеЗанесениеТрудозатрат.ОбновитьПросмотренныеЗаявки";
	
КонецФункции

// Возвращает имя события обновления распределяемой деятельности при групповом внесении трудозатрат.
//
// Возвращаемое значение:
//   Строка - имя события
//
Функция ИмяСобытияОбновленияРаспределяемойДеятельности() Экспорт
	
	Возврат "Обработка.ГрупповоеЗанесениеТрудозатрат.ОбновитьРаспределяемуюДеятельность";
	
КонецФункции

// Возвращает строку с именем события обновления списка команд в справочнике Филиалы.
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияОбновленияСпискаКоманд() Экспорт
	
	Возврат "Филиалы.ОбновитьСписокКомандРазработки";
	
КонецФункции

// Возвращает строку с именем события пометки удаления элемента справочника ВидыЗадач.
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияПометкиУдаленияВидаЗадачи() Экспорт
	
	Возврат "ВидыЗадач.ПометкаУдаленияВидаЗадачи";
	
КонецФункции

// Возвращает строку с именем события изменения данных в таблице Системы разработки Заявки на разработку.
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияОбновленияТаблицыСистемыРазработки() Экспорт
	
	Возврат "Документ.ЗаявкаНаРазработку.ИзменениеТаблицыСистемыРазработки";
	
КонецФункции

// Проверяет, является ли событие изменением данных в таблице Системы разработки Заявки на разработку.
//
// Параметры:
//  ИмяСобытия - Строка - имя события оповещения.
//
// Возвращаемое значение:
//  Булево - является ли событие изменением данных в таблице Системы разработки Заявки на разработку.
//
Функция СобытиеИзмененияТаблицыСистемыРазработки(Знач ИмяСобытия) Экспорт
	
	Возврат (ИмяСобытия = ИмяСобытияОбновленияТаблицыСистемыРазработки());
	
КонецФункции

// Возвращает строку с именем события обновления спринтов на форме задачи.
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияОбновлениеСпринтовЗадач() Экспорт
	
	Возврат "Документ.Спринт.ОбновлениеСпринтовЗадач";
	
КонецФункции

// Возвращает строку с именем события обновления спринтов на форме заявки на разработку.
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияОбновлениеСпринтовЗаявокНаРазработку() Экспорт
	
	Возврат "Документ.Спринт.ОбновлениеСпринтовЗаявокНаРазработку";
	
КонецФункции

// Возвращает строку с именем события обновления полей ввода плановых трудозатрат
// на форме заявки на разработку.
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияОбновлениеВводаПлановыхТрудозатрат() Экспорт
	
	Возврат "Документ.ЗаявкаНаРазработку.ОбновлениеВводаПлановыхТрудозатрат";
	
КонецФункции

// Возвращает строку с именем события обновления списков инструментов 
// (таких как МоиЗадачи, ОчередьЗаявок, ПулНаТестирование и т.д.).
//
// Возвращаемое значение:
//   Строка - Имя события 
//
Функция ИмяСобытияОбновлениеСписковИнструментов() Экспорт
	
	Возврат "Инструменты.ОбновитьСписки";
	
КонецФункции

// Проверяет, является ли событие обновлением данных в списке инструмента.
//
// Параметры:
//  ИмяСобытия - Строка - имя события оповещения.
//
// Возвращаемое значение:
//  Булево - является ли событие обновлением данных в списке инструмента.
//
Функция СобытиеОбновлениеСписковИнструментов(Знач ИмяСобытия) Экспорт
	
	Возврат (ИмяСобытия = ИмяСобытияОбновлениеСписковИнструментов());
	
КонецФункции

#КонецОбласти
