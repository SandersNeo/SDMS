///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Серверные процедуры и функции работы с с участниками наблюдения за объектами 
// и всем, что связано с ними. Доступны для вызова с клиента.
//
// Серверны интерфейс подсистемы для вызова с клиента.
// - работа с формой владельца интерфейса
// - редактирование участников
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Добавляет участника с ролью Наблюдатель по объекту в регистр сведений "Участники",
// если пользователь еще не является участником по этому объекту. Если является,
// то проставялет признак оповещение на текущие роли.
//
// Параметры:
//   Объект       - ОпределяемыйТип.ОбъектНаблюдения - ссылка на объект БД.
//   Пользователь - ОпределяемыйТип.ПолучательОповещения - ссылка на элемент 
//                   справочника "Пользователи" или "Подписчики".
//
Процедура ПодписатьсяНаОбъект(Знач Объект, Знач Пользователь) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Участники.Роль КАК Роль,
	|	Участники.ПолучатьОповещения КАК ПолучатьОповещения
	|ИЗ
	|	РегистрСведений.Участники КАК Участники
	|ГДЕ
	|	Участники.Объект = &Объект
	|	И Участники.Пользователь = &Пользователь
	|	И НЕ Участники.Скрытый"; 
	
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда 
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл    
			Если НЕ Выборка.ПолучатьОповещения Тогда
				РегистрыСведений.Участники.Изменить(Объект, Пользователь, Выборка.Роль, Истина, Ложь);
			КонецЕсли;
		КонецЦикла;
	Иначе
		РегистрыСведений.Участники.Добавить(Объект, Пользователь, Справочники.РолиУчастников.Наблюдатель);
	КонецЕсли; 
	
КонецПроцедуры

// Добавляет участника с ролью Подписчик по объекту в регистр сведений "Участники",
// если пользователь еще не является наблюдателем с этой ролью по этому объекту. 
//
// Параметры:
//   Объект       - ОпределяемыйТип.ОбъектНаблюдения - ссылка на объект БД.
//   Пользователь - ОпределяемыйТип.ПолучательОповещения - ссылка на элемент 
//                   справочника "Пользователи" или "Подписчики".
//
Процедура ДобавитьПодписчика(Знач Объект, Знач Пользователь) Экспорт
		
	РегистрыСведений.Участники.Добавить(Объект, Пользователь, Справочники.РолиУчастников.Подписчик);

КонецПроцедуры

// Отписывает текущего пользователя от оповещений по объекту
//
// Параметры:
//  Объект       - ОпределяемыйТип.ОбъектНаблюдения - ссылка на объект БД.
//
Процедура Отписаться(Знач Объект) Экспорт
	
	Пользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Участники.Роль КАК Роль,
	|	Участники.ПолучатьОповещения КАК ПолучатьОповещения
	|ИЗ
	|	РегистрСведений.Участники КАК Участники
	|ГДЕ
	|	Участники.Объект = &Объект
	|	И Участники.Пользователь = &Пользователь
	|	И Участники.ПолучатьОповещения";
	
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл		
		Если Выборка.Роль = Справочники.РолиУчастников.Наблюдатель Тогда
			РегистрыСведений.Участники.Изменить(Объект, Пользователь, Выборка.Роль, Ложь, Истина, , Истина); 
		Иначе
			РегистрыСведений.Участники.Изменить(Объект, Пользователь, Выборка.Роль, Ложь, Ложь); 
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти
