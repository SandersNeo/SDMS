///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Процедура ПриОткрытии(Элементы, Знач ЭтоВложеннаяФорма = Ложь) Экспорт 
	
	Если НЕ ИспользоватьНовуюПанельНавигации(Элементы) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоВложеннаяФорма Тогда
		#Если ВебКлиент Тогда
			Элементы.ОтступДляВебКлиента.Видимость = Истина; 
		#КонецЕсли
	Иначе
		#Если ТонкийКлиент Тогда
			Элементы[ПанельНавигацииКлиентСервер.ИмяДекорации()].Шрифт = Новый Шрифт( , , , , , , 190);
		#КонецЕсли
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриПовторномОткрытии(Форма) Экспорт 
		
	ИмяКоманды = Форма.ИмяАктивнойКнопкиПанелиНавигации;
	
	Если ЗначениеЗаполнено(ИмяКоманды) И НЕ ЭтоСтраница(ИмяКоманды) Тогда
		ОткрытьСвязаннуюФорму(Форма, ИмяКоманды, Ложь, Неопределено, Ложь);
	КонецЕсли;
	
КонецПроцедуры
	
Процедура ОбработкаОповещения(Форма, Знач Ссылка, Знач ИмяСобытия, Знач Параметр, Знач Источник) Экспорт  
	
	Если НЕ ИспользоватьНовуюПанельНавигации(Форма.Элементы) Тогда
		Возврат;
	КонецЕсли;
	
	Если СобытияОповещенияКлиент.СобытиеИзменения(ИмяСобытия, Ссылка, Параметр) Тогда		
		ИмяКоманды = "Участники";
	ИначеЕсли СобытияОповещенияКлиент.СобытиеОбновленияКоличестваКомментариев(ИмяСобытия, Ссылка, Параметр) Тогда
		ИмяКоманды = "Комментарии";
	ИначеЕсли СобытияОповещенияКлиент.СобытиеОбновленияКоличестваСвязанныхОбъектов(ИмяСобытия, Ссылка, Параметр) Тогда
		ИмяКоманды = "Связи";
	ИначеЕсли РаботаСФайламиКлиент.ОбработатьПомещениеПрисоединенныхФайловНаСервер(ИмяСобытия, Ссылка, Параметр) 
		ИЛИ СобытияОповещенияКлиент.СобытиеОбновленияКоличестваФайлов(ИмяСобытия, Ссылка, Параметр) Тогда
		
		ИмяКоманды = "Файлы"; 
	ИначеЕсли СобытияОповещенияКлиент.СобытиеОбновленияКоличестваЗаинтересованныхЛиц(ИмяСобытия, Ссылка, Параметр) Тогда
		ИмяКоманды = "ЗаинтересованныеЛица";
	ИначеЕсли СобытияОповещенияКлиент.СобытиеОбновленияКоличестваЭлементовМатрицыТребований(ИмяСобытия, Ссылка, Параметр) Тогда
		ИмяКоманды = "МатрицаТребований";
	Иначе
		ИмяКоманды = Неопределено;
	КонецЕсли;
	
	Если ИмяКоманды = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ОбновитьЗаголовокКнопкиПанелиНавигации(Форма, Ссылка, ИмяКоманды, ИмяКоманды);
	
КонецПроцедуры 

Процедура Нажатие(Форма, Команда, Знач ЭтоВложеннаяФорма = Ложь, Знач ЭтоКомандаПодменю = Ложь, Знач ДополнительныеПараметры = Неопределено) Экспорт 
	
	ИмяКоманды = Команда.Имя; 
		
	Если ИмяКоманды = ПанельНавигацииКлиентСервер.ИмяКнопкиПодменю() Тогда
		НажатиеКнопкиПодменю(Форма, ИмяКоманды, ЭтоВложеннаяФорма);		
	Иначе
		Если ЭтоКомандаПодменю Тогда
			ИмяКоманды = ПанельНавигацииКлиентСервер.ИмяДополнительнойКнопки(ИмяКоманды);
		КонецЕсли;
		
		Элементы = Форма.Элементы;
		ИмяКоманднойПанели = ПанельНавигацииКлиентСервер.ИмяКоманднойПанели();
		
		// Отключаем старую кнопку
		Для Каждого Кнопка Из Элементы[ИмяКоманднойПанели].ПодчиненныеЭлементы Цикл
			Если Кнопка.Пометка Тогда
				ОтключитьКнопку(Кнопка);	 
			КонецЕсли;
			
			// При нажатии кнопки подменю скрываем предыдущую кнопку подменю
			Если ЭтоКомандаПодменю 
				И ЭтоКнопкаПодменю(Кнопка.Имя) 
				И Кнопка.Видимость Тогда
				
				Кнопка.Видимость = Ложь;
			КонецЕсли;
		КонецЦикла;
		
		// Подключаем новую кнопку
		НажатаяКнопка = Элементы[ИмяКоманды];	
		ПодключитьКнопку(НажатаяКнопка);
			
		// Обрабатываем команду
		Если ЭтоСтраница(ИмяКоманды) Тогда
			ОткрытьСтраницу(Форма, ИмяКоманды, ЭтоВложеннаяФорма);  
		Иначе
			ОткрытьСвязаннуюФорму(Форма, ИмяКоманды, ЭтоВложеннаяФорма, ДополнительныеПараметры);	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

Процедура НажатиеВнеПанели(Форма, Знач ИмяКоманды, Знач ДополнительныеПараметры = Неопределено, Знач ЭтоВложеннаяФорма = Ложь) Экспорт
		
	ЭтоКомандаПодменю = НЕ Форма.Элементы[ИмяКоманды].Видимость;
	
	Нажатие(Форма, Новый Структура("Имя", ИмяКоманды), ЭтоВложеннаяФорма, ЭтоКомандаПодменю, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОткрытьСтраницуОбъекта(ФормаОбъекта, ИмяКоманды, Данные) Экспорт
	
	Если НЕ ЭтоСтраница(ФормаОбъекта.ИмяАктивнойКнопкиПанелиНавигации) Тогда
		ИмяФормы = ИмяФормы(ФормаОбъекта.ИмяАктивнойКнопкиПанелиНавигации);
		ПараметрыОткрытия = ПараметрыОткрытияФормы(ИмяФормы, Данные.Ссылка);
		ИмяАктивнойФормы = ПараметрыОткрытия.ИмяФормы;
		
		Для Каждого ФормаОкна Из ФормаОбъекта.Окно.Содержимое Цикл
			Если ФормаОкна.ИмяФормы = ИмяАктивнойФормы Тогда
				Если ФормаОбъекта.ИмяАктивнойКнопкиПанелиНавигации = ИмяКоманды Тогда
					ФормаОкна.Активизировать();
					ФормаОкна.ОбновитьЛенту(Данные.ИдентификаторКомментария);
				Иначе
					НажатиеВнеПанели(ФормаОкна, ИмяКоманды, , Истина);
				КонецЕсли;
				
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ФормаОбъекта.Активизировать();
		НажатиеВнеПанели(ФормаОбъекта, ИмяКоманды);
	КонецЕсли;
	
КонецПроцедуры

// Открывает страницу панели навигации на форме
//
// Параметры:
//  ФормаОбъекта - УправляемаяФорма	 - Форма объекта
//  ИмяСтраницы	 - Строка	 - Имя открываемой страниц
//
Процедура ОткрытьСтраницуНаФорме(ФормаОбъекта, ИмяСтраницы) Экспорт
	
	ШаблонИмениКнопки = ПанельНавигацииКлиентСервер.ШаблонИмениКнопки();	
	
	Если ФормаОбъекта.ИмяАктивнойКнопкиПанелиНавигации = Неопределено Тогда   
		ШаблонИмени = ПанельНавигацииКлиентСервер.ШаблонИмениКнопкиСтраницы();
		ФормаОбъекта.ИмяАктивнойКнопкиПанелиНавигации = СтрШаблон(ШаблонИмени, "СтраницаСвойства");
	КонецЕсли;
	
	ИмяКоманды = СтрШаблон(ШаблонИмениКнопки, ИмяСтраницы);		
	ПанельНавигацииКлиент.ОткрытьСтраницуОбъекта(ФормаОбъекта, ИмяКоманды, Новый Структура("Ссылка", ФормаОбъекта.Объект.Ссылка));
	
КонецПроцедуры   

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции 

Процедура ЗаполнитьПанельНавигации(ЭлементыФормы, ПанельНавигации)

	Для Каждого ЭлементФормы Из ЭлементыФормы Цикл
		СтруктураЭлемента = Новый Структура("Значение, ПодчиненныеЭлементы", Новый Структура, Новый Массив);
		ЗаполнитьЭлементПанелиНавигации(ЭлементФормы, СтруктураЭлемента);
		ПанельНавигации.Добавить(СтруктураЭлемента);				
	КонецЦикла;	

КонецПроцедуры

Процедура ЗаполнитьНастройкиКоманднойПанели(ЭлементыПриемник, ЭлементыИсточник) 
	
	ИмяКоманднойПанели = ПанельНавигацииКлиентСервер.ИмяКоманднойПанели();
	
	СписокСвойств = "Видимость, Пометка, ОтображениеФигуры";
	
	Для Каждого Кнопка Из ЭлементыПриемник[ИмяКоманднойПанели].ПодчиненныеЭлементы Цикл
		ЗаполнитьЗначенияСвойств(Кнопка, ЭлементыИсточник[Кнопка.Имя], СписокСвойств); 	
	КонецЦикла;
	
КонецПроцедуры  

Процедура ЗаполнитьЭлементПанелиНавигации(ЭлементФормы, СтруктураЭлемента) 
	
	СвойстваЭлемента = СтруктураЭлемента.Значение;
	
	ТипЭлемента = ТипЗнч(ЭлементФормы);	
	СвойстваЭлемента.Вставить("Тип", ТипЭлемента); 
	
	Если ТипЭлемента = Тип("ГруппаФормы") И ЭлементФормы.Вид = ВидГруппыФормы.КоманднаяПанель Тогда
		СвойстваЭлемента.Вставить("Имя", ЭлементФормы.Имя);
		СвойстваЭлемента.Вставить("РастягиватьПоГоризонтали", ЭлементФормы.РастягиватьПоГоризонтали);
		
		ЗаполнитьПанельНавигации(ЭлементФормы.ПодчиненныеЭлементы, СтруктураЭлемента.ПодчиненныеЭлементы);
		
	ИначеЕсли ТипЭлемента = Тип("КнопкаФормы") Тогда  
		СвойстваЭлемента.Вставить("Имя", ЭлементФормы.Имя);
		СвойстваЭлемента.Вставить("Заголовок", ЭлементФормы.Заголовок);
		СвойстваЭлемента.Вставить("Отображение", ЭлементФормы.Отображение);
		СвойстваЭлемента.Вставить("Картинка", ЭлементФормы.Картинка);
		СвойстваЭлемента.Вставить("ИмяКоманды", ЭлементФормы.ИмяКоманды);
		СвойстваЭлемента.Вставить("ОтображениеФигуры", ЭлементФормы.ОтображениеФигуры);
		СвойстваЭлемента.Вставить("Видимость", ЭлементФормы.Видимость);
		СвойстваЭлемента.Вставить("ОтображениеФигуры", ЭлементФормы.ОтображениеФигуры);
		СвойстваЭлемента.Вставить("Пометка", ЭлементФормы.Пометка);
	ИначеЕсли ТипЭлемента = Тип("ДекорацияФормы") Тогда 
		СвойстваЭлемента.Вставить("Имя", ЭлементФормы.Имя);	
	КонецЕсли;
	
КонецПроцедуры

Функция ИмяСтраницы(Знач ИмяКоманды)
	
	Возврат СтрЗаменить(СтрЗаменить(ИмяКоманды, "ПанельНавигацииДополнительноСтраница", ""), "ПанельНавигацииСтраница", "");
	
КонецФункции

Функция ИмяФормы(Знач ИмяКоманды)
	
	Возврат СтрЗаменить(СтрЗаменить(ИмяКоманды, "ПанельНавигацииДополнительно", ""), "ПанельНавигации", "");
	
КонецФункции

Функция ИспользоватьНовуюПанельНавигации(ЭлементыФормы)

	Возврат ЭлементыФормы.ГруппаПанельНавигации.ПодчиненныеЭлементы.Количество() > 0;	

КонецФункции

Функция КомандыПодменю(Элементы)

	КомандыПодменю = Новый СписокЗначений;
	
	ИмяКоманднойПанели = ПанельНавигацииКлиентСервер.ИмяКоманднойПанели();
	
	Для Каждого Кнопка Из Элементы[ИмяКоманднойПанели].ПодчиненныеЭлементы Цикл
		Если ЭтоКнопкаПодменю(Кнопка.Имя) Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ Кнопка.Видимость И Кнопка.Доступность Тогда
			КомандыПодменю.Добавить(Кнопка.Имя, Кнопка.Заголовок, , Кнопка.Картинка); 
		КонецЕсли;
	КонецЦикла;
	
	ИмяКнопки = ПанельНавигацииКлиентСервер.ИмяКнопкиНастройкиПодменю();
	КомандыПодменю.Добавить(ИмяКнопки, "Настроить", , БиблиотекаКартинок.Настройка);	
	
	Возврат КомандыПодменю;
	
КонецФункции 

Процедура НажатиеКнопкиПодменю(Форма, Знач ИмяКоманды, Знач ЭтоВложеннаяФорма)
	
	Элементы = Форма.Элементы;
	
	КомандыПодменю = КомандыПодменю(Элементы);
	
	ПараметрыОповещения = Новый Структура("Форма, ЭтоВложеннаяФорма", Форма, ЭтоВложеннаяФорма);
	Оповещение = Новый ОписаниеОповещения("ПослеВыбораИзПодменю", ЭтотОбъект, ПараметрыОповещения);
	
	Форма.ПоказатьВыборИзМеню(Оповещение, КомандыПодменю, Элементы[ИмяКоманды]);	
	
КонецПроцедуры

Процедура НастроитьПодменю(Форма, Знач ЭтоВложеннаяФорма)
	
	Если ЭтоВложеннаяФорма Тогда
		ФормаОбъекта = Форма.ВладелецФормы;
	Иначе
		ФормаОбъекта = Форма;
	КонецЕсли;
	
	СписокКоманд = Новый СписокЗначений;
	
	ЭтоПерваяКнопка = Истина;
	ИмяКоманднойПанели = ПанельНавигацииКлиентСервер.ИмяКоманднойПанели();
	
	Для Каждого Кнопка Из Форма.Элементы[ИмяКоманднойПанели].ПодчиненныеЭлементы Цикл 
		Если ЭтоПерваяКнопка Тогда
			ЭтоПерваяКнопка = Ложь;
			Продолжить;
		КонецЕсли;
		
		Если ЭтоКнопкаПодменю(Кнопка.Имя) Тогда
			Продолжить;
		КонецЕсли;
		
		СписокКоманд.Добавить(Кнопка.Имя, Кнопка.Заголовок, Кнопка.Видимость, Кнопка.Картинка); 
	КонецЦикла;
	
	ПараметрыОповещения = Новый Структура("Форма", Форма);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьНастройкуПанелиНавигации", ЭтотОбъект, ПараметрыОповещения);	
	
	ПараметрыОткрытия = Новый Структура("Ссылка, СписокКоманд", ФормаОбъекта.Объект.Ссылка, СписокКоманд);
	
	ОткрытьФорму("ОбщаяФорма.НастройкаПанелиНавигации", ПараметрыОткрытия, ЭтотОбъект, , , , 
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры 

Процедура ОбновитьЗаголовокКнопкиПанелиНавигации(Форма, Знач Ссылка, Знач ИмяФормы, Знач ЗаголовокПоУмолчанию)

	Заголовок = ПанельНавигацииВызовСервера.ЗаголовокКоманды(Ссылка, ИмяФормы, ЗаголовокПоУмолчанию);
	
	ИмяКнопки = СтрШаблон(ПанельНавигацииКлиентСервер.ШаблонИмениКнопки(), ИмяФормы);
	Форма.Элементы[ИмяКнопки].Заголовок = Заголовок;
	
	ИмяДополнительнойКнопки = ПанельНавигацииКлиентСервер.ИмяДополнительнойКнопки(ИмяКнопки);
	ДополнительнаяКнопка = Форма.Элементы.Найти(ИмяДополнительнойКнопки);
	
	Если ДополнительнаяКнопка <> Неопределено Тогда
		ДополнительнаяКнопка.Заголовок = Заголовок;	
	КонецЕсли;

КонецПроцедуры

Процедура ОбработатьНастройкуПанелиНавигации(СписокКоманд, Параметры) Экспорт
	
	Если СписокКоманд = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма = Параметры.Форма;
	Элементы = Форма.Элементы;	
		
	ИмяКоманднойПанели = ПанельНавигацииКлиентСервер.ИмяКоманднойПанели();  
			
	// Обновляем видимости команд	
	Для Каждого Элемент Из СписокКоманд Цикл
		Элементы[Элемент.Значение].Видимость = Элемент.Пометка;
	КонецЦикла;
	
	// Теперь нужно разобраться с доп кнопками
	Для Каждого Кнопка Из Элементы[ИмяКоманднойПанели].ПодчиненныеЭлементы Цикл
		Если ЭтоКнопкаПодменю(Кнопка.Имя) Тогда
			ИмяОсновнойКнопки = ПанельНавигацииКлиентСервер.ИмяОсновнойКнопки(Кнопка.Имя);
			ОсновнаяКнопка = Элементы[ИмяОсновнойКнопки];
			
			Если Кнопка.Пометка Тогда
				// если доп кнопка стала основной
				Если ОсновнаяКнопка.Видимость Тогда
					ОсновнаяКнопка.Пометка = Истина;
					ОсновнаяКнопка.ОтображениеФигуры = ОтображениеФигурыКнопки.Всегда;
					
					Кнопка.Видимость = Ложь;
					Кнопка.Пометка = Ложь;
					Кнопка.ОтображениеФигуры = ОтображениеФигурыКнопки.ПриАктивности;
				КонецЕсли;
			ИначеЕсли ОсновнаяКнопка.Пометка И НЕ ОсновнаяКнопка.Видимость Тогда
				// если активная основная кнопка стала невидима
				Кнопка.Видимость = Истина;
				Кнопка.Пометка = Истина;
				Кнопка.ОтображениеФигуры = ОтображениеФигурыКнопки.Всегда;
				
				ОсновнаяКнопка.Пометка = Ложь;
				ОсновнаяКнопка.ОтображениеФигуры = ОтображениеФигурыКнопки.ПриАктивности;
			Иначе
				Кнопка.Видимость = Ложь;
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОтключитьКнопку(Кнопка)

	Кнопка.Пометка = Ложь;
	Кнопка.ОтображениеФигуры = ОтображениеФигурыКнопки.ПриАктивности;	

КонецПроцедуры

Процедура ОткрытьСвязаннуюФорму(Форма, Знач ИмяКоманды, Знач ЭтоВложеннаяФорма, Знач ДополнительныеПараметры, Знач ЗаполнитьПанель = Истина)
	
	Если ЭтоВложеннаяФорма Тогда
		ФормаОбъекта = Форма.ВладелецФормы;			
	Иначе
		ФормаОбъекта = Форма;
	КонецЕсли;
	
	ФормаОбъекта.ИмяАктивнойКнопкиПанелиНавигации = ИмяКоманды;
	
	Ссылка = ФормаОбъекта.Объект.Ссылка;
	
	ИмяФормы = ИмяФормы(ИмяКоманды);
	ПараметрыОткрытия = ПараметрыОткрытияФормы(ИмяФормы, Ссылка, ДополнительныеПараметры);	
	
	Если ПараметрыОткрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Если ФормаОбъекта.ИскатьПодчиненныеФормы Тогда 
		НайденноеОкно = ИнтерфейсПриложенияКлиент.НайтиФормуПоИмени(ФормаОбъекта.Окно.Содержимое, ПараметрыОткрытия.ИмяФормы);	
	Иначе
		НайденноеОкно = Неопределено;
		ФормаОбъекта.ИскатьПодчиненныеФормы = Истина;
	КонецЕсли;
	
	Если НайденноеОкно = Неопределено Тогда
		НажатаяКнопка = Форма.Элементы[ИмяКоманды];
		ОбновитьЗаголовокКнопкиПанелиНавигации(Форма, Ссылка, ИмяФормы, НажатаяКнопка.Заголовок);
		
		ПанельНавигации = Новый Массив;
		ЗаполнитьПанельНавигации(Форма.Элементы.ГруппаПанельНавигации.ПодчиненныеЭлементы, ПанельНавигации);
		
		ПараметрыОткрытия.Вставить("ПанельНавигации", ПанельНавигации);	
		
		ОткрытьФорму(ПараметрыОткрытия.ИмяФормы, ПараметрыОткрытия, ФормаОбъекта, 
			ФормаОбъекта.УникальныйИдентификатор, ФормаОбъекта.Окно);
	Иначе
		Если ЗаполнитьПанель Тогда
			ЗаполнитьНастройкиКоманднойПанели(НайденноеОкно.Элементы, Форма.Элементы);
		КонецЕсли;
		
		ОткрытьФорму(НайденноеОкно, ФормаОбъекта.Окно);
	КонецЕсли; 
	
	ОбщегоНазначенияВызовСервера.ОтслеживаниеИспользованияФункциональностиНаСервере(ПараметрыОткрытия.Функциональность, ФормаОбъекта.ИмяФормы);
	
КонецПроцедуры

Процедура ОткрытьСтраницу(Форма, Знач ИмяКоманды, Знач ЭтоВложеннаяФорма)
		
	Если ЭтоВложеннаяФорма Тогда
		ФормаОбъекта = Форма.ВладелецФормы;			
	Иначе
		ФормаОбъекта = Форма;
	КонецЕсли;
	
	ФормаОбъекта.ИмяАктивнойКнопкиПанелиНавигации = ИмяКоманды;
		
	Элементы = ФормаОбъекта.Элементы;	
	Страницы = Элементы.СтраницыДокумента;
	
	ИмяСтраницы = ИмяСтраницы(ИмяКоманды);
	ОткрываемаяСтраница = Элементы[ИмяСтраницы];
	
	Если Страницы.ТекущаяСтраница <> ОткрываемаяСтраница Тогда 
		Страницы.ТекущаяСтраница = ОткрываемаяСтраница;
		ФормаОбъекта.СтраницыДокументаПриСменеСтраницы(Страницы, ОткрываемаяСтраница);			
	КонецЕсли;  
	
	Если ЭтоВложеннаяФорма Тогда
		ЗаполнитьНастройкиКоманднойПанели(Элементы, Форма.Элементы);
				
		#Если ВебКлиент Тогда			
			Для Каждого УправляемаяФорма Из Форма.Окно.Содержимое Цикл	
				Если УправляемаяФорма.УникальныйИдентификатор = ФормаОбъекта.УникальныйИдентификатор Тогда
					ОткрытьФорму(УправляемаяФорма);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		#Иначе
			ФормаОбъекта.Активизировать();
		#КонецЕсли			
	КонецЕсли;
		
КонецПроцедуры

Функция ПараметрыОткрытияФормы(Знач ИмяФормы, Знач Ссылка, Знач ДополнительныеПараметры = Неопределено)          
	
	ПараметрыОткрытия = Новый Структура;

	ПолноеИмяФормы = Неопределено;
	ИмяИсточника = Неопределено;
					
	Если ИмяФормы = "История" Тогда
		ПолноеИмяФормы = "РегистрСведений.ИсторияИзмененийОбъектовПоСобытиям.Форма.ИсторияИзменений";
		ИмяИсточника = "Источник";
		Функциональность = "Открытие вкладки ""История""";
		
	ИначеЕсли ИмяФормы = "Участники" Тогда
		ПолноеИмяФормы = "РегистрСведений.Участники.Форма.УправлениеУчастниками";
		ИмяИсточника = "Объект";
		Функциональность = "Открытие вкладки ""Участники""";
		
	ИначеЕсли ИмяФормы = "Комментарии" Тогда
		ПолноеИмяФормы = "РегистрСведений.Комментарии.Форма.Комментарии";
		ИмяИсточника = "Источник";
		Функциональность = "Открытие вкладки ""Комментарии""";
		
	ИначеЕсли ИмяФормы = "ЗаинтересованныеЛица" Тогда
		ПолноеИмяФормы = "РегистрСведений.ЗаинтересованныеЛица.Форма.СписокЗаинтересованныхЛиц";
		ИмяИсточника = "Объект"; 
		Функциональность = "Открытие вкладки ""Заинтересованные лица""";
		
	ИначеЕсли ИмяФормы = "МатрицаТребований" Тогда
		ПолноеИмяФормы = "Документ.МатрицаТребований.Форма.ФормаДокумента";
		ИмяИсточника = "Основание";  
		Функциональность = "Открытие вкладки ""Матрица требований""";
		
		МатрицаТребований = ОбщегоНазначенияВызовСервера.ПолучитьСсылкуМатрицаТребований(Ссылка);	
		ПараметрыОткрытия.Вставить("Ключ", МатрицаТребований);
		
	ИначеЕсли ИмяФормы = "Файлы" Тогда
		ПолноеИмяФормы = "Справочник.Файлы.Форма.ПрисоединенныеФайлы";
		ИмяИсточника = "Владелец"; 
		Функциональность = "Открытие вкладки ""Файлы""";
		
	ИначеЕсли ИмяФормы = "Связи" Тогда
		ПолноеИмяФормы = "РегистрСведений.СвязанныеОбъекты.Форма.СписокСвязейОбъекта";
		ИмяИсточника = "Источник";
		Функциональность = "Открытие вкладки ""Связи""";

	ИначеЕсли ИмяФормы = "ПланПроекта" Тогда
		ПолноеИмяФормы = "РегистрСведений.ПланыВыполненияПроектов.Форма.ФормаВыполненияПланаПроекта";
		ИмяИсточника = "Владелец"; 
		Функциональность = "Открытие вкладки ""План проекта""";
		
	ИначеЕсли ИмяФормы = "РасчетПриоритета" 
		И ИнтеграцияДополнительныхПодсистемКлиент.ПодсистемаСуществует("ПриоритетПроектовИВнутреннихЗаданий") Тогда
		
		ПолноеИмяФормы = "РегистрСведений.ЗначенияПоказателейПриоритетаПроектовИВнутреннихЗаданий.Форма.ПоказателиПриоритизации";
		ИмяИсточника = "Объект";
		Функциональность = "Открытие вкладки ""Расчет приоритета""";
		
	ИначеЕсли ИмяФормы = "СтруктураПодчиненности" Тогда
		ПолноеИмяФормы = "ОбщаяФорма.СтруктураПодчиненности";
		ИмяИсточника = "ОбъектОтбора";   
		Функциональность = "Открытие вкладки ""Структура подчиненности""";
		
		УИДЗамера = ИнтеграцияДополнительныхПодсистемКлиент.НачатьЗамерВремени(Ложь, 
			"ОбщаяФорма.СтруктураПодчиненности.ОткрытиеФормы");	
		ПараметрыОткрытия.Вставить("УИДЗамера", УИДЗамера);
	КонецЕсли;
		
	Если ЗначениеЗаполнено(ПолноеИмяФормы) Тогда 
		ПараметрыОткрытия.Вставить("ИмяФормы", ПолноеИмяФормы);
		ПараметрыОткрытия.Вставить("Функциональность", Функциональность);
		
		Если ЗначениеЗаполнено(ИмяИсточника) Тогда
			ПараметрыОткрытия.Вставить(ИмяИсточника, Ссылка);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДополнительныеПараметры) Тогда
			Для Каждого Элемент Из ДополнительныеПараметры Цикл
				ПараметрыОткрытия.Вставить(Элемент.Ключ, Элемент.Значение);	
			КонецЦикла;
		КонецЕсли;
	Иначе
		ПараметрыОткрытия = Неопределено;	
	КонецЕсли;

	Возврат ПараметрыОткрытия;

КонецФункции 

Процедура ПодключитьКнопку(Кнопка)
	
	Кнопка.Пометка = Истина;
	Кнопка.Видимость = Истина;
	Кнопка.ОтображениеФигуры = ОтображениеФигурыКнопки.Всегда;		

КонецПроцедуры

Процедура ПослеВыбораИзПодменю(ВыбранныйЭлемент, Параметры) Экспорт 
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма = Параметры.Форма;   
	ЭтоВложеннаяФорма = Параметры.ЭтоВложеннаяФорма;
	
	ИмяКнопкиНастройкиПодменю = ПанельНавигацииКлиентСервер.ИмяКнопкиНастройкиПодменю();
	
	Если ВыбранныйЭлемент.Значение = ИмяКнопкиНастройкиПодменю Тогда
		НастроитьПодменю(Форма, ЭтоВложеннаяФорма);
	Иначе 
		Команда = Новый Структура("Имя", ВыбранныйЭлемент.Значение); 
		Нажатие(Форма, Команда, ЭтоВложеннаяФорма, Истина);
	КонецЕсли;
	
КонецПроцедуры

Функция ЭтоКнопкаПодменю(Знач ИмяКнопки) 
	
	Возврат (СтрНайти(ИмяКнопки, "ПанельНавигацииДополнительно") <> 0);	

КонецФункции

Функция ЭтоСтраница(Знач ИмяКоманды)
	
	Возврат (СтрНайти(ИмяКоманды, "ПанельНавигацииСтраница") <> 0 
		ИЛИ СтрНайти(ИмяКоманды, "ПанельНавигацииДополнительноСтраница") <> 0);
	
КонецФункции

#КонецОбласти
