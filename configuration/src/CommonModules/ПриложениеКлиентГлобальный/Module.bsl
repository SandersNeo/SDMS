///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс 

Процедура Подключаемый_ЗаполнитьМенюИнструментов() Экспорт
	
	ИнструментыКлиент.ЗаполнитьМенюИнструментов();
	
КонецПроцедуры
// Обработчик проверки и сохранения списка открытых окон клиентского приложения.
// Первый запуск должен быть через 2 минуты, а последующие через 30 секунд.
// Подключается в процедуре 
// ПриложениеКлиент.ПриНачалеРаботыСистемыПослеВыполненияПроверок().
//
Процедура Подключаемый_ПервоеСохранениеСпискаОткрытыхОконКлиентскогоПриложения() Экспорт
	
	ПриложениеКлиент.СохранениеСпискаОткрытыхОконКлиентскогоПриложения();
	ПодключитьОбработчикОжидания("Подключаемый_СохранениеСпискаОткрытыхОконКлиентскогоПриложения", 30);

КонецПроцедуры

// Обработчик проверки блокировки сеансов с информационной базой. Подключается
// в процедуре ПриложениеКлиент.ПриНачалеРаботыСистемыПослеВыполненияПроверок().
//
Процедура Подключаемый_ПроверкаБлокировкиСеансовИнформационнойБазы() Экспорт
	
	ПараметрыБлокировки = ПриложениеВызовСервера.ПолучитьБлокировкуСеансовПользователей();
	Если ПараметрыБлокировки.Установлена = Истина Тогда
		
		// Сервер может потребовать от клиента автоматически принудительно завершить сеанс,
		// если он не был завершен за требуемое время. В противном случае пользователю
		// выдается только предупреждение.
		Если ПараметрыБлокировки.ЗавершитьСеанс = Истина Тогда
			ПрекратитьРаботуСистемы();
		Иначе
			ТекстСообщения = СтрШаблон("Администратором установлено ограничение на работу в системе. "
                                     + "%1 пользователи автоматически будут отключены. "
				                     + "Пожалуйста, заранее сохраните все изменения.",
				                     ПараметрыБлокировки.ВремяОтключенияСеанса);
					   
			ПоказатьОповещениеПользователя("Завершение работы системы SDMS", , ТекстСообщения,
				БиблиотекаКартинок.Предупреждение32, СтатусОповещенияПользователя.Важное,
				"БлокировкаСеансовИнформационнойБазы");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик проверки наличия изменений в конфигурации БД, которые внесены
// динамически. Подключается в процедуре 
// ПриложениеКлиент.ПриНачалеРаботыСистемыПослеВыполненияПроверок().
//
Процедура Подключаемый_ПроверкаДинамическогоИзмененияКонфигурацииБазыДанных() Экспорт
	
	Если ПриложениеВызовСервера.КонфигурацияБазыДанныхОбновленаДинамически() Тогда
		ТекстСообщения = "В конфигурацию информационной базы SDMS внесены изменения. "
                       + "Для того, чтобы эти изменения вступили в силу, необходимо "
                       + "перезапустить текущий пользовательский сеанс.";
			
		ПоказатьОповещениеПользователя("Обновление системы SDMS",
			Новый ОписаниеОповещения("НачатьПерезапускТекущегоСеанса", ПриложениеКлиент), 
			ТекстСообщения, БиблиотекаКартинок.ОповещенияБазыДанных, 
			СтатусОповещенияПользователя.Важное,
			"СистемныеОповещения.ДинамическоеОбновлениеКонфигурации");
	КонецЕсли;	
	
КонецПроцедуры

// Обработчик проверки и сохранения списка открытых окон клиентского приложения.
// Подключается в процедуре 
// ПриложениеКлиент.ПриНачалеРаботыСистемыПослеВыполненияПроверок().
//
Процедура Подключаемый_СохранениеСпискаОткрытыхОконКлиентскогоПриложения() Экспорт
	
	ПриложениеКлиент.СохранениеСпискаОткрытыхОконКлиентскогоПриложения();
	
КонецПроцедуры

#КонецОбласти
