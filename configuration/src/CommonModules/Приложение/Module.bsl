///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Настраивает состав форм и панелей в соответствии с ролями для
// пользователя.
//
Процедура НастроитьИнтерфейсКлиентскогоПриложения() Экспорт
	
	Пользователь = ПараметрыСеанса.ТекущийПользователь;
	
	// Проверим рабочий стол в настройках пользователя. Если она Неопределена, то дальше
	// определяем рабочий стол для пользователя.
	ОсновнойИнструмент = ИнструментыСервер.ПолучитьОсновнойИнструмент(Пользователь);
	
	СоставФорм = Новый СоставФормНачальнойСтраницы;
	СоставФорм.ЛеваяКолонка.Добавить(ОсновнойИнструмент);
	
	НачальнаяСтраница = Новый НастройкиНачальнойСтраницы;
	НачальнаяСтраница.УстановитьСоставФорм(СоставФорм);
	
	ХранилищеСистемныхНастроек.Сохранить("Общее/НастройкиНачальнойСтраницы", "", НачальнаяСтраница);
	
КонецПроцедуры

// Возращает ссылку на запись справочника "Пользователи", связанную с пользователем 
// информационной базы по уникальному идентификатору.
//
// Возвращаемое значение:
//  СправочникСсылка.Пользователи.
//
Функция ПолучитьТекущегоПользователя() Экспорт
	
	Пользователь = Справочники.Пользователи.ПустаяСсылка();
	ПользовательИБ = ПользователиИнформационнойБазы.ТекущийПользователь();
	
	Если ПользовательИБ.УникальныйИдентификатор <> Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Пользователь
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.ИдентификаторПользователяИБ = &ИдентификаторПользователяИБ";
		
		Запрос.УстановитьПараметр("ИдентификаторПользователяИБ", ПользовательИБ.УникальныйИдентификатор);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			
			Пользователь = Выборка.Пользователь;
		КонецЕсли;
	КонецЕсли;
			
	Возврат Пользователь;
	
КонецФункции

// Удаляет из строки домен с точкой перед ним
//
// Параметры:
//  ИсходнаяСтрока  - Строка - любая строка, которая может содержать домен
//
// Возвращаемое значение:
//   Строка   - Строка без домена
//
Функция СтрокаБезДомена(Знач ИсходнаяСтрока) Экспорт
	
	Домен = Константы.ДоменСервераИнформационнойБазы.Получить();	
	ДоменСТочкой = СтрШаблон(".%1", Домен);
	
	Возврат СтрЗаменить(ИсходнаяСтрока, ДоменСТочкой, "");

КонецФункции

#КонецОбласти
