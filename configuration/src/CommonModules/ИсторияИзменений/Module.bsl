///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер ИЛИ ВнешнееСоединение ИЛИ ТолстыйКлиентОбычноеПриложение Тогда

#Область ПрограммныйИнтерфейс

// Сравнивает описания объекта до и после записи. В случае если описания различаются,
//  записывает их в регистр сведений ОчередьСравненияИзмененийОписанийОбъектов
//
// Параметры:
//  Ссылка					- ОбъектИсторииИзменений - ссылка на объект, описание которого нужно сравнить
//  ОписаниеДоЗаписи		- ХранилищеЗначения		 - описание до изменения объекта
//  ОписаниеПослеЗаписи	 	- ХранилищеЗначения		 - описания после записи объекта
//  ЕстьИзмененияОписания 	- Булево				 - признак изменения описания
//
Функция СравнитьОписанияОбъектаПриЗаписи(Знач Ссылка, Знач ОписаниеДоЗаписи, Знач ОписаниеПослеЗаписи, Знач ЕстьИзмененияОписания, Знач ВидОписания = Неопределено) Экспорт
		
	ТипХранилищеЗначения = Тип("ХранилищеЗначения");
	ОписаниеИзменилось = Ложь;
	
	// Переданные описания должны иметь тип ХранилищеЗначения
	Если ТипЗнч(ОписаниеДоЗаписи) = ТипХранилищеЗначения И ТипЗнч(ОписаниеПослеЗаписи) = ТипХранилищеЗначения Тогда
		
		// Получаем значения описаний
		ТекстСтарогоОписания = ОписаниеДоЗаписи.Получить();
		ТекстНовогоОписания = ОписаниеПослеЗаписи.Получить();
		
		ТипСтрока = Тип("Строка");
		ОписанияЭтоСтроки = (ТипЗнч(ТекстСтарогоОписания) = ТипСтрока И ТипЗнч(ТекстНовогоОписания) = ТипСтрока);
		
		Если ОписанияЭтоСтроки Тогда			
			Если ЕстьИзмененияОписания = Неопределено Тогда
				СравнениеЗначений = Новый СравнениеЗначений;
				ОписаниеИзменилось = (СравнениеЗначений.Сравнить(ТекстСтарогоОписания, ТекстНовогоОписания) <> 0);
			Иначе
				ОписаниеИзменилось = ЕстьИзмененияОписания;
			КонецЕсли;
			
			Если ОписаниеИзменилось Тогда
				РегистрОчередиСравненийОписаний = РегистрыСведений.ОчередьСравненияИзмененийОписанийОбъектов;
				РегистрОчередиСравненийОписаний.Добавить(Ссылка, ТекстСтарогоОписания, ТекстНовогоОписания, ВидОписания);
			КонецЕсли;
		Иначе
			ШаблонСтроки = "Несоответствие типов. Старое описание: %1, новое описание: %2";
			ТекстОшибки = СтрШаблон(ШаблонСтроки, ТипЗнч(ТекстСтарогоОписания), ТипЗнч(ТекстНовогоОписания));
			
			ИмяСобытия = "СравнениеОписанияОбъектаПриЗаписи";
			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, Ссылка.Метаданные(), Ссылка, ТекстОшибки);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ОписаниеИзменилось;
	
КонецФункции

// Функция - Сформировать шаблон истории делегирования
//
// Параметры:
//  Заявка		 - ДокументСсылка.ЗаявкаНаРазработку 	 - Заявки - объект для записи
//  НовыйАвтор	 - СправочникСсылка.Пользователи	     - Новый автор заявки
//  АвторЗаявки	 - СправочникСсылка.Пользователи	     - Старый автор заявки
// 
// Возвращаемое значение:
//  СтруктураСообщение - Структура - Содержит щаблон для истории изменения объекта по событиям 
//
Функция СформироватьШаблонИсторииДелегирования(Знач Заявка, Знач НовыйАвтор, Знач АвторЗаявки) Экспорт
			
	Шаблоны = РегистрыСведений.ОчередьОтправкиЭлектронныхПисем.ШаблоныИзмененныхРеквизитов();
	
	СтароеЗначение = СтрЗаменить(Шаблоны.СтароеЗначение, "<!-- value -->", АвторЗаявки);
	НовоеЗначение = СтрЗаменить(Шаблоны.НовоеЗначение, "<!-- value -->", НовыйАвтор);
	
	СтрокаЗначений =  СтрШаблон("%1 на %2", СтароеЗначение, НовоеЗначение);
	
	ДанныеСтруктура = Новый Структура("Событие, СтароеЗначение, НовоеЗначение", 
		"Делегирование", Строка(АвторЗаявки), Строка(НовыйАвтор));
	
	СтруктураСообщение = ОбщегоНазначения.ПолучитьСтруктуруДанныхДляЗаписиВИсторию(Ложь);
	СтруктураСообщение.Данные = ЗаписатьЗначениеJSON(ДанныеСтруктура);
	СтруктураСообщение.Категория = Перечисления.КатегорииСобытийИсторияИзменений.Прочее;
	
	Возврат СтруктураСообщение;
	
КонецФункции

#КонецОбласти

#КонецЕсли
