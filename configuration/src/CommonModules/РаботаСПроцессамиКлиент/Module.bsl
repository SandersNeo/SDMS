///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Процедура УстановитьСтатусПоКнопке(Знач Команда, Знач Задача, КэшВспомогательныхДанных) Экспорт

	ИдентификаторСтатуса = СтрЗаменить(Команда, "УстановитьСтатус_", "");

	Для Каждого ЭлементСписка Из КэшВспомогательныхДанных.Получить("КэшСтатусов") Цикл
		Если ЭлементСписка.Представление = ИдентификаторСтатуса Тогда
			НовыйСтатус = ЭлементСписка.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ЕстьОшибка = Ложь;
	
	// Проверка на возможность изменения статуса
	Если НовыйСтатус = ПредопределенноеЗначение("Справочник.СтатусыОбъектов.Решен") Тогда
		Если ОбщегоНазначенияКлиент.ПроверитьВозможностьУстановкиСтатуса(КэшВспомогательныхДанных.Получить(
			"ТребуетсяПубликация"), НовыйСтатус, ПредопределенноеЗначение("Справочник.СтатусыОбъектов.Решен")) Тогда
			ЕстьОшибка = Истина;
		КонецЕсли;
	КонецЕсли;

	Если ЕстьОшибка Тогда
		Возврат;
	КонецЕсли;

	// Нужно получить на кого назначать статус
	ДопРеквизиты = Новый Структура;
	ДопРеквизиты.Вставить("ИсполнителяCodeReviewНазначаетРуководитель", КэшВспомогательныхДанных.Получить(
		"ИсполнителяCodeReviewНазначаетРуководитель"));
	ДопРеквизиты.Вставить("Ревьюер", КэшВспомогательныхДанных.Получить("Ревьюер"));

	НовыйИсполнитель = РаботаСПроцессамиВызовСервера.ПолучитьНовогоИсполнителяЗадачи(Задача, НовыйСтатус, ДопРеквизиты);

	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Статус", НовыйСтатус);
	ПараметрыОповещения.Вставить("Задача", Задача);
	ПараметрыОповещения.Вставить("ЕстьНезакрытыйПериод", КэшВспомогательныхДанных.Получить("ЕстьНезакрытыйПериод"));
	ПараметрыОповещения.Вставить("КэшВспомогательныхДанных", КэшВспомогательныхДанных);

	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаИзмененияСтатуса", ЭтотОбъект, ПараметрыОповещения);

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ТребуетсяКомментарий", Ложь);
	ПараметрыОткрытия.Вставить("НовыйСтатус", НовыйСтатус);
	ПараметрыОткрытия.Вставить("Назначена", НовыйИсполнитель);
	ПараметрыОткрытия.Вставить("Объект", Задача);
	ПараметрыОткрытия.Вставить("ПараметрыОповещения", ПараметрыОповещения);

	Если НовыйСтатус = ПредопределенноеЗначение("Справочник.СтатусыОбъектов.Отклонен") Или (НовыйСтатус
		= ПредопределенноеЗначение("Справочник.СтатусыОбъектов.Приостановлен") И Не КэшВспомогательныхДанных.Получить(
		"ЕстьНезакрытыйПериод")) Тогда
		ПараметрыОткрытия.ТребуетсяКомментарий = Истина;
	КонецЕсли;

	ОткрытьФорму("ОбщаяФорма.ИзменениеСтатуса", ПараметрыОткрытия, ЭтотОбъект, , , , ОписаниеОповещения);

КонецПроцедуры

#КонецОбласти

#Область Служебные

Процедура ОбработкаИзмененияСтатуса(Результат, ДополнительныеРеквизиты) Экспорт

	Если Результат <> Неопределено Тогда

		Если ТипЗнч(Результат) = Тип("Структура") И Результат.Свойство("ПереоткрытиеФормы") Тогда
			Возврат;
		КонецЕсли;

		РаботаСПроцессамиВызовСервера.ОбновитьСтатусЗадачи(ДополнительныеРеквизиты, Результат);
		Оповестить(СобытияОповещенияКлиент.ИмяСобытияОбновлениеСписковИнструментов());
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
