///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Открывает форму дополнительных реквизитов для объекта
//
// Параметры:
//  Объект	 - ОпределяемыйТип.ВладелецДополнительныхРеквизитов	 - объект
//  Форма	 - УправляемаяФорма	 - форма
//
Процедура ОткрытьФормуДополнительныхРеквизитов(Знач Объект, Форма) Экспорт
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Объект", Объект);
	ПараметрыОткрытия.Вставить("АдресДополнительныхРеквизитов", Форма[ДополнительныеРеквизитыКлиентСервер.ИмяРеквизитаАдреса()]);
	
	// Проверяем наличие служебного реквизита формы, который говорит о том, что доп реквизиты находятся на форме
	ИмяСлужебногоРеквизита = ДополнительныеРеквизитыКлиентСервер.ПолучитьИмяСлужебногоРеквизита();
	
	Попытка
		Реквизит = Форма[ИмяСлужебногоРеквизита];
		ВыводитьДопРеквизитыНаФорму = Истина;
	Исключение
		ВыводитьДопРеквизитыНаФорму = Ложь;
	КонецПопытки;
	
	Если ВыводитьДопРеквизитыНаФорму Тогда	
		ЗначенияРеквизитов = Новый Соответствие;
		
		// Заполняем соответствие с значениями реквизитов из формы и передаем его в форму дополнительных реквизитов
		Группа = Форма.Элементы.Найти(ДополнительныеРеквизитыКлиентСервер.ПолучитьИмяГруппыВыводаДопРеквизитов());
		
		Для Каждого Элемент Из Группа.ПодчиненныеЭлементы Цикл
			Если ТипЗнч(Элемент) = Тип("ДекорацияФормы") Тогда
				Продолжить;
			КонецЕсли;
			
			ЗначенияРеквизитов.Вставить(Элемент.Имя, Форма[Элемент.Имя]);	
		КонецЦикла;	
		
		ПараметрыОткрытия.Вставить("ЗначенияРеквизитов", ЗначенияРеквизитов);
	КонецЕсли;	
		
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыДополнительныхРеквизитов", 
		ДополнительныеРеквизитыКлиент, Форма);
		
	ОткрытьФорму("ОбщаяФорма.ДополнительныеРеквизиты", ПараметрыОткрытия, Форма, Форма.КлючУникальности, , , 
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Удаляет данные из временного хранилища
//
// Параметры:
//  Форма			 - УправляемаяФорма	 - форма
//  ЗавершениеРаботы - Булево			 - признак завершения работы
//
Процедура ПередЗакрытиемФормы(Знач Форма, Знач ЗавершениеРаботы) Экспорт
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;

	ИмяРеквизита = ДополнительныеРеквизитыКлиентСервер.ИмяРеквизитаАдреса();
	
	БылаОшибка = Ложь;
	Попытка
		ЗначениеРеквизита = Форма[ИмяРеквизита];
	Исключение
		БылаОшибка = Истина;
	КонецПопытки;
	
	Если НЕ БылаОшибка Тогда
		Если ЭтоАдресВременногоХранилища(ЗначениеРеквизита) Тогда
			УдалитьИзВременногоХранилища(ЗначениеРеквизита);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Обработчик оповещения закрытия формы дополнительных реквизитов
//
// Параметры:
//  Результат	 - Булево, Неопределено	 - результат закрытия формы
//  Форма		 - УправляемаяФорма	 - форма
//
Процедура ОбработатьЗакрытиеФормыДополнительныхРеквизитов(Результат, Форма) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// В Результат находится признак сохранения дополнительных реквизитов.
	// Если Истина, то нужно установить модифицированность у окна формы
	Если Результат Тогда
		Форма.Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
