///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Функция ЗаписатьПланПроекта(ПланПроекта, Проект) Экспорт
	
	Результат = Истина;
	
	НаборЗаписей = РегистрыСведений.ПланыВыполненияПроектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Проект);
	
	ДокументыПлана = Новый Соответствие;
	
	НачатьТранзакцию();
	Попытка                
		БлокировкаДанных = Новый БлокировкаДанных();
		ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.ПланыВыполненияПроектов");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Объект", Проект);
		БлокировкаДанных.Заблокировать();
		
		// для корректной перезаписи документов, когда есть чужие черновики
		УстановитьПривилегированныйРежим(Истина);

		ЗаполнитьПлан(НаборЗаписей, ПланПроекта, Проект, ДокументыПлана);
		НаборЗаписей.Записать();
		
		ЗаписатьДокументы(ДокументыПлана);

		УстановитьПривилегированныйРежим(Ложь);
		
		ЗафиксироватьТранзакцию();
	Исключение
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		
		Результат = Ложь;
		Текст = "Не удалось записать изменения: " + ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("ПланыВыполненияПроектов.ЗаписьПлана", УровеньЖурналаРегистрации.Ошибка, , , Текст); 
	КонецПопытки;

	Возврат Результат;
		
КонецФункции

Процедура ЗаполнитьВетвьДерева(Ветка, Знач ТаблицаПодчиненных, Знач ИмяКолонкиОтбора, Знач ИмяЗначения, 
	Знач РолиУчастников = Неопределено, Знач ДокументыПлана = Неопределено, Знач ФайлыПлана = Неопределено) Экспорт
	
	Если ТаблицаПодчиненных <> Неопределено Тогда
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить(ИмяКолонкиОтбора, Ветка[ИмяЗначения]);
		ПодчиненныеСтроки = ТаблицаПодчиненных.НайтиСтроки(ПараметрыОтбора);
		
		Для Каждого Строка Из ПодчиненныеСтроки Цикл
			НоваяВетка = Ветка.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НоваяВетка, Строка);
			
			ЗаполнитьУчастников(НоваяВетка, РолиУчастников);
			Если ДокументыПлана <> Неопределено Тогда
				ЗаполнитьДокументы(НоваяВетка, ДокументыПлана, НоваяВетка.КлючСобытия);
			КонецЕсли;
			
			Если ФайлыПлана <> Неопределено Тогда
				ЗаполнитьФайлы(НоваяВетка, ФайлыПлана, НоваяВетка.КлючСобытия);
			КонецЕсли;
			
			//TO DO: восстановить, если понадобится представление статуса, иначе удалить
			//
			//Если ИмяЗначения = "КлючСобытия" Тогда
			//	Если Строка.КонтрольнаяТочка Тогда
			//		НоваяВетка.КонтрольнаяТочка = БиблиотекаКартинок.Кредит;
			//	КонецЕсли;
			//	
			//	Если СтрНачинаетсяС(Строка.ДокументПредставление, "<Объект не найден>") Тогда
			//		НоваяВетка.ДокументПредставление = "ЧЕРНОВИК";
			//		НоваяВетка.ЭтоДокументЧерновик = Истина;
			//		
			//		НоваяВетка.ПредставлениеСтатуса = СтрШаблон("%1 (Черновик)", Строка.ПредставлениеСтатуса);
			//	КонецЕсли;
			//	
			//	Если Строка.ЭтоЧерновик Тогда
			//		НоваяВетка.ПредставлениеСтатуса = СтрШаблон("%1 (Черновик)", Строка.ПредставлениеСтатуса);
			//	КонецЕсли;
			//КонецЕсли;
			
			ЗаполнитьВетвьДерева(НоваяВетка, ТаблицаПодчиненных, 
				ИмяКолонкиОтбора, ИмяЗначения, РолиУчастников, ДокументыПлана, ФайлыПлана);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьУчастников(Строка, РолиУчастников) Экспорт
	
	Если РолиУчастников <> Неопределено Тогда
		Отбор = Новый Структура("Объект", Строка.Объект);
		Участие = Новый Массив;
		
		Пока РолиУчастников.НайтиСледующий(Отбор) Цикл
			Участие.Добавить(РолиУчастников.Представление);
		КонецЦикла;
		
		Строка.Участие = СтрСоединить(Участие, "; ");
		
		РолиУчастников.Сбросить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПланПроектов(Форма, Знач Проект, Знач ОткрытиеИзОтчета = Ложь) Экспорт
	
	Форма.ПланПроекта.ПолучитьЭлементы().Очистить();
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	#Область ТекстЗапроса
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПланыВыполненияПроектов.КлючСобытия КАК КлючСобытия,
	|	ПланыВыполненияПроектов.ВладелецСобытия КАК ВладелецСобытия,
	|	ПланыВыполненияПроектов.НазваниеСобытия КАК НазваниеСобытия,
	|	ПланыВыполненияПроектов.ДатаНачала_План КАК ДатаНачала_План,
	|	ПланыВыполненияПроектов.ДатаОкончания_План КАК ДатаОкончания_План,
	|	ПланыВыполненияПроектов.ПланируемыйСрок КАК ПланируемыйСрок,
	|	ПланыВыполненияПроектов.ДатаНачала_Факт КАК ДатаНачала_Факт,
	|	ПланыВыполненияПроектов.ДатаОкончания_Факт КАК ДатаОкончания_Факт,
	|	ПланыВыполненияПроектов.КонтрольнаяТочка КАК КонтрольнаяТочка,
	|	ПланыВыполненияПроектов.Ответственный КАК Ответственный,
	|	ПланыВыполненияПроектов.Комментарий КАК Комментарий,
	|	ПланыВыполненияПроектов.Порядок КАК Порядок,
	|	ПланыВыполненияПроектов.ДатаРедактирования КАК ДатаРедактирования,
	|	ПланыВыполненияПроектов.Автор КАК Автор,
	|	ПланыВыполненияПроектов.ВладелецСобытия КАК ВладелецСобытияДо,
	|	ПланыВыполненияПроектов.Порядок КАК ПорядокДо,
	|	ПланыВыполненияПроектов.ПроцентВыполнения КАК ПроцентВыполнения,
	|	ПланыВыполненияПроектов.ЭтоГруппа КАК ЭтоГруппа,
	|	ПланыВыполненияПроектов.Предшественник КАК Предшественник,
	|	ПланыВыполненияПроектов.Статус КАК Статус,
	|	ПРЕДСТАВЛЕНИЕ(ПланыВыполненияПроектов.Статус) КАК ПредставлениеСтатуса
	|ПОМЕСТИТЬ ПланыПроектов
	|ИЗ
	|	РегистрСведений.ПланыВыполненияПроектов КАК ПланыВыполненияПроектов
	|ГДЕ
	|	ПланыВыполненияПроектов.Объект = &Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыПланаПроекта.КлючСобытия КАК КлючСобытия,
	|	ДокументыПланаПроекта.Документ КАК Документ,
	|	ПРЕДСТАВЛЕНИЕ(ДокументыПланаПроекта.Документ) КАК ДокументПредставление
	|ПОМЕСТИТЬ ДокументыПлана
	|ИЗ
	|	ПланыПроектов КАК ПланыПроектов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыПланаПроекта КАК ДокументыПланаПроекта
	|		ПО ПланыПроектов.КлючСобытия = ДокументыПланаПроекта.КлючСобытия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПланыПроектов.КлючСобытия КАК КлючСобытия,
	|	ДокументыПланаПроекта.Документ КАК Документ,
	|	ЗаявкаНаРазработку.Номер + "". "" + ЗаявкаНаРазработку.Наименование КАК Представление,
	|	ЗаявкаНаРазработку.Автор КАК Заказчик,
	|	ЕСТЬNULL(МинимальныеСтатусыЗаявок.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.Новый)) КАК Статус,
	|	ЗаявкаНаРазработку.Черновик КАК ЭтоЧерновик
	|ПОМЕСТИТЬ ПредставленияОбъектов
	|ИЗ
	|	ПланыПроектов КАК ПланыПроектов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыПланаПроекта КАК ДокументыПланаПроекта
	|		ПО ПланыПроектов.КлючСобытия = ДокументыПланаПроекта.КлючСобытия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку КАК ЗаявкаНаРазработку
	|		ПО ((ВЫРАЗИТЬ(ДокументыПланаПроекта.Документ КАК Документ.ЗаявкаНаРазработку)) = ЗаявкаНаРазработку.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальныеСтатусыЗаявок КАК МинимальныеСтатусыЗаявок
	|		ПО (ЗаявкаНаРазработку.Ссылка = МинимальныеСтатусыЗаявок.Заявка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПланыПроектов.КлючСобытия,
	|	ДокументыПланаПроекта.Документ,
	|	ВнутреннееЗадание.Номер + "". "" + ВнутреннееЗадание.Наименование,
	|	ВнутреннееЗадание.Заказчик,
	|	ВнутреннееЗадание.Статус,
	|	ЛОЖЬ
	|ИЗ
	|	ПланыПроектов КАК ПланыПроектов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыПланаПроекта КАК ДокументыПланаПроекта
	|		ПО ПланыПроектов.КлючСобытия = ДокументыПланаПроекта.КлючСобытия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееЗадание КАК ВнутреннееЗадание
	|		ПО ((ВЫРАЗИТЬ(ДокументыПланаПроекта.Документ КАК Документ.ВнутреннееЗадание)) = ВнутреннееЗадание.Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПланыПроектов.КлючСобытия,
	|	ДокументыПланаПроекта.Документ,
	|	Проекты.Код + "". "" + Проекты.Наименование,
	|	Проекты.Заказчик,
	|	Проекты.Статус,
	|	ЛОЖЬ
	|ИЗ
	|	ПланыПроектов КАК ПланыПроектов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыПланаПроекта КАК ДокументыПланаПроекта
	|		ПО ПланыПроектов.КлючСобытия = ДокументыПланаПроекта.КлючСобытия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Проекты КАК Проекты
	|		ПО ((ВЫРАЗИТЬ(ДокументыПланаПроекта.Документ КАК Справочник.Проекты)) = Проекты.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланыПроектов.КлючСобытия КАК КлючСобытия,
	|	ПланыПроектов.НазваниеСобытия КАК НазваниеСобытия,
	|	ПланыПроектов.ДатаНачала_План КАК ДатаНачала_План,
	|	ПланыПроектов.ДатаОкончания_План КАК ДатаОкончания_План,
	|	ПланыПроектов.ПланируемыйСрок КАК ПланируемыйСрок,
	|	ПланыПроектов.ДатаНачала_Факт КАК ДатаНачала_Факт,
	|	ПланыПроектов.ДатаОкончания_Факт КАК ДатаОкончания_Факт,
	|	ПланыПроектов.Комментарий КАК Комментарий,
	|	ПланыПроектов.Ответственный КАК Ответственный,
	|	ПланыПроектов.Порядок КАК Порядок,
	|	ПланыПроектов.ДатаРедактирования КАК ДатаРедактирования,
	|	ПланыПроектов.Автор КАК Автор,
	|	ПланыПроектов.ВладелецСобытия КАК ВладелецСобытияДо,
	|	ПланыПроектов.Порядок КАК ПорядокДо,
	|	ИСТИНА КАК СтрокаПервогоУровня,
	|	ПланыПроектов.КонтрольнаяТочка КАК КонтрольнаяТочка,
	|	ПланыПроектов.ПроцентВыполнения КАК ПроцентВыполнения,
	|	ПланыПроектов.ЭтоГруппа КАК ЭтоГруппа,
	|	ПланыПроектов.Предшественник КАК Предшественник,
	|	ПланыПроектов.Статус КАК Статус,
	|	ПланыПроектов.ПредставлениеСтатуса КАК ПредставлениеСтатуса
	|ИЗ
	|	ПланыПроектов КАК ПланыПроектов
	|ГДЕ
	|	ПланыПроектов.ВладелецСобытия = &ПустойИдентификатор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланыПроектов.КлючСобытия КАК КлючСобытия,
	|	ПланыПроектов.ВладелецСобытия КАК ВладелецСобытия,
	|	ПланыПроектов.НазваниеСобытия КАК НазваниеСобытия,
	|	ПланыПроектов.ДатаНачала_План КАК ДатаНачала_План,
	|	ПланыПроектов.ДатаОкончания_План КАК ДатаОкончания_План,
	|	ПланыПроектов.ПланируемыйСрок КАК ПланируемыйСрок,
	|	ПланыПроектов.ДатаНачала_Факт КАК ДатаНачала_Факт,
	|	ПланыПроектов.ДатаОкончания_Факт КАК ДатаОкончания_Факт,
	|	ПланыПроектов.Ответственный КАК Ответственный,
	|	ПланыПроектов.Комментарий КАК Комментарий,
	|	ПланыПроектов.Порядок КАК Порядок,
	|	ПланыПроектов.ДатаРедактирования КАК ДатаРедактирования,
	|	ПланыПроектов.Автор КАК Автор,
	|	ПланыПроектов.ВладелецСобытия КАК ВладелецСобытияДо,
	|	ПланыПроектов.Порядок КАК ПорядокДо,
	|	ПланыПроектов.КонтрольнаяТочка КАК КонтрольнаяТочка,
	|	ПланыПроектов.ПроцентВыполнения КАК ПроцентВыполнения,
	|	ПланыПроектов.ЭтоГруппа КАК ЭтоГруппа,
	|	ПланыПроектов.Предшественник КАК Предшественник,
	|	ПланыПроектов.Статус КАК Статус,
	|	ПланыПроектов.ПредставлениеСтатуса КАК ПредставлениеСтатуса
	|ИЗ
	|	ПланыПроектов КАК ПланыПроектов
	|ГДЕ
	|	ПланыПроектов.ВладелецСобытия <> &ПустойИдентификатор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыПлана.КлючСобытия КАК КлючСобытия,
	|	ДокументыПлана.Документ КАК Документ,
	|	ВЫБОР
	|		КОГДА ПредставленияОбъектов.Представление ЕСТЬ NULL
	|			ТОГДА ДокументыПлана.ДокументПредставление
	|		ИНАЧЕ ПредставленияОбъектов.Представление
	|	КОНЕЦ КАК Представление,
	|	ЕСТЬNULL(ПредставленияОбъектов.Заказчик, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК Заказчик,
	|	ЕСТЬNULL(ПредставленияОбъектов.Статус, НЕОПРЕДЕЛЕНО) КАК Статус,
	|	ЕСТЬNULL(ПредставленияОбъектов.ЭтоЧерновик, ИСТИНА) КАК ЭтоЧерновик,
	|	ЕСТЬNULL(ПРЕДСТАВЛЕНИЕ(ПредставленияОбъектов.Статус), """") КАК СтатусПредставление
	|ИЗ
	|	ДокументыПлана КАК ДокументыПлана
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПредставленияОбъектов КАК ПредставленияОбъектов
	|		ПО ДокументыПлана.КлючСобытия = ПредставленияОбъектов.КлючСобытия
	|			И ДокументыПлана.Документ = ПредставленияОбъектов.Документ
	|			И (НЕ ДокументыПлана.Документ ССЫЛКА Справочник.Файлы)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК Файлы
	|		ПО ДокументыПлана.Документ = Файлы.Ссылка
	|ГДЕ
	|	Файлы.Ссылка ЕСТЬ NULL
	|ИТОГИ ПО
	|	КлючСобытия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланыПроектов.КлючСобытия КАК КлючСобытия,
	|	Файлы.Ссылка КАК Ссылка,
	|	Файлы.ОригинальноеИмя КАК Представление
	|ИЗ
	|	ПланыПроектов КАК ПланыПроектов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыПланаПроекта КАК ДокументыПланаПроекта
	|		ПО ПланыПроектов.КлючСобытия = ДокументыПланаПроекта.КлючСобытия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Файлы КАК Файлы
	|		ПО (ДокументыПланаПроекта.Документ = Файлы.Ссылка)
	|ИТОГИ ПО
	|	КлючСобытия";	
	#КонецОбласти
	
	Если ОткрытиеИзОтчета Тогда
		Если ТипЗнч(Проект) = Тип("СправочникСсылка.Проекты") Тогда
			СвойстваОбъекта =
			";
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Проекты.Наименование КАК НаименованиеПроекта,
			|	Проекты.Дата КАК ДатаСоздания,
			|	ВЫБОР
			|		КОГДА Проекты.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.Новый)
			|			ТОГДА Проекты.ДатаПлановоеНачало
			|		ИНАЧЕ Проекты.ДатаНачалаРазработки
			|	КОНЕЦ КАК ДатаНачала,
			|	ВЫБОР
			|		КОГДА Проекты.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.Отклонен)
			|				ИЛИ Проекты.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.Решен)
			|			ТОГДА Проекты.ДатаЗавершения
			|		ИНАЧЕ Проекты.ДатаПлановоеОкончание
			|	КОНЕЦ КАК ДатаОкончания
			|ИЗ
			|	Справочник.Проекты КАК Проекты
			|ГДЕ
			|	Проекты.Ссылка = &Объект";
		Иначе
			СвойстваОбъекта =
			";
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВнутреннееЗадание.Наименование КАК НаименованиеПроекта,
			|	ВнутреннееЗадание.Дата КАК ДатаСоздания,
			|	ВЫБОР ВнутреннееЗадание.ДатаНачалаРазработки
			|		КОГДА ДАТАВРЕМЯ(1, 1, 1)
			|			ТОГДА ВнутреннееЗадание.ПлановоеНачало
			|		ИНАЧЕ ВнутреннееЗадание.ДатаНачалаРазработки
			|	КОНЕЦ КАК ДатаНачала,
			|	ВЫБОР ВнутреннееЗадание.ДатаЗакрытия
			|		КОГДА ДАТАВРЕМЯ(1, 1, 1)
			|			ТОГДА ВнутреннееЗадание.ИсполнитьДо
			|		ИНАЧЕ ВнутреннееЗадание.ДатаЗакрытия
			|	КОНЕЦ КАК ДатаОкончания
			|ИЗ
			|	Документ.ВнутреннееЗадание КАК ВнутреннееЗадание
			|ГДЕ
			|	ВнутреннееЗадание.Ссылка = &Объект";
		КонецЕсли;	
	Иначе
		СвойстваОбъекта = "";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + СвойстваОбъекта;
	
	Запрос.УстановитьПараметр("Объект", Проект);
	Запрос.УстановитьПараметр("ПустойИдентификатор", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	
	Пакет = Запрос.ВыполнитьПакет();
	
	Если НЕ Пакет[3].Пустой() Тогда
		Выборка = Пакет[3].Выбрать();
		
		Если НЕ Пакет[4].Пустой() Тогда
			ТаблицаПодчиненных = Пакет[4].Выгрузить();
		Иначе
			ТаблицаПодчиненных = Неопределено;
		КонецЕсли;
		
		ВыборкаДокументы = Пакет[5].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВыборкаФайлы = Пакет[6].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока Выборка.Следующий() Цикл
			Ветка = Форма.ПланПроекта.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(Ветка, Выборка);
			
			ЗаполнитьДокументы(Ветка, ВыборкаДокументы, Выборка.КлючСобытия);
			ЗаполнитьФайлы(Ветка, ВыборкаФайлы, Выборка.КлючСобытия);
						
			Если ТаблицаПодчиненных <> Неопределено Тогда
				ЗаполнитьВетвьДерева(Ветка, ТаблицаПодчиненных, "ВладелецСобытия", "КлючСобытия", , ВыборкаДокументы, ВыборкаФайлы);
			КонецЕсли;
					
		КонецЦикла;
		
	КонецЕсли;
	
	Если ОткрытиеИзОтчета Тогда
		Выборка = Пакет[7].Выбрать();
		
		Если Выборка.Следующий() Тогда
			Форма.Проект = Выборка.НаименованиеПроекта;
			Форма.ДатаСоздания = Выборка.ДатаСоздания;
			Форма.ДатаНачала = Выборка.ДатаНачала;
			Форма.ДатаОкончания = Выборка.ДатаОкончания;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьДокументы(Ветка, Выборка, КлючСобытия)
		
	Если Выборка.НайтиСледующий(Новый Структура("КлючСобытия", КлючСобытия)) Тогда
		ВыборкаДокумент = Выборка.Выбрать();
		
		Если ВыборкаДокумент.Количество() = 1 Тогда
			ВыборкаДокумент.Следующий();
			Ветка.Статус = ВыборкаДокумент.Статус;
			
			Если СтрНачинаетсяС(ВыборкаДокумент.Представление, "<Объект не найден>") Тогда
				ДокументПредставление = "ЧЕРНОВИК";
			Иначе
				ДокументПредставление = ВыборкаДокумент.Представление;
			КонецЕсли;
			
			Если ВыборкаДокумент.ЭтоЧерновик Тогда
				Ветка.ПредставлениеСтатуса = СтрШаблон("%1 (Черновик)", ВыборкаДокумент.СтатусПредставление);
			Иначе
				Ветка.ПредставлениеСтатуса = ВыборкаДокумент.СтатусПредставление;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Ветка.Ответственный) И ЗначениеЗаполнено(ВыборкаДокумент.Заказчик) Тогда
				Ветка.Ответственный = ВыборкаДокумент.Заказчик;
				Ветка.ЭтоЗаказчик = Истина;
			КонецЕсли;
			
			Ветка.СписокДокументов.Добавить(ВыборкаДокумент.Документ, ДокументПредставление);
		Иначе		
			Пока ВыборкаДокумент.Следующий() Цикл
				Если СтрНачинаетсяС(ВыборкаДокумент.Представление, "<Объект не найден>") Тогда
					ДокументПредставление = "ЧЕРНОВИК";
				Иначе
					ДокументПредставление = ВыборкаДокумент.Представление;
				КонецЕсли;
				
				Ветка.СписокДокументов.Добавить(ВыборкаДокумент.Документ, ДокументПредставление);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Выборка.Сбросить();
	
КонецПроцедуры

Процедура ЗаполнитьФайлы(Ветка, Выборка, КлючСобытия)
		
	Если Выборка.НайтиСледующий(Новый Структура("КлючСобытия", КлючСобытия)) Тогда
		ВыборкаФайл = Выборка.Выбрать();
		
		Пока ВыборкаФайл.Следующий() Цикл
			Ветка.СписокФайлов.Добавить(ВыборкаФайл.Ссылка, ВыборкаФайл.Представление);
		КонецЦикла;
	КонецЕсли;
	Выборка.Сбросить();
	
КонецПроцедуры

Процедура СоздатьПункты(ПланПроекта, Знач Проект) Экспорт
	
	Автор = ПараметрыСеанса.ТекущийПользователь;
	ЭтоПроект = (ТипЗнч(Проект) = Тип("СправочникСсылка.Проекты"));
	ПланПоУмолчанию = Новый Структура("Проектирование, Реализация, Завершение", Новый Массив, Новый Массив, Новый Массив);
	ТекущаяДата = ТекущаяДатаСеанса();
	
	Если ЭтоПроект Тогда
		ПланПоУмолчанию.Проектирование.Добавить("Устав");
		ПланПоУмолчанию.Проектирование.Добавить("Реестр заинтересованных лиц");
		ПланПоУмолчанию.Проектирование.Добавить("Матрица требований");
		ПланПоУмолчанию.Проектирование.Добавить("Оценка и управление рисками");
		ПланПоУмолчанию.Проектирование.Добавить("Концепция");
		ПланПоУмолчанию.Проектирование.Добавить("Схема бизнес-процесса");
	Иначе
		ПланПоУмолчанию.Проектирование.Добавить("Изучение");
		ПланПоУмолчанию.Проектирование.Добавить("Концепция");
	КонецЕсли;
	
	ПланПоУмолчанию.Реализация.Добавить("");
	
	ПланПоУмолчанию.Завершение.Добавить("Подготовка документации");
	ПланПоУмолчанию.Завершение.Добавить("Пилотный запуск");
	
	СтатусНовый = Справочники.СтатусыОбъектов.Новый;
	
	ЭлементыДерева = ПланПроекта.ПолучитьЭлементы();
	ПорядокПервыйУровень = ЭлементыДерева.Количество() + 1; 
	
	НаборЗаписей = РегистрыСведений.ПланыВыполненияПроектов.СоздатьНаборЗаписей();
	
	НачатьТранзакцию();
	Попытка
		Для Каждого Пункт Из ПланПоУмолчанию Цикл
			НовыйЭлемент = ЭлементыДерева.Добавить();
			НовыйЭлемент.НазваниеСобытия = Пункт.Ключ;
			НовыйЭлемент.Статус = СтатусНовый;
			НовыйЭлемент.ПредставлениеСтатуса = "Новый";
			НовыйЭлемент.КлючСобытия = Новый УникальныйИдентификатор;
			НовыйЭлемент.СтрокаПервогоУровня = Истина;
			НовыйЭлемент.Порядок = ПорядокПервыйУровень;
			НовыйЭлемент.ЭтоГруппа = Истина;
			НовыйЭлемент.Автор = Автор;
			НовыйЭлемент.ДатаРедактирования = ТекущаяДата;
			
			НаборЗаписей.Отбор.КлючСобытия.Установить(НовыйЭлемент.КлючСобытия);
			НаборЗаписей.Отбор.Объект.Установить(Проект);
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, НовыйЭлемент);
			Запись.Объект = Проект;
			
			НаборЗаписей.Записать();
			НаборЗаписей.Очистить();
			
			ПорядокВторойУровень = 1;
			
			Для Каждого Подпункт Из Пункт.Значение Цикл
				ЭлементПодПункт = НовыйЭлемент.ПолучитьЭлементы().Добавить();
				ЭлементПодПункт.НазваниеСобытия = Подпункт;
				ЭлементПодПункт.Статус = СтатусНовый;
				ЭлементПодПункт.ПредставлениеСтатуса = "Новый";
				ЭлементПодПункт.КлючСобытия = Новый УникальныйИдентификатор;
				ЭлементПодПункт.ВладелецСобытия = НовыйЭлемент.КлючСобытия;
				ЭлементПодПункт.Порядок = ПорядокВторойУровень;
				ЭлементПодПункт.Автор = Автор;
				ЭлементПодПункт.ДатаРедактирования = ТекущаяДата;
				
				НаборЗаписей.Отбор.КлючСобытия.Установить(ЭлементПодПункт.КлючСобытия);
				НаборЗаписей.Отбор.Объект.Установить(Проект);
				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ЭлементПодПункт);
				Запись.Объект = Проект;
				
				НаборЗаписей.Записать();
				НаборЗаписей.Очистить();
				
				ПорядокВторойУровень = ПорядокВторойУровень + 1;
			КонецЦикла;
			
			ПорядокПервыйУровень = ПорядокПервыйУровень + 1;
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		
		ОписаниеОшибки = "Не удалось записать план проекта по причине: " + ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("План проектов.Запись изменений", УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки); 
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьДокументы(ДокументыСобытий)
	
	// записываем докумены для измененной записи, если их нет, то удаляем те, что были в регистре
	НаборЗаписей = РегистрыСведений.ДокументыПланаПроекта.СоздатьНаборЗаписей();
	
	Для Каждого Событие Из ДокументыСобытий Цикл
		НаборЗаписей.Отбор.КлючСобытия.Установить(Событие.Ключ);
		
		Для Каждого Документ Из Событие.Значение Цикл			
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.КлючСобытия = Событие.Ключ;
			НоваяЗапись.Документ = Документ;
		КонецЦикла;
		
		НаборЗаписей.Записать();
		НаборЗаписей.Очистить();
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПлан(НаборЗаписей, Таблица, Объект, ДокументыПлана)
	
	Для Каждого Строка Из Таблица.Строки Цикл
		НовыяЗапись = НаборЗаписей.Добавить();
		
		ЗаполнитьЗначенияСвойств(НовыяЗапись, Строка, , "Ответственный");
		Если НЕ Строка.ЭтоЗаказчик И ЗначениеЗаполнено(Строка.Ответственный) Тогда
			НовыяЗапись.Ответственный = Строка.Ответственный;
		КонецЕсли;
		
		НовыяЗапись.Объект = Объект;
		
		СписокПрикрепленных = Новый Массив;
		СписокПрикрепленных = Строка.СписокДокументов.ВыгрузитьЗначения();
		Для Каждого Файл Из Строка.СписокФайлов Цикл
			СписокПрикрепленных.Добавить(Файл.Значение);
		КонецЦикла;
		
		ДокументыПлана.Вставить(Строка.КлючСобытия, СписокПрикрепленных);
		ЗаполнитьПлан(НаборЗаписей, Строка, Объект, ДокументыПлана);
	КонецЦикла;
			
КонецПроцедуры

#КонецОбласти
