///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс 

// Возвращает ключи настроек панели навигации
//
// Параметры:
//  Ссылка - ДокументСсылка, СправочникСсылка - ссылка на объект, подключенный к механизму панели навигации 
// 
// Возвращаемое значение:
//  Структура - структура с ключами настроек
//
Функция КлючиНастроек(Знач Ссылка) Экспорт
	
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Ссылка));
	КлючОбъекта = ОбъектМетаданных.ПолноеИмя();
	
	Возврат Новый Структура("КлючОбъекта, КлючНастроек", КлючОбъекта, "НастройкиПанелиНавигации");
	
КонецФункции

// Создает панель навигации документа
//
// Параметры:
//  Форма - Управляемая форма - Форма документа 
//
Процедура Создать(Форма) Экспорт
	
	СписокКоманд = Новый СписокЗначений;
	
	Элементы = Форма.Элементы;
	Команды = Форма.Команды;	
	Ссылка = Форма.Объект.Ссылка;   
	
	ЭтоНовый = НЕ ЗначениеЗаполнено(Ссылка);
	
	// Командная панель
	ИмяКоманднойПанели = ПанельНавигацииКлиентСервер.ИмяКоманднойПанели();	
	СвойстваЭлемента = СвойстваЭлементаКоманднаяПанель(ИмяКоманднойПанели);
	КоманднаяПанель = СоздатьЭлементФормы(Форма, Элементы.ГруппаПанельНавигации, СвойстваЭлемента);
	
	// Кнопки - Страницы
	ШаблонИмениКнопкиСтраницы = ПанельНавигацииКлиентСервер.ШаблонИмениКнопкиСтраницы();
	
	Для Каждого Страница Из Элементы.СтраницыДокумента.ПодчиненныеЭлементы Цикл
		Имя = СтрШаблон(ШаблонИмениКнопкиСтраницы, Страница.Имя);
		
		Если Страница = Элементы["УправленияТрудозатратами_ОсновнаяСтраница"] Тогда
			Доступность = НЕ ЭтоНовый;
		Иначе
			Доступность = Истина;
		КонецЕсли;
		
		СвойстваЭлемента = СвойстваЭлементаКнопка(Имя, Страница.Заголовок, Страница.Картинка, 
			ОтображениеКнопки.КартинкаИТекст, Истина, Доступность);
			
		СоздатьЭлементФормы(Форма, КоманднаяПанель, СвойстваЭлемента);	
	КонецЦикла; 
	
	// Кнопки - Связанные формы	
	ШаблонИмениКнопки = ПанельНавигацииКлиентСервер.ШаблонИмениКнопки();		
	ДополнительныеКоманды = ДополнительныеКомандыОбъекта(Ссылка);
	
	Для Каждого Команда Из ДополнительныеКоманды Цикл
		Имя = СтрШаблон(ШаблонИмениКнопки, Команда.Значение); 
		
		Если ЭтоНовый Тогда
			Заголовок = Команда.Представление;
		Иначе
			Заголовок = ПанельНавигацииВызовСервера.ЗаголовокКоманды(Ссылка, Команда.Значение, Команда.Представление);
		КонецЕсли;   
		
		СвойстваЭлемента = СвойстваЭлементаКнопка(Имя, Заголовок, Команда.Картинка, 
			ОтображениеКнопки.КартинкаИТекст, Истина, НЕ ЭтоНовый);
			
		СоздатьЭлементФормы(Форма, КоманднаяПанель, СвойстваЭлемента);
	КонецЦикла;
	
	// Создаем подменю, если количество вкладок более 4
	Если КоманднаяПанель.ПодчиненныеЭлементы.Количество() > 4 Тогда	
		КнопкиДубли = Новый Массив;
		
		// Кнопки - Дубли (для отображения команд из подменю)
		Для Каждого Кнопка Из КоманднаяПанель.ПодчиненныеЭлементы Цикл 
			Имя = СтрЗаменить(Кнопка.Имя, "ПанельНавигации", "ПанельНавигацииДополнительно");
			
			СвойстваЭлемента = СвойстваЭлементаКнопка(Имя, Кнопка.Заголовок, Кнопка.Картинка, 
				ОтображениеКнопки.КартинкаИТекст, Ложь, Истина);
			
			КнопкиДубли.Добавить(СвойстваЭлемента);	
		КонецЦикла;   
		
		Для Каждого СвойстваЭлемента Из КнопкиДубли Цикл
			СоздатьЭлементФормы(Форма, КоманднаяПанель, СвойстваЭлемента);
		КонецЦикла;
		
		// Кнопка - Подменю
		Имя = ПанельНавигацииКлиентСервер.ИмяКнопкиПодменю();   
		
		СвойстваЭлемента = СвойстваЭлементаКнопка(Имя, "", БиблиотекаКартинок.ПодменюДополнительныхДействий, 
			ОтображениеКнопки.Картинка, Истина, Истина);
		
		СоздатьЭлементФормы(Форма, Элементы.ГруппаПанельНавигации, СвойстваЭлемента);	
	КонецЕсли;
	
	// Первая кнопка активна
	ПерваяКнопка = КоманднаяПанель.ПодчиненныеЭлементы[0];
	ПерваяКнопка.ОтображениеФигуры = ОтображениеФигурыКнопки.Всегда;
	ПерваяКнопка.Пометка = Истина;
	
	// Настройка видимости кнопок	
	НастройкиВидимостиКоманд = НастройкиВидимостиКоманд(Форма.Объект.Ссылка);
	
	Если НастройкиВидимостиКоманд = Неопределено Тогда
		МаксимальноеКоличествоВидимых = ПанельНавигацииКлиентСервер.МаксимальноеКоличествоВидимыхКоманд();
		КоличествоВидимых = 0;
		
		Для Каждого Кнопка Из КоманднаяПанель.ПодчиненныеЭлементы Цикл
			Если Кнопка.Видимость И КоличествоВидимых > МаксимальноеКоличествоВидимых Тогда
				Кнопка.Видимость = Ложь;	
			КонецЕсли;
			
			КоличествоВидимых = КоличествоВидимых + 1;
		КонецЦикла;
	Иначе	
		Элементы = Форма.Элементы;
		
		Для Каждого Элемент Из НастройкиВидимостиКоманд Цикл
			Элементы[Элемент.Значение].Видимость = Элемент.Пометка;
		КонецЦикла; 
	КонецЕсли;
	
	// Для выравнивания панели навигации основной и дополнительной формы
	СвойстваЭлемента = СвойстваЭлементаДекорация(ПанельНавигацииКлиентСервер.ИмяДекорации());
	СоздатьЭлементФормы(Форма, Элементы.ГруппаПанельНавигации, СвойстваЭлемента);
		
КонецПроцедуры

Функция ДополнительныеКомандыОбъекта(Знач Ссылка)  
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Ссылка);
	
	Возврат МенеджерОбъекта.КомандыПанелиНавигации(); 

КонецФункции

// Делает доступными команды открытия связанных форм после записи объекта
//
// Параметры:
//  Форма - Управляемая форма - Форма документа
//
Процедура ОбновитьДоступность(Форма) Экспорт
		
	ИмяКоманднойПанели = ПанельНавигацииКлиентСервер.ИмяКоманднойПанели();
	
	Для Каждого Кнопка Из Форма.Элементы[ИмяКоманднойПанели].ПодчиненныеЭлементы Цикл
		Если НЕ Кнопка.Доступность Тогда
			Кнопка.Доступность = Истина;
			Кнопка.Заголовок = ПанельНавигацииВызовСервера.ЗаголовокКоманды(Форма.Объект.Ссылка, Кнопка.Имя, Кнопка.Заголовок);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Создает панель навигации формы путем копирования свойств из структуры панели навигации
//
// Параметры:
//  Форма - Управляемая форма - Форма документа
//  Параметры - Структура - параметры формы
//
Процедура Скопировать(Форма, Знач Параметры) Экспорт 
	
	Если НЕ Параметры.Свойство("ПанельНавигации") Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьЭлементыФормы(Форма, Форма.Элементы.ГруппаПанельНавигации, Параметры.ПанельНавигации);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

Функция НастройкиВидимостиКоманд(Знач Ссылка)

	Ключи = ПанельНавигации.КлючиНастроек(Ссылка);
	
	Возврат ОбщегоНазначенияВызовСервера.ЗагрузитьНастройкиДанныхФормы(Ключи.КлючОбъекта, Ключи.КлючНастроек);
	
КонецФункции

Процедура СоздатьЭлементыФормы(Форма, Родитель, Знач ЭлементыФормы)
			
	Для Каждого СтруктураЭлемента Из ЭлементыФормы Цикл
		НовыйЭлемент = СоздатьЭлементФормы(Форма, Родитель, СтруктураЭлемента.Значение); 
		СоздатьЭлементыФормы(Форма, НовыйЭлемент, СтруктураЭлемента.ПодчиненныеЭлементы);
	КонецЦикла;

КонецПроцедуры

Функция СоздатьЭлементФормы(Форма, Родитель, Знач СвойстваЭлемента) 
	
	Если СвойстваЭлемента.Тип = Тип("КнопкаФормы") Тогда
		КомандаКнопки = Форма.Команды.Добавить(СвойстваЭлемента.Имя);
		КомандаКнопки.Действие = "Подключаемый_ПанельНавигацииНажатие";		
	КонецЕсли;
	
	НовыйЭлемент = Форма.Элементы.Добавить(СвойстваЭлемента.Имя, СвойстваЭлемента.Тип, Родитель);
	ЗаполнитьЗначенияСвойств(НовыйЭлемент, СвойстваЭлемента);
		
	Если СвойстваЭлемента.Тип = Тип("ГруппаФормы") Тогда
		НовыйЭлемент.Вид = ВидГруппыФормы.КоманднаяПанель;	
	КонецЕсли;
	
	Возврат НовыйЭлемент;
	
КонецФункции

Функция СвойстваЭлементаДекорация(Знач Имя)
	
	СвойстваЭлемента = Новый Структура;
	СвойстваЭлемента.Вставить("Имя", Имя);
	СвойстваЭлемента.Вставить("Тип", Тип("ДекорацияФормы"));
	
	Возврат СвойстваЭлемента;
	
КонецФункции

Функция СвойстваЭлементаКоманднаяПанель(Знач Имя)
	
	СвойстваЭлемента = Новый Структура;
	СвойстваЭлемента.Вставить("Имя", Имя);
	СвойстваЭлемента.Вставить("Тип", Тип("ГруппаФормы"));
	СвойстваЭлемента.Вставить("РастягиватьПоГоризонтали ", Ложь);
	
	Возврат СвойстваЭлемента;
	
КонецФункции

Функция СвойстваЭлементаКнопка(Знач Имя, Знач Заголовок, Знач Картинка, Знач Отображение, Знач Видимость, Знач Доступность)
		
	СвойстваЭлемента = Новый Структура;
	СвойстваЭлемента.Вставить("Имя", Имя);
	СвойстваЭлемента.Вставить("Тип", Тип("КнопкаФормы"));	
	СвойстваЭлемента.Вставить("Заголовок", Заголовок);
	СвойстваЭлемента.Вставить("Отображение", Отображение);
	СвойстваЭлемента.Вставить("Картинка", Картинка);
	СвойстваЭлемента.Вставить("ИмяКоманды", Имя);
	СвойстваЭлемента.Вставить("ОтображениеФигуры", ОтображениеФигурыКнопки.ПриАктивности);
	СвойстваЭлемента.Вставить("Видимость", Видимость);
	СвойстваЭлемента.Вставить("Доступность", Доступность);

	Возврат СвойстваЭлемента;
	
КонецФункции

#КонецОбласти
