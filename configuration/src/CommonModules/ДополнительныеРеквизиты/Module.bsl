///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Обратное присвоение значений из реквизитов формы в таблицу дополнительных
// реквизитов. Происходит при записи объекта / программном сохранении данных.
//
// Параметры:
//  Форма - УправляемаяФорма - форма для которой происходит сохранение изменений.
//	ТаблицаДопРеквизитов - ТаблицаЗначений - таблица с дополнительными реквизитами.
//
Процедура ОбработатьРеквизитыНаФорме(Знач Форма, ТаблицаДопРеквизитов) Экспорт

	Для Каждого Строка Из ТаблицаДопРеквизитов Цикл		
		// Пропускаем недоступные для редактирования реквизиты, что бы не затереть их
		Если НЕ Строка.РедактированиеВИнтерфейсе Тогда
			Продолжить;
		КонецЕсли;	
		
		ИмяРеквизита = Строка.ИмяПредопределенныхДанных;
		
		Попытка 
			ЗначениеРеквизита = Форма[ИмяРеквизита];
			Ошибка = Ложь;
		Исключение
			Ошибка = Истина;
		КонецПопытки;
		
		Если НЕ Ошибка Тогда
			Строка.Значение = ЗначениеРеквизита;	
		КонецЕсли;					 					
	КонецЦикла;
	
КонецПроцедуры

// Добавляет адрес временного хранилища, по которому хранится таблица 
// дополнительных свойств в дополнительные свойства объекта
//
// Параметры:
//  Форма			 - УправляемаяФорма	 - форма
//  ТекущийОбъект	 - ОпределяемыйТип.ВладелецДополнительныхРеквизитов	 - параметр ТекущийОбъект из обработчика ПередЗаписьюНаСервере()
//
Процедура ПередЗаписьюОбъекта(Форма, ТекущийОбъект) Экспорт
	
	// Добавление адреса дополнительных реквизитов в дополнительные свойства объекта
	ИмяРеквизитаАдреса = ДополнительныеРеквизитыКлиентСервер.ИмяРеквизитаАдреса();
	БылаОшибка = Ложь;
	
	Попытка
		АдресТаблицыДопРеквизитов = Форма[ИмяРеквизитаАдреса];
	Исключение
		БылаОшибка = Истина;
	КонецПопытки;
	
	Если НЕ БылаОшибка Тогда	
		// Если для объекта доп реквизиты отображаются и редактируются на форме, то
		// для сохранения изменений нужно пробежаться по реквизитам формы
		// изменить их в таблице доп реквизитов и поместить ее обратно во 
		// временное хранилище
		
		ИмяСлужебногоРеквизита = ДополнительныеРеквизитыКлиентСервер.ПолучитьИмяСлужебногоРеквизита();
		Попытка
			Реквизит = Форма[ИмяСлужебногоРеквизита];
			ВыводитьДопРеквизитыНаФорму = Истина;
		Исключение
			ВыводитьДопРеквизитыНаФорму = Ложь;
		КонецПопытки;
		
		Если ВыводитьДопРеквизитыНаФорму Тогда	
			ТаблицаДопРеквизитов = ПолучитьИзВременногоХранилища(АдресТаблицыДопРеквизитов);
			
			Если ТаблицаДопРеквизитов <> Неопределено Тогда				
				ОбработатьРеквизитыНаФорме(Форма, ТаблицаДопРеквизитов); 
								
				АдресТаблицыДопРеквизитов = ПоместитьВоВременноеХранилище(ТаблицаДопРеквизитов, Новый УникальныйИдентификатор);
			КонецЕсли;			
		КонецЕсли;	
		
		ТекущийОбъект.ДополнительныеСвойства.Вставить(ИмяРеквизитаАдреса, АдресТаблицыДопРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

// Добавляет кнопку открытия формы редактирования дополнительных реквизитов
//
// Параметры:
//  Объект	     - ОпределяемыйТипСсылка.ВладелецДополнительныхРеквизитов	 - ссылка на объект
//  Форма	     - УправляемаяФорма	 - форма.
//  Группа	     - Строка	 - группа формы, в которой будет создана кнопка.
//  ГруппаВывода - Строка    - группа формы, в которую будут выведены доп реквизиты.
//  ГруппаДополнительныхРеквизитов - ПланыВидовХарактеристикСсылка.ВидыДополнительныхРеквизитов - ссылка
//								на родительский элемент ПВХ, для которого в дальнейшем будут получены
//								подчиненные элементы.
//
Процедура ПодключитьДополнительныеРеквизиты(Знач Объект, Форма, Знач Группа = Неопределено, Знач ГруппаВывода = Неопределено, ГруппаДополнительныхРеквизитов = Неопределено) Экспорт
	
	// Проверим, а есть ли вообще для данного типа объекта дополнительные реквизиты
	Если НЕ ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ДляОбъектаЕстьДополнительныеРеквизиты(Объект) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРеквизитаХранилища = ДополнительныеРеквизитыКлиентСервер.ИмяРеквизитаАдреса();
	
	// Добавление реквизита для хранения адреса временногоХранилища
	АдресВременногоХранилища = Новый РеквизитФормы(ИмяРеквизитаХранилища, ОбщегоНазначенияКлиентСервер.ОписаниеТипаСтрока(0));
	
	МассивНовыхРеквизитов = Новый Массив;
	МассивНовыхРеквизитов.Добавить(АдресВременногоХранилища);
	
	Форма.ИзменитьРеквизиты(МассивНовыхРеквизитов);
	
	// Проверка наличия таблицы реквизитов в хранилище общих настроек
	Ключи = ДополнительныеРеквизитыКлиентСервер.ПолучитьКлючиНастроек();
	ОбщиеНастройки = ОбщегоНазначенияВызовСервера.ЗагрузитьОбщиеНастройки(Ключи.Объект, Ключи.Настройка);
	
	// Если в хранилище общих настроек пусто, то сформируем таблицу дополнительных реквизитов для объекта
	Если ОбщиеНастройки = Неопределено Тогда	
		ТаблицаДополнительныхРеквизитов = ПолучитьТаблицуДополнительныхРеквизитовОбъекта(Объект, ГруппаДополнительныхРеквизитов); 		
	Иначе
		ТаблицаДополнительныхРеквизитов = ПолучитьИзВременногоХранилища(ОбщиеНастройки);
		Форма[ИмяРеквизитаХранилища] = ОбщиеНастройки;
		
		// После получения данных из хранилища общих настроек нужно удалить все что там было
		ОбщегоНазначенияВызовСервера.УдалитьОбщиеНастройки(Ключи.Объект, Ключи.Настройка);
	КонецЕсли;
	
	// Если у объекта есть группа для вывода доп реквизитов на форму, то выведем туда доп реквизиты	
	Если ЗначениеЗаполнено(ГруппаВывода) 
		И ТипЗнч(ТаблицаДополнительныхРеквизитов) = Тип("ТаблицаЗначений") 
		И ТаблицаДополнительныхРеквизитов.Количество() > 0 Тогда
		
		ЭлементГруппаВывода = Форма.Элементы.Найти(ГруппаВывода);
		
		Если ЭлементГруппаВывода <> Неопределено Тогда				
			ОписаниеТиповБулево = Новый ОписаниеТипов("Булево");
			МассивРеквизитов = Новый Массив;
			
			// Служебный реквизит формы, который указывает на то, доп реквизиты выводятся на форму
			ИмяРеквизита = ДополнительныеРеквизитыКлиентСервер.ПолучитьИмяСлужебногоРеквизита();
			
			ИмяГруппыВыводаДопРеквизитов = Новый РеквизитФормы(ИмяРеквизита, ОписаниеТиповБулево);
			МассивРеквизитов.Добавить(ИмяГруппыВыводаДопРеквизитов);
			Форма.ИзменитьРеквизиты(МассивРеквизитов);
			МассивРеквизитов.Очистить();
			
			Для Каждого Строка Из ТаблицаДополнительныхРеквизитов Цикл
				Если НЕ Строка.РедактированиеВИнтерфейсе Тогда
					Продолжить;
				КонецЕсли;
				
				Если НЕ Строка.РедактированиеВФормеОбъекта Тогда
					Продолжить;
				КонецЕсли;
				
				// Определим группу для вывода.
				Если ГруппаДополнительныхРеквизитов = Неопределено
					ИЛИ ГруппаДополнительныхРеквизитов = Строка.Родитель Тогда
					
					ПодчиненнаяГруппаДляВывода = ЭлементГруппаВывода;
				Иначе
					ДанныеРодителя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Строка.Родитель, "ИмяПредопределенныхДанных, Наименование");
					ПодчиненнаяГруппаДляВывода = Форма.Элементы.Найти(ДанныеРодителя.ИмяПредопределенныхДанных);
					
					// Проверяем, существование группы на форме 
					// (например, если ее уже создали ранее)
					Если ПодчиненнаяГруппаДляВывода = Неопределено Тогда					
						ПодчиненнаяГруппаДляВывода = Форма.Элементы.Добавить(ДанныеРодителя.ИмяПредопределенныхДанных, Тип("ГруппаФормы"), ЭлементГруппаВывода);
						ПодчиненнаяГруппаДляВывода.Вид                 = ВидГруппыФормы.ОбычнаяГруппа;
						ПодчиненнаяГруппаДляВывода.Группировка         = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
						ПодчиненнаяГруппаДляВывода.ОтображатьЗаголовок = Ложь;
					КонецЕсли;
					
					// Проверяем, необходимость создания декорации для группы.
					ДекорацияГруппы = Форма.Элементы.Найти(ДанныеРодителя.ИмяПредопределенныхДанных + "_Надпись");
					Если ДекорацияГруппы = Неопределено Тогда
						Декорация = Форма.Элементы.Добавить(ДанныеРодителя.ИмяПредопределенныхДанных + "_Надпись", Тип("ДекорацияФормы"), ПодчиненнаяГруппаДляВывода);
						Декорация.Заголовок = ДанныеРодителя.Наименование;
						Декорация.ЦветТекста = ЦветаСтиля.ЦветЗаголовкаИнформационнойПанели;
						Декорация.ЦветРамки = ЦветаСтиля.ЦветЗаголовкаИнформационнойПанели;
						Декорация.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.Подчеркивание);
						Декорация.РастягиватьПоГоризонтали = Истина;
						Декорация.АвтоМаксимальнаяШирина = Ложь;
					КонецЕсли;
				КонецЕсли;
				
				ИмяРеквизита = СтрЗаменить(Строка.ИмяПредопределенныхДанных, " ", "_");
				Реквизит = Новый РеквизитФормы(Строка.ИмяПредопределенныхДанных, Строка.ТипЗначения,, Строка.Наименование);
				
				МассивРеквизитов.Добавить(Реквизит);
				Форма.ИзменитьРеквизиты(МассивРеквизитов);
				МассивРеквизитов.Очистить();
				Форма[ИмяРеквизита] = Строка.Значение;
				
				Поле = Форма.Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), ПодчиненнаяГруппаДляВывода);
				Поле.ПутьКДанным = ИмяРеквизита;
				
				// Проверяем необходимость добавить отображение подсказки.
				Если ЗначениеЗаполнено(Строка.Подсказка) Тогда
					Поле.Подсказка = Строка.Подсказка;
					Поле.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
				КонецЕсли;
				
				ОписаниеТиповБулево = Новый ОписаниеТипов("Булево");
				
				Если Строка.ТипЗначения = ОписаниеТиповБулево Тогда
					Поле.Вид = ВидПоляФормы.ПолеФлажка;
					Поле.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
				Иначе
					Поле.Вид = ВидПоляФормы.ПолеВвода;					
				КонецЕсли;
			КонецЦикла;						
		КонецЕсли;
		
		// После обработки таблицы реквизитов удалим больше ненужные колонки
		ТаблицаДополнительныхРеквизитов.Колонки.Удалить("Подсказка");
		ТаблицаДополнительныхРеквизитов.Колонки.Удалить("Родитель");
	КонецЕсли;
		
	Если ОбщиеНастройки = Неопределено Тогда 		
		Форма[ИмяРеквизитаХранилища] = ПоместитьВоВременноеХранилище(ТаблицаДополнительныхРеквизитов, Форма.УникальныйИдентификатор);
	КонецЕсли;

	// Создание команды и кнопки "Дополнительные реквизиты"
	Если Группа <> Неопределено Тогда	
		Команда = Форма.Команды.Добавить("ДополнительныеРеквизиты_ОткрытьДополнительныеРеквизиты");
		Команда.Действие = "Подключаемый_ОткрытьДополнительныеРеквизиты";
		Команда.Картинка = БиблиотекаКартинок.ВнешнийИсточникДанныхТаблица;
		Команда.Отображение = ОтображениеКнопки.Картинка;
		Команда.Подсказка = "Дополнительные реквизиты";
		
		КнопкаПанели = Форма.Элементы.Добавить("ДополнительныеРеквизиты_КнопкаОткрытьДополнительныеРеквизиты", Тип("КнопкаФормы"), Форма.Элементы.Найти(Группа));
		КнопкаПанели.ИмяКоманды = Команда.Имя;
	КонецЕсли;
		
КонецПроцедуры

// Формирует таблицу дополнительных реквизитов объекта
//
// Параметры:
//  Объект				 			- ОпределяемыйТип.ВладелецДополнительныхСвойств - ссылка на объект
//  ГруппаДополнительныеРеквизиты	- ПланыВидовХарактеристикСсылка.ВидыДополнительныхРеквизитов - ссылка
//													на родительский элемент ПВХ, для которого будут получены
//													подчиненные элементы.
//  ДополнительныйОбъект 			- ОпределяемыйТип.ВладелецДополнительныхСвойств - ссылка на объект основания или объект копирования
// 
// Возвращаемое значение:
//   - ТаблицаЗначений
//  * ВидРеквизита	 - ПланВидовХарактеристикСсылка.ВидыДополнительныхРеквизитов	 - вид реквизита
//  * Наименование	 - Строка	 - строковое представление вида реквизита
//  * ОбязательноеЗаполнение	 - Булево	 - признак обязательного заполнения
//  * Значение	 - Характеристика.ВидыДополнительныхРеквизитов	 - значение реквизита, если не заполнено,
//  то значение по умолчанию. Если значение по умолчанию отсутствует, то Неопределено
//
Функция ПолучитьТаблицуДополнительныхРеквизитовОбъекта(Знач Объект, Знач ГруппаДополнительныеРеквизиты = Неопределено, 
		Знач ДополнительныйОбъект = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыДополнительныхРеквизитов.Ссылка КАК Ссылка,
	|	ВидыДополнительныхРеквизитов.Наименование КАК Наименование,
	|	ВидыДополнительныхРеквизитов.ОбязательноеЗаполнение КАК ОбязательноеЗаполнение,
	|	ВидыДополнительныхРеквизитов.РедактированиеВИнтерфейсе КАК РедактированиеВИнтерфейсе,
	|	ВидыДополнительныхРеквизитов.РедактированиеВФормеОбъекта КАК РедактированиеВФормеОбъекта,
	|	ВидыДополнительныхРеквизитов.Родитель КАК Родитель,
	|	ВидыДополнительныхРеквизитов.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
	|	ВидыДополнительныхРеквизитов.ПорядокСледования КАК ПорядокСледования,
	|	ВидыДополнительныхРеквизитов.Подсказка КАК Подсказка
	|ПОМЕСТИТЬ ХарактеристикиОбъекта
	|ИЗ
	|	ПланВидовХарактеристик.ВидыДополнительныхРеквизитов КАК ВидыДополнительныхРеквизитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВидыДополнительныхРеквизитов.ИспользоватьВОбъектах КАК Использование
	|		ПО ВидыДополнительныхРеквизитов.Ссылка = Использование.Ссылка
	|ГДЕ
	|	ВидыДополнительныхРеквизитов.Ссылка В ИЕРАРХИИ(&ВидРеквизитаРодитель)
	|	И Использование.Тип = &ПустаяСсылкаТипаОбъекта
	|	И Использование.Филиал = ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка)
	|	И НЕ ВидыДополнительныхРеквизитов.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВидыДополнительныхРеквизитов.Ссылка,
	|	ВидыДополнительныхРеквизитов.Наименование,
	|	ВидыДополнительныхРеквизитов.ОбязательноеЗаполнение,
	|	ВидыДополнительныхРеквизитов.РедактированиеВИнтерфейсе,
	|	ВидыДополнительныхРеквизитов.РедактированиеВФормеОбъекта,
	|	ВидыДополнительныхРеквизитов.Родитель,
	|	ВидыДополнительныхРеквизитов.ИмяПредопределенныхДанных,
	|	ВидыДополнительныхРеквизитов.ПорядокСледования,
	|	ВидыДополнительныхРеквизитов.Подсказка
	|ИЗ
	|	ПланВидовХарактеристик.ВидыДополнительныхРеквизитов КАК ВидыДополнительныхРеквизитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВидыДополнительныхРеквизитов.ИспользоватьВОбъектах КАК Использование
	|		ПО ВидыДополнительныхРеквизитов.Ссылка = Использование.Ссылка
	|ГДЕ
	|	Использование.Тип = &ПустаяСсылкаТипаОбъекта
	|	И Использование.Филиал = &ФилиалПользователя
	|	И НЕ ВидыДополнительныхРеквизитов.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХарактеристикиОбъекта.Ссылка КАК ВидРеквизита,
	|	ХарактеристикиОбъекта.Наименование КАК Наименование,
	|	ХарактеристикиОбъекта.ОбязательноеЗаполнение КАК ОбязательноеЗаполнение,
	|	ХарактеристикиОбъекта.РедактированиеВИнтерфейсе КАК РедактированиеВИнтерфейсе,
	|	ХарактеристикиОбъекта.РедактированиеВФормеОбъекта КАК РедактированиеВФормеОбъекта,
	|	ЕСТЬNULL(ЗначенияДополнительныхРеквизитов.Значение, ЕСТЬNULL(ДоступныеЗначенияРеквизитов.Ссылка, НЕОПРЕДЕЛЕНО)) КАК Значение,
	|	ВидыДополнительныхРеквизитов.ТипЗначения КАК ТипЗначения,
	|	ХарактеристикиОбъекта.Родитель КАК Родитель,
	|	ХарактеристикиОбъекта.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
	|	ХарактеристикиОбъекта.Подсказка КАК Подсказка
	|ИЗ
	|	ХарактеристикиОбъекта КАК ХарактеристикиОбъекта
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоступныеЗначенияРеквизитов КАК ДоступныеЗначенияРеквизитов
	|		ПО ХарактеристикиОбъекта.Ссылка = ДоступныеЗначенияРеквизитов.Владелец
	|			И (ДоступныеЗначенияРеквизитов.ЗначениеПоУмолчанию)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияДополнительныхРеквизитовОбъектов КАК ЗначенияДополнительныхРеквизитов
	|		ПО (ЗначенияДополнительныхРеквизитов.Объект = &Объект)
	|			И ХарактеристикиОбъекта.Ссылка = ЗначенияДополнительныхРеквизитов.Реквизит
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВидыДополнительныхРеквизитов КАК ВидыДополнительныхРеквизитов
	|		ПО ХарактеристикиОбъекта.Ссылка = ВидыДополнительныхРеквизитов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ХарактеристикиОбъекта.Родитель.Наименование,
	|	ХарактеристикиОбъекта.ПорядокСледования";
	
	// Заполним группу дополнительных реквизитов пустой ссылкой, если
	// она не была передана.
	Если НЕ ЗначениеЗаполнено(ГруппаДополнительныеРеквизиты) Тогда
		ГруппаДополнительныеРеквизиты = ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ПустаяСсылка();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидРеквизитаРодитель", ГруппаДополнительныеРеквизиты); 
	Запрос.УстановитьПараметр("ПустаяСсылкаТипаОбъекта", Новый(ТипЗнч(Объект)));
	Запрос.УстановитьПараметр("ФилиалПользователя", ПараметрыСеанса.Филиал);
	
	// При копировании или создании на основании будем автоматически заполнять дополнительные реквизиты
	// из объект копирования или объекта основания. В этом случае ДополнительныйОбъект заполнен, а Объект
	// является пустым. Если ДополнительныйОбъект пустой, то используем Объект, который может быть заполнен
	// или быть пустым. Если Объект заполнен, то получим значения дополнительных реквизитов объекта. В противном
	// случае - значения дополнительных реквизитов будут заполнены значениями по умолчанию для данного типа реквизита.
	Запрос.УстановитьПараметр("Объект", ?(ЗначениеЗаполнено(ДополнительныйОбъект), ДополнительныйОбъект, Объект));
		
	ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаЗначений;
	
КонецФункции

// Присваивает значения реквизитам на форме из таблицы дополнительных реквизитов.
//
// Параметры:
//  Форма - УправляемаяФорма - форма для которой, необходимо присвоить значения
//							реквизитов.
//
Процедура ПослеПодключенияДополнительныхРеквизитов(Форма) Экспорт
	
	ТаблицаДопРеквизиты = ПолучитьИзВременногоХранилища(Форма[ДополнительныеРеквизитыКлиентСервер.ИмяРеквизитаАдреса()]);
	Если ТипЗнч(ТаблицаДопРеквизиты) <> Тип("ТаблицаЗначений") Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаДопРеквизиты Цикл
		Если НЕ СтрокаТаблицы.РедактированиеВИнтерфейсе Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяРеквизита = СтрокаТаблицы.ИмяПредопределенныхДанных;
		Попытка
			Форма[ИмяРеквизита] = СтрокаТаблицы.Значение;
		Исключение
			ТекстОшибки = СтрШаблон("На форме %1 отсутствует дополнительный реквизит:%2", Форма.ИмяФормы, ИмяРеквизита); 
			ЗаписьЖурналаРегистрации("ДополнительныеРеквизиты.РедактированиеВИнтерфейсе", УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиПодписокНаСобытия

Процедура ОбработкаЗаполненияОбъекта(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ОбработкаДополнительныхРеквизитовЗаполнитьИзОбъекта(Источник, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПередЗаписьюДокумента(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	ОбработкаДополнительныхРеквизитовПередЗаписью(Источник, Отказ);
	
КонецПроцедуры

Процедура ПередЗаписьюСправочника(Источник, Отказ) Экспорт
	
	ОбработкаДополнительныхРеквизитовПередЗаписью(Источник, Отказ);
	
КонецПроцедуры

Процедура ПриЗаписиОбъекта(Источник, Отказ) Экспорт
	
	ОбработкаДополнительныхРеквизитовПриЗаписи(Источник, Отказ);
	
КонецПроцедуры

Процедура ПриКопированииОбъекта(Источник, ОбъектКопирования) Экспорт
	
	ОбработкаДополнительныхРеквизитовЗаполнитьИзОбъекта(Источник, ОбъектКопирования);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыФункции

// Выполняет подготовку и проверку таблицы дополнительных реквизитов перед записью объекта
//
// Параметры:
//  Источник - ОпределяемыйТип.ВладелецДополнительныхРеквизитов	 - объект (именно объект, не ссылка)
//  Отказ	 - Булево	 - признак отказа от записи
//
Процедура ОбработкаДополнительныхРеквизитовПередЗаписью(Источник, Отказ)
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Возможны два случая:
	// a. Запись документа интерактивно
	// При интерактивной записи документа в дополнительных свойствах объекта передается адрес временного хранилища,
	// по которому сохранена таблица с дополнительными реквизитами. Требуется обработать данные в таблице: проверить
	// заполненность обязательных реквизитов, если не заполнены, тогда заполнить автоматически значениями по умолчанию.
	// 
	// b. Запись документа программно
	// При программном создании нет адреса не существует. Соответственно требуется создать таблицу дополнительных реквизитов
	// и заполнить ее значениями по умолчанию, если таковые имеются.
	
	ИмяРеквизита = ДополнительныеРеквизитыКлиентСервер.ИмяРеквизитаАдреса();
	
	Если Источник.ДополнительныеСвойства.Свойство(ИмяРеквизита) И ЭтоАдресВременногоХранилища(Источник.ДополнительныеСвойства[ИмяРеквизита]) Тогда
		ТаблицаДополнительныхРеквизитов = ПолучитьИзВременногоХранилища(Источник.ДополнительныеСвойства[ИмяРеквизита]);
	ИначеЕсли Источник.ЭтоНовый() Тогда 
		ТаблицаДополнительныхРеквизитов = ПолучитьТаблицуДополнительныхРеквизитовОбъекта(Источник.Ссылка);
	Иначе
		ТаблицаДополнительныхРеквизитов = Неопределено;
	КонецЕсли;
	
	// Так как заранее не известно каким образом был создан объект,
	// интерактивно или нет, то необходимо очистить данные, которые
	// были сохранены в хранилище общих настроек.
	Ключи = ДополнительныеРеквизитыКлиентСервер.ПолучитьКлючиНастроек();
	ОбщегоНазначенияВызовСервера.УдалитьОбщиеНастройки(Ключи.Объект, Ключи.Настройка);
	
	// Обход реквизитов и проверка обязательности заполнения
	Если ТаблицаДополнительныхРеквизитов <> Неопределено Тогда
		Для Каждого СтрокаРеквизита Из ТаблицаДополнительныхРеквизитов Цикл
			Если СтрокаРеквизита.ОбязательноеЗаполнение И НЕ ЗначениеЗаполнено(СтрокаРеквизита.Значение) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Значение дополнительного реквизита """ + СтрокаРеквизита.Наименование + """ не заполнено!");
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ Отказ Тогда
			Источник.ДополнительныеСвойства.Вставить("ДополнительныеРеквизиты_ТаблицаРеквизитов", ТаблицаДополнительныхРеквизитов);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Выполняет сохранение дополнительных реквизитов на форме
//
// Параметры:
//  Источник - ОпределяемыйТип.ВладелецДополнительныхРеквизитов	 - объект (именно объект, не ссылка)
//  Отказ	 - Булево	 - признак отказа от записи
//
Процедура ОбработкаДополнительныхРеквизитовПриЗаписи(Источник, Отказ)
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("ДополнительныеРеквизиты_ТаблицаРеквизитов") Тогда	
		// 1. Получение таблицы реквизитов
		ТаблицаРеквизитов = Источник.ДополнительныеСвойства.ДополнительныеРеквизиты_ТаблицаРеквизитов;
		
		// 2. Запись дополнительных реквизитов
		РегистрыСведений.ЗначенияДополнительныхРеквизитовОбъектов.ЗаписатьЗначенияРеквизитов(Источник.Ссылка, ТаблицаРеквизитов, Отказ);
	КонецЕсли;
	
КонецПроцедуры

// Сохраняет таблицу дополнительных реквизитов в дополнительных свойствах объекта
//
// Параметры:
//  НовыйОбъект		 - ОпределяемыйТип.ВладелецДополнительныхРеквизитов	 - объект (именно объект, не ссылка)
//  ИсточникДанных	 - ОпределяемыйТип.ВладелецДополнительныхРеквизитов	 - источник, из которого будут получены данные для заполнения
//
Процедура ОбработкаДополнительныхРеквизитовЗаполнитьИзОбъекта(НовыйОбъект, ИсточникДанных)
	
	Попытка
		ДополнительныйОбъект = ИсточникДанных.Ссылка;
	Исключение
		ДополнительныйОбъект = Неопределено;
	КонецПопытки;
	
	ТаблицаЗначений = ПолучитьТаблицуДополнительныхРеквизитовОбъекта(НовыйОбъект.Ссылка,, ДополнительныйОбъект);
	АдресТаблицыДополнительныхРеквизитов = ПоместитьВоВременноеХранилище(ТаблицаЗначений, Новый УникальныйИдентификатор);
	
	// Так как данный обработчик может вызываться программно, то поместим адрес в дополнительные свойства объекта
	НовыйОбъект.ДополнительныеСвойства.Вставить(ДополнительныеРеквизитыКлиентСервер.ИмяРеквизитаАдреса(), АдресТаблицыДополнительныхРеквизитов);	
	
	// Для интерактивного варианта развития событий - сохраним адрес в хранилище общих настроек
	Ключи = ДополнительныеРеквизитыКлиентСервер.ПолучитьКлючиНастроек();	
	ОбщегоНазначенияВызовСервера.СохранитьОбщиеНастройки(Ключи.Объект, Ключи.Настройка, АдресТаблицыДополнительныхРеквизитов);
	
КонецПроцедуры

#КонецОбласти
