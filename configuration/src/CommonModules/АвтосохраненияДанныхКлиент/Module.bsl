///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Процедура ПриОткрытии(Форма, КэшДополнительныхДанных) Экспорт
	
	Если КэшДополнительныхДанных.Свойство("Автосохранения") Тогда
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ЗадатьВопросВосстановленияОписания", 0.1, Истина);
	КонецЕсли;
	
	Форма.АвтосохраняемыеРеквизиты = Новый ФиксированнаяСтруктура(КэшДополнительныхДанных.АвтосохраняемыеРеквизиты);
	КэшДополнительныхДанных.Удалить("АвтосохраняемыеРеквизиты");
	
КонецПроцедуры

Процедура АвтосохранениеДанных(Форма, Знач СохраняемыеКартинки = Неопределено) Экспорт
	
	Данные = ПодготовитьДанные(Форма);
	АвтосохраненияДанныхВызовСервера.АвтосохранениеДанныхОбъекта(Данные);
	
КонецПроцедуры

Процедура ВыключитьАвтосохранениеОписания(Форма, КэшДополнительныхДанных) Экспорт
	
	Форма.ОтключитьОбработчикОжидания("Подключаемый_ЗапуститьАвтосохранениеОписания");
	КэшДополнительныхДанных.ОбработчикАвтосохраненияЗапущен = Ложь;
	
КонецПроцедуры

// Показывает вопрос при открытии объекта для которого есть автоматические сохранения
//
// Параметры:
//  Форма			 - УправляемаяФорма - Форма объекта
//  Автосохранения - Массив - Найденные автосохранения
//  ИмяОбъекта		 - Строка - Представление текущего объекта в родительном падеже
//
Процедура ЗадатьВопросОВосстановленииОписания(Форма, КэшВспомогательныхДанных, Знач ИмяОбъекта) Экспорт
	
	ВариантыДействий = ВариантыДействийВосстановленияОписания();
	
	ВариантыОтвета = Новый СписокЗначений;
	
	Если КэшВспомогательныхДанных.Автосохранения.Количество() = 1 Тогда
		ТекстИзменений = "несохраненные изменения";
		ВариантыОтвета.Добавить(ВариантыДействий.Восстановить, "Восстановить");
		ВариантыОтвета.Добавить(ВариантыДействий.Просмотреть, "Просмотреть");
		ВариантыОтвета.Добавить(ВариантыДействий.Удалить, "Удалить");
	Иначе
		ТекстИзменений = "несколько вариантов несохраненных изменений";
		ВариантыОтвета.Добавить(ВариантыДействий.Восстановить, "Восстановить последнее");
		ВариантыОтвета.Добавить(ВариантыДействий.ОткрытьСписок, "Открыть список");
		ВариантыОтвета.Добавить(ВариантыДействий.Игнорировать, "Игнорировать");
	КонецЕсли;
	
	ТекстВопроса = СтрШаблон("Для %1 есть %2.", ИмяОбъекта, ТекстИзменений);
	
	ПараметрыОповещения = Новый Структура("Форма, Автосохранения", Форма, КэшВспомогательныхДанных.Автосохранения);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьДействиеВосстановленияОписания",
		АвтосохраненияДанныхКлиент, ПараметрыОповещения);
		
	Параметры = Новый Структура;
	Параметры.Вставить("ТекстВопроса", ТекстВопроса);
	Параметры.Вставить("Варианты", ВариантыОтвета);
	
	ОткрытьФорму("РегистрСведений.АвтосохраненныеОписания.Форма.ВопросВосстановленияОписания", Параметры,
		Форма, , , , ОписаниеОповещения);
		
	КэшВспомогательныхДанных.Удалить("Автосохранения");
	
КонецПроцедуры

Процедура ЗапуститьАвтосохранениеОписания(Форма, КэшДополнительныхДанных) Экспорт
	
	Если Форма.ДатаПоследнегоИзмененияОписания > Форма.ДатаПоследнегоАвтосохранения Тогда
		АвтосохранениеДанных(Форма);
		
		// Феникс ругается на использование метода ТекущаяДата(),
		// рекомендуется использование метода ТекущаяДатаСервер().
		// В данном случае, не требуется получение даты сервера,
		// можно обойтись даты клиентской машины.
		
		// BSLLS:DeprecatedCurrentDate-off
		Форма.ДатаПоследнегоАвтосохранения = ТекущаяДата();
		// BSLLS:DeprecatedCurrentDate-on
	Иначе
		ВыключитьАвтосохранениеОписания(Форма, КэшДополнительныхДанных);
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзменениеТекстаРедактирования(Форма, КэшВспомогательныхДанных) Экспорт
	
	Если КэшВспомогательныхДанных <> Неопределено Тогда
		Форма.ДатаПоследнегоИзмененияОписания = ТекущаяДата();
		
		Если КэшВспомогательныхДанных.ОбработчикАвтосохраненияЗапущен <> Истина Тогда
			КэшВспомогательныхДанных.ОбработчикАвтосохраненияЗапущен = Истина;
			Форма.ПодключитьОбработчикОжидания("Подключаемый_ЗапуститьАвтосохранениеОписания", 60);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Запускает процесс восстановления ранее сохраненного описания.
//
// Параметры:
//  Результат               - Произвольный - Дополнительный параметр 1.
//  ДополнительныеПараметры - Произвольный - Дополнительный параметр 2.
//
Процедура ОбработатьВосстановлениеОписания(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Истина Тогда
		Результат = ДополнительныеПараметры;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Форма = ДополнительныеПараметры.Форма;
		
		Если Результат.Свойство("Форма") Тогда
			Результат.Удалить("Форма");
		КонецЕсли;
		
		ПараметрыЗаполнения = АвтосохраненияДанныхВызовСервера.ОписаниеИзАвтосохранения(Результат, Форма.УникальныйИдентификатор);
		АвтосохраненияДанныхКлиентСервер.ЗаполнитьДанныеОбъектаИзАвтосохранения(Форма, ПараметрыЗаполнения);
		
		Форма[РедакторОписанияКлиентСервер.ИмяРеквизита()] = РедакторОписанияВызовСервера.ПолучитьРедактор(ПараметрыЗаполнения.ТекстОписания);
		Форма[РедакторОписанияКлиентСервер.ИмяРеквизитаАктуальноеОписание()] = ПараметрыЗаполнения.ТекстОписания;
		Форма[РедакторОписанияКлиентСервер.ИмяРеквизитаИзмененоОписание()] = Истина;	
		
		ОбщегоНазначенияКлиент.ОбновитьВидимостьСерьезностиОшибки(Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуАвтосохранений(ДополнительныеПараметры) Экспорт

	ОткрытьФорму("РегистрСведений.АвтосохраненныеОписания.Форма.ФормаСпискаАвтосохранений");
	
КонецПроцедуры

// Собирает данные
//
// Параметры:
//  Форма - УправляемаяФорма - Форма откуда вызыван метод
// 
// Возвращаемое значение:
//  Структура - Данные, которые нужно сохранить
//
Функция ПодготовитьДанные(Форма) Экспорт
	
	СохраняемыеРеквизиты = Форма.АвтосохраняемыеРеквизиты;
	ПодготовленныеДанные = Новый Структура;
	
	ПодготовленныеДанные.Вставить("РеквизитыОбъекта", Новый Структура);
	Для Каждого РеквизитОбъекта Из СохраняемыеРеквизиты.РеквизитыОбъекта Цикл
		ПодготовленныеДанные.РеквизитыОбъекта.Вставить(РеквизитОбъекта, Форма.Объект[РеквизитОбъекта]);
	КонецЦикла;
	
	ПодготовленныеДанные.Вставить("ТабличныеЧасти", Новый Структура);
	Для Каждого ТабличнаяЧасть Из СохраняемыеРеквизиты.ТабличныеЧасти Цикл
		ПреобразованнаяТаблица = Новый Массив;
		
		Для Каждого Строка Из Форма.Объект[ТабличнаяЧасть.Ключ] Цикл
			СвойстваСтроки = Новый Структура(ТабличнаяЧасть.Значение);
			ЗаполнитьЗначенияСвойств(СвойстваСтроки, Строка);
			ПреобразованнаяТаблица.Добавить(СвойстваСтроки);
		КонецЦикла;
		
		ПодготовленныеДанные.ТабличныеЧасти.Вставить(ТабличнаяЧасть.Ключ, ПреобразованнаяТаблица);
	КонецЦикла;
	
	ПодготовленныеДанные.Вставить("РеквизитыФормы", Новый Структура);
	Для Каждого РеквизитФормы Из СохраняемыеРеквизиты.РеквизитыФормы Цикл
		ПодготовленныеДанные.РеквизитыФормы.Вставить(РеквизитФормы, Форма[РеквизитФормы]);
	КонецЦикла;
	
	ТекущаяСтраница = Форма.Элементы.СтраницыДокумента.ТекущаяСтраница;
	
	Если Форма.Элементы.СтраницыДокумента.ТекущаяСтраница = Форма.Элементы.СтраницаОписание Тогда
		АктуальныйТекстОписания = РедакторОписанияКлиент.ПолучитьТекст(Форма, ТекущаяСтраница.Имя);
	Иначе
		АктуальныйТекстОписания = Форма[РедакторОписанияКлиентСервер.ИмяРеквизитаАктуальноеОписание()];
	КонецЕсли;
		
	ВспомогательныеДанные = Новый Структура;
	ВспомогательныеДанные.Вставить("ОбъектОснование", Форма.Объект.ОбъектОснование);
	ВспомогательныеДанные.Вставить("СсылкаНаОбъектДляАвтосохранения", Форма.СсылкаНаОбъектДляАвтосохранения);
	ВспомогательныеДанные.Вставить("НаименованиеОбъекта", Форма.Объект.Наименование);
	ВспомогательныеДанные.Вставить("АктуальныйТекстОписания", АктуальныйТекстОписания);
	
	ПодготовленныеДанные.Вставить("ВспомогательныеДанные", ВспомогательныеДанные);
	
	Возврат ПодготовленныеДанные;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВариантыДействийВосстановленияОписания()
	
	ВариантыДействий = Новый Структура;
	ВариантыДействий.Вставить("Восстановить", 0);
	ВариантыДействий.Вставить("Просмотреть", 1);
	ВариантыДействий.Вставить("ОткрытьСписок", 2);
	ВариантыДействий.Вставить("Удалить", 3);
	ВариантыДействий.Вставить("Игнорировать", 4);
	
	Возврат ВариантыДействий;
	
КонецФункции

// Обработчик описания оповещения, вызываемый в методе ЗадатьВопросОВосстановленииОписания.
//
// Параметры:
//  ВыбранноеДействие       - Неопределено, Число - Числовое значение варианта действия при
//                            восстановлении описания. Все варианты перечислены в методе 
//                            ВариантыДействийВосстановленияОписания().
//  ДополнительныеПараметры - Произвольный - Набор дополнительных параметров, которые можно передать
//                            в метод.
Процедура ОбработатьДействиеВосстановленияОписания(ВыбранноеДействие, ДополнительныеПараметры) Экспорт
	
	ВариантыДействий = ВариантыДействийВосстановленияОписания();
	
	Если ВыбранноеДействие = ВариантыДействий.Восстановить Тогда
		ОбработатьВосстановлениеОписания(ДополнительныеПараметры.Автосохранения[0], ДополнительныеПараметры);
		
	ИначеЕсли ВыбранноеДействие = ВариантыДействий.Просмотреть Тогда
		СохраненныеДанные = ДополнительныеПараметры.Автосохранения[0];
		
		HTMLОписание = РедакторОписанияВызовСервера.ПолучитьРедактор(СохраненныеДанные.АвтосохранениеТекстОписания, , Истина);
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Заголовок", СохраненныеДанные.ОбъектПредставление);
		ПараметрыОткрытия.Вставить("ТекстHTML", HTMLОписание);
		ПараметрыОткрытия.Вставить("ТолькоПросмотрОписания", Истина);
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("Форма", ДополнительныеПараметры.Форма);
		ПараметрыОповещения.Вставить("АвтосохранениеТекстОписания", СохраненныеДанные.АвтосохранениеТекстОписания);
		ПараметрыОповещения.Вставить("АвтосохранениеСсылка", СохраненныеДанные.АвтосохранениеСсылка);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВосстановлениеОписания", 
			АвтосохраненияДанныхКлиент, ПараметрыОповещения);
		
		ОткрытьФорму("ОбщаяФорма.ПросмотрОписания", ПараметрыОткрытия, ДополнительныеПараметры.Форма, , , ,
			ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли ВыбранноеДействие = ВариантыДействий.ОткрытьСписок Тогда
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ОткрытиеИзОбъекта", Истина);
		ПараметрыОткрытия.Вставить("Автосохранения", ДополнительныеПараметры.Автосохранения);
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("Форма", ДополнительныеПараметры.Форма);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВосстановлениеОписания",
			АвтосохраненияДанныхКлиент, ПараметрыОповещения);
		
		ОткрытьФорму("РегистрСведений.АвтосохраненныеОписания.Форма.ФормаСпискаАвтосохранений", 
			ПараметрыОткрытия, ДополнительныеПараметры.Форма, , , , ОписаниеОповещения);
		
	Иначе
		Если ВыбранноеДействие = ВариантыДействий.Удалить Тогда
			СохраненныеДанные = ДополнительныеПараметры.Автосохранения[0];
			АвтосохраненияДанныхВызовСервера.УдалитьАвтосохраненноеОписание(СохраненныеДанные.АвтосохранениеСсылка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
