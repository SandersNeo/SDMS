///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Функция ЗапуститьФоновоеЗадание(Знач ИмяМетода, Знач Параметры, Знач Ключ) Экспорт
	
	РезультатЗапуска = ОбщегоНазначения.СоздатьФоновоеЗадание(ИмяМетода, Параметры, ИмяМетода, Ключ);
	Возврат ЗначениеЗаполнено(РезультатЗапуска.Идентификатор);
	
КонецФункции

Процедура ОбработатьСообщениеСайта(Знач Данные) Экспорт
	
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Если Данные.event = "favoriteChange" Тогда
		Инструмент = Справочники.ИнструментыСистемы.ПолучитьСсылку(Новый УникальныйИдентификатор(Данные.id));
		ДобавлениеИзбранного = Данные.favoriteAdding;
		ЭтоОтчет = Данные.report;
		
		НаборЗаписей = РегистрыСведений.ИзбранныеИнструментыПользователей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Пользователь.Установить(ТекущийПользователь);
		НаборЗаписей.Отбор.ЭтоОтчет.Установить(ЭтоОтчет);
		
		НаборЗаписей.Прочитать();
		
		Если ДобавлениеИзбранного Тогда
			Порядок = НаборЗаписей.Количество();
			
			НаборЗаписей.Очистить();
			НаборЗаписей.Отбор.Инструмент.Установить(Инструмент);
			
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Пользователь = ТекущийПользователь;
			НоваяЗапись.Инструмент = Инструмент;
			НоваяЗапись.ЭтоОтчет = ЭтоОтчет;
			НоваяЗапись.Порядок = Порядок;
			
		Иначе
			ИзбранноеПользователя = НаборЗаписей.Выгрузить();
			Строка = ИзбранноеПользователя.Найти(Инструмент, "Инструмент");
			
			Если Строка <> Неопределено Тогда
				ИзбранноеПользователя.Удалить(Строка);
				ИзбранноеПользователя.Сортировать("Порядок");
				
				Порядок = 0;
				
				Для Каждого Строка Из ИзбранноеПользователя Цикл
					Строка.Порядок = Порядок;
					Порядок = Порядок + 1;
				КонецЦикла;
				
				НаборЗаписей.Загрузить(ИзбранноеПользователя);
			Иначе
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		НаборЗаписей.Записать();
		
	ИначеЕсли Данные.event = "favoriteReportsChange" Тогда
		НаборЗаписей = РегистрыСведений.ИзбранныеИнструментыПользователей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Пользователь.Установить(ТекущийПользователь);
		НаборЗаписей.Отбор.ЭтоОтчет.Установить(Истина);
		
		Порядок = 0;
		Для Каждого ИзбранныйОтчет Из Данные.favoriteReports Цикл
			Инструмент = Справочники.ИнструментыСистемы.ПолучитьСсылку(Новый УникальныйИдентификатор(ИзбранныйОтчет));
			
			НоваяСтрока = НаборЗаписей.Добавить();
			НоваяСтрока.Пользователь = ТекущийПользователь;
			НоваяСтрока.ЭтоОтчет = Истина;
			НоваяСтрока.Инструмент = Инструмент;
			НоваяСтрока.Порядок = Порядок;
			
			Порядок = Порядок + 1;
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	ИначеЕсли Данные.event = "favoriteOnUpdateOrder" Тогда
		Инструмент = Справочники.ИнструментыСистемы.ПолучитьСсылку(Новый УникальныйИдентификатор(Данные.id));
		ЭтоОтчет = Данные.report;
		Сдвиг = Данные.newIndex - Данные.oldIndex;
		
		НаборЗаписей = РегистрыСведений.ИзбранныеИнструментыПользователей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Пользователь.Установить(ТекущийПользователь);
		НаборЗаписей.Отбор.ЭтоОтчет.Установить(ЭтоОтчет);
		
		НаборЗаписей.Прочитать();
		ИзбранноеПользователя = НаборЗаписей.Выгрузить();
		Строка = ИзбранноеПользователя.Найти(Инструмент, "Инструмент");
		
		Если Строка <> Неопределено Тогда
			ИзбранноеПользователя.Сортировать("Порядок");
			ИзбранноеПользователя.Сдвинуть(Строка, Сдвиг);
			
			Порядок = 0;
			
			Для Каждого Строка Из ИзбранноеПользователя Цикл
				Строка.Порядок = Порядок;
				Порядок = Порядок + 1;
			КонецЦикла;
			
			НаборЗаписей.Загрузить(ИзбранноеПользователя);
			НаборЗаписей.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
