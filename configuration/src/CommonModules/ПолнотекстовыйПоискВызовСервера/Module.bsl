///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Производит полнотекстовый поиск с настройками из контейнера состояний поиска
//
// Параметры:
//  КонтейнерСостояний	 - Структура	 - контейнер состояний поиска полученный методом ПолучитьКонтейнерСостоянийПоиска()
//  СтрокаПоиска		 - Строка	 - строка поиска
//  НаправлениеПоиска	 - Строка	 - направление поиска
//
Процедура ВыполнитьПолнотекстовыйПоиск(КонтейнерСостояний, СтрокаПоиска, НаправлениеПоиска = "ПерваяЧасть") Экспорт
	
	ПараметрыПоиска = Обработки.ПолнотекстовыйПоиск.ПараметрыПоиска();
	ЗаполнитьЗначенияСвойств(ПараметрыПоиска, КонтейнерСостояний,
		"ТекущаяПозиция, ПоискПоНомеру, ПоискПоТегу");
	
	ПараметрыПоиска.СтрокаПоиска = СтрокаПоиска;
	ПараметрыПоиска.НаправлениеПоиска = НаправлениеПоиска;
	
	РезультатПоиска = Обработки.ПолнотекстовыйПоиск.ВыполнитьПолнотекстовыйПоиск(ПараметрыПоиска);
	
	ЗаполнитьЗначенияСвойств(КонтейнерСостояний, РезультатПоиска, 
		"ТекущаяПозиция, Количество, ПолноеКоличество, КодОшибки, ОписаниеОшибки, РезультатыПоиска");	
	
КонецПроцедуры

// Проверяет, что заявка не черновик
//
// Параметры:
//  ИдентификаторЗаявки	 - УникальныйИдентификатор - идентификатор заявки 
// 
// Возвращаемое значение:
//   Булево 
//
Функция ПолучитьДоступностьЗаявки(Знач ИдентификаторЗаявки) Экспорт
	
	РезультатПроверки = Ложь;
	
	Ссылка = Документы.ЗаявкаНаРазработку.ПолучитьСсылку(ИдентификаторЗаявки);	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаРазработку.Номер КАК Номер,
	|	ЗаявкаНаРазработку.Наименование КАК Наименование,
	|	ЗаявкаНаРазработку.Черновик КАК Черновик,
	|	ЗаявкаНаРазработку.Автор КАК Автор,
	|	ПРЕДСТАВЛЕНИЕ(ЗаявкаНаРазработку.Автор) КАК АвторПредставление,
	|	ВЫБОР
	|		КОГДА ДоступныеЧерновики.Заявка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьДоступ
	|ИЗ
	|	Документ.ЗаявкаНаРазработку КАК ЗаявкаНаРазработку
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоступныеЧерновики КАК ДоступныеЧерновики
	|		ПО ЗаявкаНаРазработку.Ссылка = ДоступныеЧерновики.Заявка
	|			И (ДоступныеЧерновики.Пользователь = &ТекущийПользователь)
	|ГДЕ
	|	ЗаявкаНаРазработку.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Если Выборка.Черновик И Выборка.Автор <> ПараметрыСеанса.ТекущийПользователь И Выборка.ЕстьДоступ = Ложь Тогда
			РезультатПроверки = Новый Структура;
			РезультатПроверки.Вставить("Номер", Выборка.Номер);
			РезультатПроверки.Вставить("Наименование", Выборка.Наименование);
			РезультатПроверки.Вставить("Черновик", Выборка.Черновик);
			РезультатПроверки.Вставить("Автор", Выборка.Автор);
			РезультатПроверки.Вставить("АвторПредставление", Выборка.АвторПредставление);
		Иначе
			РезультатПроверки = Истина;
		КонецЕсли;		
	КонецЕсли;	
		
	Возврат РезультатПроверки;
	
КонецФункции	

// Получить массив префиксов объектов
// 
// Возвращаемое значение:
//  Массив - Массив префиксов документов и справочников
//
Функция ПолучитьМассивПрефиксовОбъектов() Экспорт	
		
	Массив = Новый Массив;
	Массив.Добавить(Документы.ЗаявкаНаРазработку.ПолучитьПрефикс());
	Массив.Добавить(Документы.ВнутреннееЗадание.ПолучитьПрефикс());
	Массив.Добавить(Документы.ВнутренниеТрудозатраты.ПолучитьПрефикс());
	Массив.Добавить(Документы.Задача.ПолучитьПрефикс());
	Массив.Добавить(Справочники.Проекты.ПолучитьПрефикс());
	Возврат Массив;
	
КонецФункции   

#КонецОбласти
