///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьИсториюИсполнителей(Параметры.Задача);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СтрокаПоискаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	Если НЕ ПустаяСтрока(Текст) Тогда
		Элементы.ИсторияИсполнителей.ОтборСтрок = Новый ФиксированнаяСтруктура("ПредставлениеПользователя", Текст);
	Иначе
		Элементы.ИсторияИсполнителей.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СброситьПоиск();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий таблицы ИсторияИсполнителей

&НаКлиенте
Процедура ИсторияИсполнителейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Поле.Имя = "ИсторияИсполнителейПользователь" Тогда
		ОткрытьКонтактнуюИнформацию(ВыбраннаяСтрока);
	Иначе
		ПриВыбореСтрокиТаблицыИстории(ВыбраннаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьПользователя(Команда)
	
	ПриВыбореСтрокиТаблицыИстории(Элементы.ИсторияИсполнителей.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПоиск(Команда)
	
	СброситьПоиск();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьИсториюИсполнителей(Знач Задача)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СвойстваЗадач.Период КАК Дата,
	|	СвойстваЗадач.Исполнитель КАК Пользователь,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(СвойстваЗадач.Исполнитель) КАК ПредставлениеПользователя,
	|	ВЫБОР
	|		КОГДА СвойстваЗадач.ПользовательскийСтатус <> ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ПустаяСсылка)
	|			ТОГДА СвойстваЗадач.ПользовательскийСтатус
	|		ИНАЧЕ СвойстваЗадач.Статус
	|	КОНЕЦ КАК Статус,
	|	ЕСТЬNULL(СтатусыОбъектов.ИндексКартинки, 0) КАК ИндексКартинки,
	|	ЕСТЬNULL(СтатусыОбъектов.Порядок, 0) КАК Порядок
	|ИЗ
	|	РегистрСведений.СвойстваЗадач КАК СвойстваЗадач
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО СвойстваЗадач.Статус = СтатусыОбъектов.Ссылка
	|ГДЕ
	|	СвойстваЗадач.Объект = &Задача
	|	И СвойстваЗадач.Исполнитель <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СвойстваЗадач.Период";
	
	Запрос.УстановитьПараметр("Задача", Задача);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ИсторияИсполнителей.Добавить(), Выборка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонтактнуюИнформацию(Знач ИдентификаторСтроки)
	
	СтрокаТаблицы = ИсторияИсполнителей.НайтиПоИдентификатору(ИдентификаторСтроки);
	Если СтрокаТаблицы <> Неопределено Тогда
		ИнтерфейсПриложенияКлиент.ОткрытьИнформациюОПользователе(ЭтотОбъект, СтрокаТаблицы.Пользователь, Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореСтрокиТаблицыИстории(Знач ИдентификаторСтроки)
	
	Если ИдентификаторСтроки <> Неопределено Тогда
		СтрокаТаблицы = ИсторияИсполнителей.НайтиПоИдентификатору(ИдентификаторСтроки);
	КонецЕсли;
	
	Если СтрокаТаблицы <> Неопределено Тогда
		Закрыть(СтрокаТаблицы.Пользователь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьПоиск()
	
	// Очистка отбора, очистка строки поиска и установка фокуса на строку поиска
	Элементы.ИсторияИсполнителей.ОтборСтрок = Неопределено;
	
	СтрокаПоиска = "";
	
	ТекущийЭлемент = Элементы.СтрокаПоиска;	
	
КонецПроцедуры

#КонецОбласти
