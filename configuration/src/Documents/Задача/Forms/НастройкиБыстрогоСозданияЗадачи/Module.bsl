///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

&НаКлиенте
Перем ИменаИзмененныхРеквизитов;

&НаКлиенте
Перем КэшВспомогательныхДанных;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Пользователь = ПараметрыСеанса.ТекущийПользователь;
	ИдентификаторФормы = ОбщегоНазначенияКлиентСервер.СтрУникальныйИдентификатор(УникальныйИдентификатор); 
	
	СформироватьЭлементыФормы();
	ЗаполнитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	КэшВспомогательныхДанных = ПолучитьКэшВспомогательныхДанных();

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ЗавершениеРаботы  И ИменаИзмененныхРеквизитов.Количество() > 0 Тогда
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВопросСохраненияНастроек", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "Есть несохраненные настройки, сохранить?", РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

// Обработчик события ПриИзмении для всех программно сгенерированных реквизитов
//
// Параметры:
//  Элемент	 - ПолеФормы	 - измененный элемент
//
&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизитаФормы(Элемент)
	
	ПриИзмененииРеквизитаФормы(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НачалоВыбораГруппыЗаказчиков(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИмяРеквизитаНаправление = ПолноеИмяРеквизита("НаправлениеДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
	ИмяРеквизитаСистема = ПолноеИмяРеквизита("СистемаДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
	
	ОтфильтрованныеГруппыЗаказчиков = ПолучитьГруппыЗаказчиков(ЭтотОбъект[ИмяРеквизитаНаправление],
		ЭтотОбъект[ИмяРеквизитаСистема]);
	
	ИмяРеквизитаГруппаЗаказчиков = ПолноеИмяРеквизита("ГруппаЗаказчиковДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
	ИнтерфейсПриложенияКлиент.ОткрытьФормуВыбораГруппыЗаказчиков(ЭтотОбъект, ОтфильтрованныеГруппыЗаказчиков,
		Элементы[ИмяРеквизитаГруппаЗаказчиков]);
	
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	ОбработатьИзменениеРеквизитов();
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ГруппаЗаказчиковОбработкаВыбора(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат <> Неопределено Тогда
		ИмяРеквизитаГруппаЗаказчиков = ПолноеИмяРеквизита("ГруппаЗаказчиковДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
		ЭтотОбъект[ИмяРеквизитаГруппаЗаказчиков] = Результат;
		ПриИзмененииРеквизитаФормы(Элементы[ИмяРеквизитаГруппаЗаказчиков]);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЭлементыФормы()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыНастроекПользователя.Ссылка КАК Ссылка,
	|	ВидыНастроекПользователя.Наименование КАК Наименование,
	|	ВидыНастроекПользователя.Подсказка КАК Подсказка,
	|	ВидыНастроекПользователя.ТипЗначения КАК ТипЗначения,
	|	ВидыНастроекПользователя.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных
	|ИЗ
	|	ПланВидовХарактеристик.ВидыНастроекПользователя КАК ВидыНастроекПользователя
	|ГДЕ
	|	НЕ ВидыНастроекПользователя.ПометкаУдаления
	|	И НЕ ВидыНастроекПользователя.Скрытый
	|	И ВидыНастроекПользователя.Родитель = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыНастроекПользователя.БыстроеСозданиеЗадачи)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокСледования,
	|	Наименование";
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		ТаблицаРеквизитов = Результат.Выгрузить();
		
		СоздатьРеквизиты(ТаблицаРеквизитов);
		СоздатьЭлементы(ТаблицаРеквизитов);
	КонецЕсли;
		
КонецПроцедуры  

&НаСервере
Процедура СоздатьРеквизиты(ТаблицаРеквизитов)
	
	ДобавляемыеРеквизиты = Новый Массив;
	Типы = Новый Массив;
	
	ТаблицаРеквизитов.Колонки.Добавить("ИмяРеквизита");
		
	Для Каждого СтрокаРеквизита Из ТаблицаРеквизитов Цикл
		СтрокаРеквизита.ИмяРеквизита = ПолноеИмяРеквизита(СтрокаРеквизита.ИмяПредопределенныхДанных, ИдентификаторФормы);
		
		Если ТипЗнч(СтрокаРеквизита.ТипЗначения) = Тип("Тип") Тогда  
			Типы.Очистить();
			Типы.Добавить(СтрокаРеквизита.ТипЗначения);
			СтрокаРеквизита.ТипЗначения = Новый ОписаниеТипов(Типы);
		КонецЕсли;
		
		НовыйРеквизит = Новый РеквизитФормы(СтрокаРеквизита.ИмяРеквизита, СтрокаРеквизита.ТипЗначения, , СтрокаРеквизита.Наименование);
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит); 
	КонецЦикла;

	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементы(ТаблицаРеквизитов)
	
	Для Каждого СтрокаРеквизита Из ТаблицаРеквизитов Цикл   
		
		Ссылка = СтрокаРеквизита.Ссылка;
		ГруппаРодитель = Элементы.ГруппаНастройки;
		
		НовыйЭлемент = Элементы.Добавить(СтрокаРеквизита.ИмяРеквизита, Тип("ПолеФормы"), ГруппаРодитель);
		НовыйЭлемент.ПутьКДанным = СтрокаРеквизита.ИмяРеквизита;
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.КнопкаВыбора = Ложь;
		НовыйЭлемент.КнопкаСоздания = Ложь;
		НовыйЭлемент.КнопкаВыпадающегоСписка = Истина;
		НовыйЭлемент.ИсторияВыбораПриВводе = ИсторияВыбораПриВводе.НеИспользовать;  
		НовыйЭлемент.Подсказка = СтрокаРеквизита.Подсказка;
		НовыйЭлемент.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
		
		Если Ссылка = ПланыВидовХарактеристик.ВидыНастроекПользователя.НаправлениеДляБыстрогоСозданияЗадачи Тогда
			ТаблицаНаправленийРолей = Пользователи.ТаблицаНаправленийРолейПользователя();
			НовыйЭлемент.СписокВыбора.ЗагрузитьЗначения(ТаблицаНаправленийРолей.СписокНаправлений.ВыгрузитьЗначения());
			
		ИначеЕсли Ссылка = ПланыВидовХарактеристик.ВидыНастроекПользователя.ЮрЛицоДляБыстрогоСозданияЗадачи Тогда
			НовыйЭлемент.Доступность = Ложь;
			
		ИначеЕсли Ссылка = ПланыВидовХарактеристик.ВидыНастроекПользователя.НазначениеДляБыстрогоСозданияЗадачи Тогда
			ОбщегоНазначения.ЗаполнитьСписокНазначений(НовыйЭлемент.СписокВыбора);
			
		ИначеЕсли Ссылка = ПланыВидовХарактеристик.ВидыНастроекПользователя.СистемаДляБыстрогоСозданияЗадачи
			ИЛИ Ссылка = ПланыВидовХарактеристик.ВидыНастроекПользователя.ПродуктДляБыстрогоСозданияЗадачи Тогда
				
			НовыйЭлемент.КнопкаВыбора = Истина;
			НовыйЭлемент.ИсторияВыбораПриВводе = ИсторияВыбораПриВводе.Авто;

		ИначеЕсли Ссылка = ПланыВидовХарактеристик.ВидыНастроекПользователя.ГруппаЗаказчиковДляБыстрогоСозданияЗадачи Тогда
			НовыйЭлемент.КнопкаВыбора = Истина;
			НовыйЭлемент.ОтображениеКнопкиВыбора = ОтображениеКнопкиВыбора.ОтображатьВПолеВвода;
			НовыйЭлемент.КнопкаВыпадающегоСписка = Ложь;
			НовыйЭлемент.РедактированиеТекста = Ложь;
			НовыйЭлемент.ИсторияВыбораПриВводе = ИсторияВыбораПриВводе.НеИспользовать;
			
			НовыйЭлемент.УстановитьДействие("НачалоВыбора", "Подключаемый_НачалоВыбораГруппыЗаказчиков");
			
		ИначеЕсли Ссылка = ПланыВидовХарактеристик.ВидыНастроекПользователя.ВидЗадачиДляБыстрогоСозданияЗадачи Тогда
			ВидыЗадач = РегистрыСведений.ВидыЗадачФилиалов.ПолучитьВидыЗадач(ПараметрыСеанса.Филиал);
			
			НовыйЭлемент.СписокВыбора.ЗагрузитьЗначения(ВидыЗадач);
			НовыйЭлемент.Видимость = (ВидыЗадач.Количество() <> 0);	
		КонецЕсли;  
		
		// Добавляем действие при изменении реквизита
		НовыйЭлемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзмененииРеквизитаФормы");
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройки()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыНастроекПользователя.Ссылка КАК Ссылка,
	|	ВидыНастроекПользователя.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных
	|ПОМЕСТИТЬ ВсеВидыНастроек
	|ИЗ
	|	ПланВидовХарактеристик.ВидыНастроекПользователя КАК ВидыНастроекПользователя
	|ГДЕ
	|	НЕ ВидыНастроекПользователя.ЭтоГруппа
	|	И НЕ ВидыНастроекПользователя.ПометкаУдаления
	|	И НЕ ВидыНастроекПользователя.Скрытый
	|	И ВидыНастроекПользователя.Родитель = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыНастроекПользователя.БыстроеСозданиеЗадачи)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыНастроекПользователя.Ссылка КАК Ссылка,
	|	ВидыНастроекПользователя.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
	|	НастройкиПользователя.Значение КАК Значение
	|ПОМЕСТИТЬ НастройкиПользователя
	|ИЗ
	|	РегистрСведений.НастройкиПользователя КАК НастройкиПользователя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВидыНастроекПользователя КАК ВидыНастроекПользователя
	|		ПО НастройкиПользователя.Настройка = ВидыНастроекПользователя.Ссылка
	|			И (НастройкиПользователя.Пользователь = &Пользователь)
	|			И (ВидыНастроекПользователя.Родитель = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыНастроекПользователя.БыстроеСозданиеЗадачи))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеВидыНастроек.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
	|	ЕСТЬNULL(НастройкиПользователя.Значение, НЕОПРЕДЕЛЕНО) КАК Значение
	|ИЗ
	|	ВсеВидыНастроек КАК ВсеВидыНастроек
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиПользователя КАК НастройкиПользователя
	|		ПО ВсеВидыНастроек.Ссылка = НастройкиПользователя.Ссылка
	|";

	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	РезультатЗапроса = Запрос.Выполнить();

	Если НЕ РезультатЗапроса.Пустой() Тогда
		РаботаСНастройками.УстановитьЗначенияРеквизитам(ЭтотОбъект, РезультатЗапроса);
	КонецЕсли;
		
	ИмяРеквизитаНаправление = ПолноеИмяРеквизита("НаправлениеДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
		
	Если ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизитаНаправление]) Тогда
		ИмяРеквизитаЮрЛицо = ПолноеИмяРеквизита("ЮрЛицоДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
		Элементы[ИмяРеквизитаЮрЛицо].Доступность = Истина;
		
		ДанныеСписка = РаботаСНастройкамиВызовСервера.ПолучитьСписокВыбораЮридическихЛиц(ЭтотОбъект[ИмяРеквизитаНаправление]);
		
		Для Каждого ЭлементСписка Из ДанныеСписка Цикл
			Элементы[ИмяРеквизитаЮрЛицо].СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		КонецЦикла;
	КонецЕсли;
	
	ИмяРеквизитаГруппаЗаказчиков = ПолноеИмяРеквизита("ГруппаЗаказчиковДляБыстрогоСозданияЗадачи", ИдентификаторФормы); 
	ИмяРеквизитаПродукт = ПолноеИмяРеквизита("ПродуктДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
	
	ДоступностьГруппаЗаказчиков = НЕ ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизитаПродукт]);
	ДоступностьПродукт = НЕ ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизитаГруппаЗаказчиков]); 
	
	Элементы[ИмяРеквизитаГруппаЗаказчиков].Доступность = ДоступностьГруппаЗаказчиков;
	Элементы[ИмяРеквизитаПродукт].Доступность = ДоступностьПродукт;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииРеквизитаФормы(Элемент)
	
	ТипЭлемента = ТипЗнч(Элемент);
	Если ТипЭлемента = Тип("Строка") Тогда
		ИмяРеквизита = Элемент;
	Иначе
		ИмяРеквизита = Элемент.Имя;
	КонецЕсли;
	
	ДобавитьРеквизитВСписокИзмененных(ИмяРеквизита);
		
	Если СтрНачинаетсяС(ИмяРеквизита, "НаправлениеДляБыстрогоСозданияЗадачи") Тогда	
		ИмяРеквизитаЮрЛицо = ПолноеИмяРеквизита("ЮрЛицоДляБыстрогоСозданияЗадачи", ИдентификаторФормы); 

		ЭтотОбъект[ИмяРеквизитаЮрЛицо] = ПредопределенноеЗначение("Справочник.ЮридическиеЛица.ПустаяСсылка"); 
		ОбновитьСписокВыбораЮридическогоЛица();
		
		ПриИзмененииРеквизитаФормы(ИмяРеквизитаЮрЛицо);
	КонецЕсли;
	
	// Не должно быть возможности заполнить одновременно поля Продукт и Группа заказчиков.
	// Если был заполнен Продукт, то Группа заказчиков должна стать недоступной.
	// Если поле Продукт было очищено, то Группа заказчиков должна стать доступной.
	Если СтрНачинаетсяС(ИмяРеквизита, "ПродуктДляБыстрогоСозданияЗадачи") Тогда	
		ДоступностьГруппаЗаказчиков = НЕ ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизита]);
		ИмяРеквизитаГруппаЗаказчиков = ПолноеИмяРеквизита("ГруппаЗаказчиковДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
		Элементы[ИмяРеквизитаГруппаЗаказчиков].Доступность = ДоступностьГруппаЗаказчиков;
		ДобавитьРеквизитВСписокИзмененных(ИмяРеквизитаГруппаЗаказчиков);
	КонецЕсли; 
	
	// И наоборот: если Группа заказчиков заполнена, не должно быть возможности заполнить Продукт.
	Если СтрНачинаетсяС(ИмяРеквизита, "ГруппаЗаказчиковДляБыстрогоСозданияЗадачи") Тогда	
		ДоступностьПродукт = НЕ ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизита]);
		ИмяРеквизитаПродукт = ПолноеИмяРеквизита("ПродуктДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
		Элементы[ИмяРеквизитаПродукт].Доступность = ДоступностьПродукт;
		ДобавитьРеквизитВСписокИзмененных(ИмяРеквизитаПродукт);
	КонецЕсли;
		
	Модифицированность = Истина; 
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРеквизитВСписокИзмененных(ИмяРеквизита)  
	
	НайденныйЭлемент = ИменаИзмененныхРеквизитов.Найти(ИмяРеквизита);
	Если НайденныйЭлемент = Неопределено Тогда
		ИменаИзмененныхРеквизитов.Добавить(ИмяРеквизита);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокВыбораЮридическогоЛица()

	ИмяЭлементаНаправления = ПолноеИмяРеквизита("НаправлениеДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
	ИмяЭлементаЮрЛица = ПолноеИмяРеквизита("ЮрЛицоДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
	
	НаправлениеРазработки = ЭтотОбъект[ИмяЭлементаНаправления];	
	Элемент = Элементы.Найти(ИмяЭлементаЮрЛица);
	
	Если Элемент <> Неопределено Тогда
		ДанныеСписка = РаботаСНастройкамиВызовСервера.ПолучитьСписокВыбораЮридическихЛиц(НаправлениеРазработки);
		
		ЗаполнятьСписокВыбора = (ДанныеСписка.Количество() > 0);
		Элемент.Доступность = ЗаполнятьСписокВыбора;
		
		СписокВыбора = Элемент.СписокВыбора;
		СписокВыбора.Очистить();
		
		Если ЗаполнятьСписокВыбора Тогда
			Для Каждого ЭлементСписка Из ДанныеСписка Цикл
				СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
			КонецЦикла;
		КонецЕсли;
		
		ВыбранноеЮридическоеЛицо = ЭтотОбъект[ИмяЭлементаЮрЛица];
		НайденныйЭлемент = СписокВыбора.НайтиПоЗначению(ВыбранноеЮридическоеЛицо);
		Если НайденныйЭлемент = Неопределено Тогда
			ЭтотОбъект[ИмяЭлементаЮрЛица] = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолноеИмяРеквизита(ИмяРеквизита, ИдентификаторФормы) 
	
	Возврат СтрШаблон("%1_%2", ИмяРеквизита, ИдентификаторФормы);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьВопросСохраненияНастроек(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОбработатьИзменениеРеквизитов();
		Закрыть();
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		ИменаИзмененныхРеквизитов.Очистить();		
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеРеквизитов()
	
	Если ИменаИзмененныхРеквизитов.Количество() > 0 Тогда	
		НовыеЗначения = РаботаСНастройкамиКлиент.ПолучитьСохраняемыеНастройки(ЭтотОбъект, ИменаИзмененныхРеквизитов);
		
		Если НовыеЗначения.Количество() > 0 Тогда
			СохранитьНастройки(Пользователь, НовыеЗначения);
			ИменаИзмененныхРеквизитов.Очистить();
			Модифицированность = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьГруппыЗаказчиков(Знач Направление, Знач Система)
	
	Результат = Новый Массив;
	
	ЭлементНаправление = КэшВспомогательныхДанных.ГруппыЗаказчиков.Получить(Направление);
	                     
	Если ЭлементНаправление <> Неопределено Тогда
		ЭлементСистема = ЭлементНаправление.Получить(Система);
		
		Если ЭлементСистема <> Неопределено Тогда
			Результат = ЭлементСистема;
		КонецЕсли; 
	КонецЕсли; 
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКэшВспомогательныхДанных()
		
	ВспомогательныеДанные = Новый Структура;
	
	ГруппыЗаказчиков = ИнтерфейсПриложения.ПолучитьСписокГруппЗаказчиков();
	ВспомогательныеДанные.Вставить("ГруппыЗаказчиков", ГруппыЗаказчиков);
		
	Возврат ВспомогательныеДанные;
	
КонецФункции

&НаСервереБезКонтекста
Процедура СохранитьНастройки(Знач Пользователь, Знач НовыеЗначения)
		
	Результат = Новый Структура("НастройкиСохранены, ТекстОшибки", Истина, "");

	Для Каждого СтруктураЗначения Из НовыеЗначения Цикл
		НастройкаСсылка = ПланыВидовХарактеристик.ВидыНастроекПользователя[СтруктураЗначения.ИмяНастройки];
		РегистрыСведений.НастройкиПользователя.СохранитьНастройку(Пользователь, НастройкаСсылка, СтруктураЗначения.Значение);
	КонецЦикла;
	
	Если НЕ Результат.НастройкиСохранены Тогда
		ЗаписьЖурналаРегистрации("НастройкиПользователя", УровеньЖурналаРегистрации.Ошибка,,, Результат.ТекстОшибки);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

#Если ТонкийКлиент ИЛИ ВебКлиент Тогда

ИменаИзмененныхРеквизитов = Новый Массив;

#КонецЕсли

#КонецОбласти
