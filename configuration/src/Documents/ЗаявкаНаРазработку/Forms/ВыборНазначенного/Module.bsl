///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)  
	
	Если НЕ (Параметры.Свойство("Система") И Параметры.Свойство("Филиал") И Параметры.Свойство("Пользователь")) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Форма не предназначена для непосредственного открытия.", , , , Отказ);
	КонецЕсли; 
		
	Система = Параметры.Система;
	
	ЗаполнитьФилиалы();
		
	Если ЗначениеЗаполнено(Параметры.Филиал) Тогда
		Филиал = Параметры.Филиал;
	Иначе
		Филиал = ПараметрыСеанса.Филиал;
	КонецЕсли;
	
	Если Параметры.ВозможностьНазначать Тогда
		Если ЗначениеЗаполнено(Параметры.Пользователь) Тогда
			Пользователь = Параметры.Пользователь;
		Иначе
			Пользователь = ПараметрыСеанса.ТекущийПользователь;
		КонецЕсли;
	Иначе 
		Элементы.Пользователи.Видимость = Ложь;
	КонецЕсли;
		
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("УказатьТекущуюСтроку", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПользователиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыбратьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура ФилиалыПриАктивизацииСтроки(Элемент)  
	
	Если НЕ Элементы.Пользователи.Видимость ИЛИ Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПользователи(Элемент.ТекущиеДанные.Ссылка);
	
	Если ЗначениеЗаполнено(Пользователь) Тогда
		НайденныеСтроки = Пользователи.НайтиСтроки(Новый Структура("Ссылка", Пользователь));
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			Элементы.Пользователи.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
		КонецЕсли;
		
		// Пользователь может быть заполнен только при открытии формы, 
		// после его обработки (активации строки) очищаем и более не используем.
		Пользователь = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФилиалыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)  
		
	НайденнаяСтрока = Филиалы.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если Поле.Имя = "ФилиалыИзбранное" Тогда
		Избранное = НайденнаяСтрока.Избранное;
		
		ПараметрыОтбора = Новый Структура("Родитель", НайденнаяСтрока.Ссылка);
		НайденныеСтроки = Филиалы.НайтиСтроки(ПараметрыОтбора);
		
		Для Каждого Строка Из НайденныеСтроки Цикл
			Строка.Избранное = НЕ Избранное;
		КонецЦикла;
		
		ОбщегоНазначенияВызовСервера.ОбработатьПометкуИзбранного(НайденнаяСтрока.Ссылка, НайденнаяСтрока.Избранное, "Филиалы");
		
		Филиалы.Сортировать("Избранное УБЫВ, РодительПредставление, ПриоритетСортировки, Наименование");		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
		
	ВыбратьДанные();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьДанные()
	
	ТекущиеДанныеФилиал = Элементы.Филиалы.ТекущиеДанные;
	
	Если ТекущиеДанныеФилиал <> Неопределено Тогда
		Филиал = ТекущиеДанныеФилиал.Ссылка;
		ФилиалПредставление = ТекущиеДанныеФилиал.Наименование;
	Иначе
		Филиал = Неопределено;
		ФилиалПредставление = "";
	КонецЕсли;
	
	Если Филиал = ПредопределенноеЗначение("Справочник.Филиалы.КастомныеКоманды") Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанныеПользователь = Элементы.Пользователи.ТекущиеДанные;
	
	Если ТекущиеДанныеПользователь <> Неопределено Тогда
		Пользователь = ТекущиеДанныеПользователь.Ссылка;
		ПользовательПредставление = ТекущиеДанныеПользователь.ФИО; 
	Иначе
		Пользователь = Неопределено;
		ПользовательПредставление = "";
	КонецЕсли; 
	
	ПараметрыЗакрытия = Новый Структура; 
	ПараметрыЗакрытия.Вставить("Система", Система);
	ПараметрыЗакрытия.Вставить("Филиал", Филиал);
	ПараметрыЗакрытия.Вставить("ФилиалПредставление", ФилиалПредставление);
	ПараметрыЗакрытия.Вставить("Пользователь", Пользователь);
	ПараметрыЗакрытия.Вставить("ПользовательПредставление", ПользовательПредставление);
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФилиалы()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	#Область ТекстЗапроса	
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ИзбранныеОбъекты.Объект КАК Справочник.Филиалы) КАК Филиал
	|ПОМЕСТИТЬ ИзбранныеФилиалы
	|ИЗ
	|	РегистрСведений.ИзбранныеОбъекты КАК ИзбранныеОбъекты
	|ГДЕ
	|	ИзбранныеОбъекты.Владелец = &ТекущийПользователь
	|	И ИзбранныеОбъекты.ТипОбъекта = ЗНАЧЕНИЕ(Перечисление.ТипыИзбранныхОбъектов.Филиалы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Филиалы.Ссылка КАК Команда,
	|	Филиалы.Родитель КАК Филиал
	|ПОМЕСТИТЬ ДоступныеКастомныеКоманды
	|ИЗ
	|	Справочник.Филиалы КАК Филиалы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЛичныеДела.СрезПоследних(, Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПереведенВКастомнуюКоманду)) КАК ЛичныеДелаКоманда
	|		ПО (Филиалы.Родитель = ЗНАЧЕНИЕ(Справочник.Филиалы.КастомныеКоманды))
	|			И (ЛичныеДелаКоманда.Данные = Филиалы.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО (ЛичныеДелаКоманда.Сотрудник = Пользователи.Ссылка)
	|			И (НЕ Пользователи.ПометкаУдаления)
	|			И (НЕ Пользователи.Недействителен)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Филиалы.РазрабатываемыеСистемы КАК ФилиалыРазрабатываемыеСистемы
	|		ПО (ФилиалыРазрабатываемыеСистемы.Ссылка = Пользователи.Филиал)
	|			И (ФилиалыРазрабатываемыеСистемы.Система = &Система)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка) КАК Ссылка,
	|	""Не назначена"" КАК Наименование,
	|	ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка) КАК Родитель,
	|	0 КАК ПриоритетСортировки,
	|	ИСТИНА КАК Избранное
	|ПОМЕСТИТЬ Филиалы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Филиалы.Ссылка,
	|	Филиалы.Наименование,
	|	Филиалы.Ссылка,
	|	1,
	|	ВЫБОР
	|		КОГДА ИзбранныеФилиалы.Филиал ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|ИЗ
	|	Справочник.Филиалы.РазрабатываемыеСистемы КАК ФилиалыРазрабатываемыеСистемы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК Филиалы
	|		ПО ФилиалыРазрабатываемыеСистемы.Ссылка = Филиалы.Ссылка
	|			И (НЕ Филиалы.ПометкаУдаления)
	|			И (Филиалы.ТипФилиала <> ЗНАЧЕНИЕ(Перечисление.ТипыФилиалов.НеIT))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИзбранныеФилиалы КАК ИзбранныеФилиалы
	|		ПО (Филиалы.Ссылка = ИзбранныеФилиалы.Филиал)
	|ГДЕ
	|	ФилиалыРазрабатываемыеСистемы.Система = &Система
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Филиалы.Ссылка,
	|	Филиалы.Наименование,
	|	Филиалы.Ссылка,
	|	3,
	|	ВЫБОР
	|		КОГДА ИзбранныеФилиалы.Филиал ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДоступныеКастомныеКоманды.Филиал КАК Филиал
	|	ИЗ
	|		ДоступныеКастомныеКоманды КАК ДоступныеКастомныеКоманды) КАК ДоступныеКастомныеКоманды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК Филиалы
	|		ПО ДоступныеКастомныеКоманды.Филиал = Филиалы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИзбранныеФилиалы КАК ИзбранныеФилиалы
	|		ПО (Филиалы.Ссылка = ИзбранныеФилиалы.Филиал)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Филиалы.Ссылка КАК Ссылка,
	|	Филиалы.Наименование КАК Наименование,
	|	Филиалы.Родитель КАК Родитель,
	|	Филиалы.ПриоритетСортировки КАК ПриоритетСортировки,
	|	Филиалы.Избранное КАК Избранное
	|ПОМЕСТИТЬ ФилиалыИКоманды
	|ИЗ
	|	Филиалы КАК Филиалы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Команды.Ссылка,
	|	"" -  команда "" + Команды.Наименование,
	|	Команды.Родитель,
	|	2,
	|	Филиалы.Избранное
	|ИЗ
	|	Филиалы КАК Филиалы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК Команды
	|		ПО (Филиалы.Ссылка <> ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка))
	|			И Филиалы.Ссылка = Команды.Родитель
	|			И (НЕ Команды.ПометкаУдаления)
	|			И (Филиалы.ПриоритетСортировки < 2)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Команды.Ссылка,
	|	"" -  команда "" + Команды.Наименование,
	|	Филиалы.Ссылка,
	|	4,
	|	Филиалы.Избранное
	|ИЗ
	|	Филиалы КАК Филиалы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеКастомныеКоманды КАК ДоступныеКастомныеКоманды
	|		ПО Филиалы.Ссылка = ДоступныеКастомныеКоманды.Филиал
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК Команды
	|		ПО (ДоступныеКастомныеКоманды.Команда = Команды.Ссылка)
	|			И (Филиалы.ПриоритетСортировки > 2)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФилиалыИКоманды.Избранное КАК Избранное,
	|	ФилиалыИКоманды.Ссылка КАК Ссылка,
	|	ФилиалыИКоманды.Наименование КАК Наименование,
	|	ФилиалыИКоманды.ПриоритетСортировки КАК ПриоритетСортировки,
	|	ФилиалыИКоманды.Родитель КАК Родитель,
	|	ЕСТЬNULL(Филиалы.Наименование, """") КАК РодительПредставление
	|ИЗ
	|	ФилиалыИКоманды КАК ФилиалыИКоманды
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК Филиалы
	|		ПО ФилиалыИКоманды.Родитель = Филиалы.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Избранное УБЫВ,
	|	РодительПредставление,
	|	ПриоритетСортировки,
	|	Наименование";	
	#КонецОбласти  
	
	Запрос.УстановитьПараметр("Система", Система); 
	Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
	
	Филиалы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПользователи(Знач Филиал) 
	
	Если НЕ ЗначениеЗаполнено(Филиал) Тогда
		Пользователи.Очистить();
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	#Область ТекстЗапроса
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) КАК Ссылка,
	|	""Не назначена"" КАК Наименование,
	|	"""" КАК ФИО,
	|	0 КАК ПорядокСортировки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЛичныеДела.Сотрудник,
	|	Пользователи.Наименование,
	|	Пользователи.ФИО,
	|	1
	|ИЗ
	|	РегистрСведений.ЛичныеДела.СрезПоследних(&ТекущаяДата, Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПереведенВДругоеПодразделение)) КАК ЛичныеДела
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ЛичныеДела.Сотрудник = Пользователи.Ссылка
	|ГДЕ
	|	(ВЫРАЗИТЬ(ЛичныеДела.Данные КАК Справочник.Филиалы)) = &Филиал
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЛичныеДела.Сотрудник,
	|	Пользователи.Наименование,
	|	Пользователи.ФИО,
	|	1
	|ИЗ
	|	РегистрСведений.ЛичныеДела.СрезПоследних(&ТекущаяДата, Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПереведенВКоманду)) КАК ЛичныеДела
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ЛичныеДела.Сотрудник = Пользователи.Ссылка
	|ГДЕ
	|	(ВЫРАЗИТЬ(ЛичныеДела.Данные КАК Справочник.Филиалы)) = &Филиал
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЛичныеДела.Сотрудник,
	|	Пользователи.Наименование,
	|	Пользователи.ФИО,
	|	1
	|ИЗ
	|	РегистрСведений.ЛичныеДела.СрезПоследних(&ТекущаяДата, Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПереведенВКастомнуюКоманду)) КАК ЛичныеДела
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ЛичныеДела.Сотрудник = Пользователи.Ссылка
	|ГДЕ
	|	(ВЫРАЗИТЬ(ЛичныеДела.Данные КАК Справочник.Филиалы)) = &Филиал
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокСортировки,
	|	Наименование";
	#КонецОбласти
	
    Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Филиал", Филиал);
	
	Пользователи.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

&НаКлиенте
Процедура УказатьТекущуюСтроку() Экспорт
	
	НайденныеСтроки = Филиалы.НайтиСтроки(Новый Структура("Ссылка", Филиал));
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		Элементы.Филиалы.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти
