///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

// Хранит дополнительные данные для клиента, чтобы избежать постоянных обращений к серверу.
&НаКлиенте
Перем КэшДополнительныхДанных;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПанельНавигации.Скопировать(ЭтотОбъект, Параметры);
	
	// Так как мы установили РежимВыборкаИзСписка заполним список выбора.
	Для Каждого Значение Из Перечисления.СтатусыТребований Цикл		
		Элементы.ТребованияСтатус.СписокВыбора.Добавить(Значение);
	КонецЦикла;
		
	// Сохраним реальное значение статуса до изменения пользователем 
	СохранитьЗначениеСтатусаДоИзменения();
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Чтобы клиент не обращался часто к серверу за небольшими порциями данных, получим их все сразу за один вызов.
	КэшДополнительныхДанных = ДополнительныеДанныеДляХраненияНаКлиенте();
	
	ПанельНавигацииКлиент.ПриОткрытии(Элементы, Истина);
	
	ДоступностьКнопкиЗаписать(Объект.Требования.Количество());
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ПанельНавигацииКлиент.ОбработкаОповещения(ЭтотОбъект, Объект.ОбъектОснование, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// После записи обновим значения сохраненных статусов требований	
	СохранитьЗначениеСтатусаДоИзменения();
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить(СобытияОповещенияКлиент.ИмяСобытияОбновленияКоличестваЭлементовМатрицыТребований(), Объект.ОбъектОснование);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТребованияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя <> "ТребованияСтатус" Тогда
		ОтредактироватьЭлементТабличнойЧасти(Элемент.ТекущиеДанные);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ТребованияСтатусНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.Родитель.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Статус Реализовано доступен только если уже статус реализовано или статус утверждено	
	НайденныйЭлемент = Элементы.ТребованияСтатус.СписокВыбора.НайтиПоЗначению(КэшДополнительныхДанных.СтатусРеализовано);
	
	Если ТекущиеДанные.СохраненныйСтатус = КэшДополнительныхДанных.СтатусУтверждено 
		ИЛИ ТекущиеДанные.СохраненныйСтатус = КэшДополнительныхДанных.СтатусРеализовано Тогда
		Если НайденныйЭлемент = Неопределено Тогда
			Элементы.ТребованияСтатус.СписокВыбора.Добавить(КэшДополнительныхДанных.СтатусРеализовано);
		КонецЕсли;
	Иначе
		Если НайденныйЭлемент <> Неопределено Тогда
			Элементы.ТребованияСтатус.СписокВыбора.Удалить(НайденныйЭлемент);
		КонецЕсли;	
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыгрузитьВExcel(Команда)
	
	Если Модифицированность Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Сохраните документ перед выгрузкой");
		Возврат;
	КонецЕсли;
	
	РезультатПомещенияExcelФайла = ВыгрузитьМатрицуТребованийВExcel(Объект.ОбъектОснование, Объект.Требования, УникальныйИдентификатор);
	
	Если РезультатПомещенияExcelФайла.ЕстьОшибка Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатПомещенияExcelФайла.Ошибка);
	Иначе
		ПолучитьФайл(РезультатПомещенияExcelФайла.АдресФайла, РезультатПомещенияExcelФайла.ИмяФайла, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзExcel(Команда)
	
	Если Модифицированность Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Сохраните документ перед загрузкой");
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДиалогВыбораФайлаЗавершение", ЭтотОбъект);
	НачатьПомещениеФайла(ОписаниеОповещения, , , Истина, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура Добавить(Команда)
	
	ОтредактироватьЭлементТабличнойЧасти();
	
КонецПроцедуры

&НаКлиенте
Процедура Изменить(Команда)
	
	ТекущаяСтрока = Элементы.Требования.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		ОтредактироватьЭлементТабличнойЧасти(ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПанельНавигацииНажатие(Команда)
	
	ПанельНавигацииКлиент.Нажатие(ЭтотОбъект, Команда, Истина);
		
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	
	ТекущаяСтрока = Элементы.Требования.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		Объект.Требования.Удалить(ТекущаяСтрока);
		Модифицированность = Истина;
	КонецЕсли;
	
	ДоступностьКнопкиЗаписать(Объект.Требования.Количество());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ВыгрузитьМатрицуТребованийВExcel(Знач ОбъектОснование, Знач Требования, Знач ИдентификаторФормы)
	
	Возврат Документы.МатрицаТребований.ВыгрузитьМатрицуТребованийВExcel(ОбъектОснование, Требования, ИдентификаторФормы);
	
КонецФункции

&НаСервере
Процедура ЗагрузитьМатрицуТребованийИзExcel(АдресХранилища)
	
	РезультатЗагрузки = Документы.МатрицаТребований.ЗагрузитьМатрицуТребованийИзExcel(Объект.ОбъектОснование, АдресХранилища);
	
	Если РезультатЗагрузки.Успешно Тогда
		Объект.Требования.Загрузить(РезультатЗагрузки.Таблица);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДиалогВыбораФайлаЗавершение(Результат, Адрес, ИмяФайла, ДополнительныеПараметры) Экспорт
	
	Если Результат Тогда
		ЗагрузитьМатрицуТребованийИзExcel(Адрес);
		ДоступностьКнопкиЗаписать(Объект.Требования.Количество());
	КонецЕсли;
    
КонецПроцедуры

// Формирует набор дополнительных данных для клиента. Помогает избежать 
// множественного обращения к серверу за этими данными за счет кэширования на 
// клиенте. Не рекомендуется помещать большие объемы данных, т.к. это может
// замедлить открытие формы на клиенте.
//
// Возвращаемое значение:
//  Структура.
//
&НаСервереБезКонтекста
Функция ДополнительныеДанныеДляХраненияНаКлиенте()
	
	ДополнительныеДанные = Новый Структура;
	ДополнительныеДанные.Вставить("СтатусУтверждено", Перечисления.СтатусыТребований.Утверждено);
	ДополнительныеДанные.Вставить("СтатусРеализовано", Перечисления.СтатусыТребований.Реализовано);
		
	Возврат ДополнительныеДанные;
	
КонецФункции

&НаКлиенте
Процедура ДоступностьКнопкиЗаписать(Количество)
	
	Элементы.КомандаЗаписать.Доступность = (Количество > 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДобавлениеЭлементаТабличнойЧасти(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда	
		Если ДополнительныеПараметры.НазваниеКнопки = "Добавить" Тогда		
			НоваяСтрока = Объект.Требования.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Результат);
			ДоступностьКнопкиЗаписать(Объект.Требования.Количество());
		Иначе
			Строка = Объект.Требования.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
			ЗаполнитьЗначенияСвойств(Строка, Результат);
		КонецЕсли;
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтредактироватьЭлементТабличнойЧасти(ТекущаяСтрока = Неопределено)
	
	ДополнительныеПараметры = Новый Структура;
	
	ПараметрыСтроки = Новый Структура();
	ПараметрыСтроки.Вставить("ДокументОснование", Объект.ОбъектОснование);
	
	Если ТекущаяСтрока <> Неопределено Тогда
		ПараметрыСтроки.Вставить("Автор", ТекущаяСтрока.Инициатор);
		ПараметрыСтроки.Вставить("Статус", ТекущаяСтрока.Статус);
		ПараметрыСтроки.Вставить("ДатаВыявления", ТекущаяСтрока.ДатаВыявления);
		ПараметрыСтроки.Вставить("КаналПоступления", ТекущаяСтрока.КаналПоступления);
		ПараметрыСтроки.Вставить("Описание", ТекущаяСтрока.Описание);
		ПараметрыСтроки.Вставить("Комментарий", ТекущаяСтрока.Комментарий);
		ДополнительныеПараметры.Вставить("НазваниеКнопки", "Изменить");
		ДополнительныеПараметры.Вставить("ИдентификаторСтроки", ТекущаяСтрока.ПолучитьИдентификатор());	
	Иначе
		ДополнительныеПараметры.Вставить("НазваниеКнопки", "Добавить");
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьДобавлениеЭлементаТабличнойЧасти", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Документ.МатрицаТребований.Форма.ЭлементМатрицы", ПараметрыСтроки, ЭтотОбъект, 
		КлючУникальности, , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьЗначениеСтатусаДоИзменения()
	
	Для Каждого Строка Из Объект.Требования Цикл
		Строка.СохраненныйСтатус = Строка.Статус;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
