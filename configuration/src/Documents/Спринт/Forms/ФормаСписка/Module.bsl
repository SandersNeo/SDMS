///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьОтчет(Команда)
	
	ОткрытьФорму("Отчет.Спринты.ФормаОбъекта");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетРаботаСоСпринтами(Команда)
	
	ОткрытьФорму("Отчет.РаботаСоСпринтами.ФормаОбъекта");
	
КонецПроцедуры

#КонецОбласти       

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Создать_СпринтIT(Команда)
	
	СоздатьСпринт(ПредопределенноеЗначение("Перечисление.ВидыСпринта.IT"));
	
КонецПроцедуры

&НаКлиенте
Процедура Создать_СпринтЗадания(Команда)
	
	СоздатьСпринт(ПредопределенноеЗначение("Перечисление.ВидыСпринта.ВнутреннееЗадание"));
	
КонецПроцедуры

&НаКлиенте
Процедура Создать_СпринтПланирование(Команда)

	СоздатьСпринт(ПредопределенноеЗначение("Перечисление.ВидыСпринта.Планирование"));

КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыФункции

&НаКлиенте
Процедура СоздатьСпринт(ВидСпринта)
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ВидСпринта", ВидСпринта);	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ПараметрыЗаполнения);
	
	ОткрытьФорму("Документ.Спринт.ФормаОбъекта", ПараметрыФормы);
		
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ТекущаяДата = НачалоДня(ТекущаяДатаСеанса());	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Список.Имя);
	
	ГруппаОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ДатаНачала");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	ОтборЭлемента.ПравоеЗначение = ТекущаяДата;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ДатаОкончания");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ОтборЭлемента.ПравоеЗначение = ТекущаяДата;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ПометкаУдаления");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", Новый Цвет(229, 250, 221));

КонецПроцедуры

#КонецОбласти
