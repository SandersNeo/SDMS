///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Описание назначения параметров формы:
//  - Филиалы - список значений - элементы справочника Филиалы
//  - ОтмеченныеЗначения - список значений - выбранные ранее спринты

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Установка общего условного оформления для окон данного вида
	ИнтерфейсПриложения.УстановитьУсловноеОформлениеСпискаДоступныхЗначений(
		ЭтотОбъект, "ДоступныеСпринты.Избранное", "ДоступныеСпринтыПредставлениеДоступные");
		
	Если Параметры.Свойство("Филиалы") Тогда
		Филиалы = Параметры.Филиалы;
	КонецЕсли;
	
	Для Каждого Спринт Из Параметры.ОтмеченныеЗначения Цикл
		НоваяСтрокаВыбранных = ВыбранныеСпринты.Добавить();
		НоваяСтрокаВыбранных.Спринт = Спринт.Значение;
		НоваяСтрокаВыбранных.Наименование = Спринт.Представление;
		НоваяСтрокаВыбранных.Исключить = БиблиотекаКартинок.УдалитьЗначение;
		НоваяСтрокаВыбранных.ИдентификаторСтрокиСписка = -1;
	КонецЦикла;
	
	ЗаполнитьСпискиСпринтов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СтрокаПоискаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	// Установка отбора на основании значения в строке поиска
	ИнтерфейсПриложенияКлиент.УстановитьОтборПриИзмененииСтрокиПоиска(
		ЭтотОбъект, "ДоступныеСпринты", Текст, "Наименование");
		
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОчистка(Элемент, СтандартнаяОбработка)
	
	ИнтерфейсПриложенияКлиент.СброситьПоиск(ЭтотОбъект, "ДоступныеСпринты");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеСпринтыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ВыбранныеСпринтыИсключить" Тогда
		НайденнаяСтрока = ВыбранныеСпринты.НайтиПоИдентификатору(ВыбраннаяСтрока);
		НайденнаяСтрокаДоступные = ДоступныеСпринты.НайтиПоИдентификатору(НайденнаяСтрока.ИдентификаторСтрокиСписка);
		
		Если НайденнаяСтрокаДоступные <> Неопределено Тогда
			НайденнаяСтрока = НайденнаяСтрокаДоступные;
			ИсключитьСпринт(НайденнаяСтрока);
		Иначе
			ВыбранныеСпринты.Удалить(НайденнаяСтрока);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеСпринтыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	НайденнаяСтрока = ДоступныеСпринты.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если Поле.Имя = "ДоступныеСпринтыПредставление" Тогда
		НайденнаяСтрока.Пометка = НЕ НайденнаяСтрока.Пометка;
		
		ОбработатьИзменениеСтрокиДоступныхСпринтов(НайденнаяСтрока);
		
	ИначеЕсли Поле.Имя = "ДоступныеСпринтыИзбранное" Тогда
		Избранное = НайденнаяСтрока.Избранное;
		
		ПараметрыОтбора = Новый Структура("Родитель", НайденнаяСтрока.Спринт);
		НайденныеСтроки = ДоступныеСпринты.НайтиСтроки(ПараметрыОтбора);
		
		Для Каждого Строка Из НайденныеСтроки Цикл
			Строка.Избранное = НЕ Избранное;
		КонецЦикла;
		
		ОбщегоНазначенияВызовСервера.ОбработатьПометкуИзбранного(НайденнаяСтрока.Спринт, НайденнаяСтрока.Избранное, "Спринты");
		
		ДоступныеСпринты.Сортировать("Избранное УБЫВ, РодительПредставление, ПриоритетСортировки, Наименование");		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеСпринтыПометкаПриИзменении(Элемент)
	
	ОбработатьИзменениеСтрокиДоступныхСпринтов(Элементы.ДоступныеСпринты.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ФилиалыНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавлениеФилиала", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.Филиалы.ФормаВыбора", , ЭтотОбъект, , , ,
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ФилиалыПриИзменении(Элемент)
	
	ЗаполнитьСпискиСпринтов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьВыбор(Команда)
		
	ВозвращаемыеСпринты = Новый СписокЗначений;
	
	Если ВыбранныеСпринты.Количество() > 0 Тогда
		Для Каждого СтрокаТаблицы Из ВыбранныеСпринты Цикл
			ВозвращаемыеСпринты.Добавить(СтрокаТаблицы.Спринт, СтрокаТаблицы.Наименование);
		КонецЦикла;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ВыбранныеСпринты", ВозвращаемыеСпринты);
	Результат.Вставить("Филиалы", Филиалы);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПометкуДоступных(Команда)
	
	Пометка = (Команда.Имя = "ОтметитьВсе");
	
	Для Каждого Строка Из ДоступныеСпринты Цикл
		Если Строка.Пометка <> Пометка Тогда
			Если Пометка Тогда
				ДобавитьСпринт(Строка);
			Иначе
				ИсключитьСпринт(Строка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьИзбранные(Команда)
	
	Для Каждого Строка Из ДоступныеСпринты Цикл
		Если Строка.Избранное Тогда
			Если НЕ Строка.Пометка Тогда
				ДобавитьСпринт(Строка);
			КонецЕсли;
		Иначе
			Если Строка.Пометка Тогда
				ИсключитьСпринт(Строка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПоиск(Команда)
	
	ИнтерфейсПриложенияКлиент.СброситьПоиск(ЭтотОбъект, "ДоступныеСпринты");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьСпринт(СтрокаТаблицы)
	
	НоваяСтрокаВыбранных = ВыбранныеСпринты.Добавить();
	НоваяСтрокаВыбранных.Исключить = БиблиотекаКартинок.УдалитьЗначение;
	
	ЗаполнитьЗначенияСвойств(НоваяСтрокаВыбранных, СтрокаТаблицы);
	
	СтрокаТаблицы.Пометка = Истина;
	
	СтрокаТаблицы.ИдентификаторСтрокиСписка = НоваяСтрокаВыбранных.ПолучитьИдентификатор();
	НоваяСтрокаВыбранных.ИдентификаторСтрокиСписка = СтрокаТаблицы.ПолучитьИдентификатор();
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеФилиала(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Филиалы.Добавить(Результат, Строка(Результат));
	ЗаполнитьСпискиСпринтов();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьСпринт(СтрокаТаблицы)
	
	НайденнаяСтрока = ВыбранныеСпринты.НайтиПоИдентификатору(СтрокаТаблицы.ИдентификаторСтрокиСписка);
	
	Если НайденнаяСтрока <> Неопределено Тогда
		ВыбранныеСпринты.Удалить(НайденнаяСтрока);
	КонецЕсли;	
	
	СтрокаТаблицы.Пометка = Ложь;
	СтрокаТаблицы.ИдентификаторСтрокиСписка = -1;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискиСпринтов()
	
	ДоступныеСпринты.Очистить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Спринт.Ссылка КАК Спринт,
	|	Спринт.Представление КАК Наименование,
	|	ВЫБОР
	|		КОГДА Спринт.Ссылка В (&ВыбранныеСпринты)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Пометка
	|ИЗ
	|	Документ.Спринт КАК Спринт
	|ГДЕ
	|	НЕ Спринт.ПометкаУдаления
	|	И Спринт.ВидСпринта = ЗНАЧЕНИЕ(Перечисление.ВидыСпринта.IT)
	|{ГДЕ
	|	Спринт.Филиал КАК Филиал}
	|
	|УПОРЯДОЧИТЬ ПО
	|	Спринт.Дата УБЫВ";
				             
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.Текст = ТекстЗапроса;
	ПостроительЗапроса.Параметры.Вставить("ВыбранныеСпринты", ВыбранныеСпринты.Выгрузить(, "Спринт"));

	Если Филиалы.Количество() > 0 Тогда
		ЭлементОтбора = ПостроительЗапроса.Отбор.Добавить("Филиал");
		ЭлементОтбора.ВидСравнения = ВидСравнения.ВСписке;
		ЭлементОтбора.Значение = Филиалы;
		ЭлементОтбора.Использование = Истина;
	КонецЕсли;

	ПостроительЗапроса.Выполнить();	
	РезультатЗапроса = ПостроительЗапроса.Результат;
		
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			// Заполнение общей таблицы
			НоваяСтрокаДоступных = ДоступныеСпринты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДоступных, Выборка);
			
			// Заполнение связей
			Если Выборка.Пометка Тогда
				ПараметрыОтбора = Новый Структура("Спринт", Выборка.Спринт);
				НайденныеСтроки = ВыбранныеСпринты.НайтиСтроки(ПараметрыОтбора);
				НайденныеСтроки[0].ИдентификаторСтрокиСписка = НоваяСтрокаДоступных.ПолучитьИдентификатор();
				НоваяСтрокаДоступных.ИдентификаторСтрокиСписка = НайденныеСтроки[0].ПолучитьИдентификатор();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеСтрокиДоступныхСпринтов(СтрокаТаблицы)
	
	Если СтрокаТаблицы.Пометка = Истина Тогда
		ДобавитьСпринт(СтрокаТаблицы);	
	Иначе
		ИсключитьСпринт(СтрокаТаблицы);	
	КонецЕсли;			
	
КонецПроцедуры

#КонецОбласти
