///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресВХранилище = Параметры.Адрес;
	ИдентификаторФормыРодителя = Параметры.ИдентификаторФормы;
	НазваниеТаблицы = Параметры.НазваниеТаблицы;
	ОбъектыСпринта = ПолучитьИзВременногоХранилища(Параметры.Адрес); 
	КлючНастроек = Документы.Спринт.ПолучитьКлючНастроек(НазваниеТаблицы); 
	СтруктураНастроекСКД = ОбщегоНазначенияВызовСервера.ЗагрузитьОбщиеНастройки(КлючНастроек.Ключ, КлючНастроек.Значение); 
	СписокГруппировок = Неопределено;
	ТаблицаТеги = Неопределено;
	
	Если ТипЗнч(СтруктураНастроекСКД) <> Тип("Структура") Тогда  
		СтруктураНастроекСКД = Новый Структура;
	КонецЕсли;
	
	СтруктураНастроекСКД.Свойство("Теги", ТаблицаТеги);
	СтруктураНастроекСКД.Свойство("СписокГруппировок", СписокГруппировок);
	
	Если СписокГруппировок = Неопределено Тогда
		СписокГруппировок = Новый СписокЗначений;
	КонецЕсли;  
	
	Если ТаблицаТеги <> Неопределено Тогда
		Для Каждого Строка Из ТаблицаТеги Цикл
			ЗаполнитьЗначенияСвойств(Теги.Добавить(), Строка);
		КонецЦикла;
	КонецЕсли;   
	
	// Группировка уже может быть задана в СКД      
	ПроставитьГруппировкуИзНастроекСКД(СписокГруппировок, Параметры.КомпоновщикНастроек.Настройки.Структура);
	
	СписокГруппируемыеПоля = СписокГруппировок;
		
	СхемаКомпоновки = Документы.Спринт.ПолучитьМакет("СхемаКомпоновкиОбъектыСпринта");	
	НастройкиКомпоновки = СхемаКомпоновки.НастройкиПоУмолчанию;	
	Документы.Спринт.ДобавитьПоляВНаборДанных(СхемаКомпоновки.НаборыДанных.НаборДанных1.Поля, КомпоновщикНастроек, ОбъектыСпринта);
		
	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновки, ЭтотОбъект.УникальныйИдентификатор); 
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы); 
	
	КомпоновщикНастроек.Инициализировать(ИсточникНастроек);
	ИнициализироватьПримененныеНастройки(Параметры.КомпоновщикНастроек, СхемаКомпоновки.НаборыДанных.НаборДанных1.Поля);
	
	// Доступные поля для группировки
	Если СписокГруппируемыеПоля.НайтиПоЗначению("ГруппаЗаказчиков") = Неопределено Тогда
		СписокДоступныеПоляГруппировка.Добавить("ГруппаЗаказчиков", "Группа заказчиков", Истина);
	КонецЕсли;
	
	Если СписокГруппируемыеПоля.НайтиПоЗначению("ОбъектОснование") = Неопределено Тогда
		СписокДоступныеПоляГруппировка.Добавить("ОбъектОснование", "Объект основание", Истина);
	КонецЕсли;
	
	Если СписокГруппируемыеПоля.НайтиПоЗначению("Направление") = Неопределено Тогда
		СписокДоступныеПоляГруппировка.Добавить("Направление", "Направление", Истина);
	КонецЕсли;
	
	Если СписокГруппируемыеПоля.НайтиПоЗначению("Назначена") = Неопределено Тогда
		СписокДоступныеПоляГруппировка.Добавить("Назначена", "Назначена", Истина);
	КонецЕсли;
	
	Если СписокГруппируемыеПоля.НайтиПоЗначению("Назначение") = Неопределено Тогда
		СписокДоступныеПоляГруппировка.Добавить("Назначение", "Назначение", Истина);
	КонецЕсли;
	
	Если СписокГруппируемыеПоля.НайтиПоЗначению("Система") = Неопределено Тогда
		СписокДоступныеПоляГруппировка.Добавить("Система", "Система", Истина);
	КонецЕсли;
	
	Если СписокГруппируемыеПоля.НайтиПоЗначению("Статус") = Неопределено Тогда
		СписокДоступныеПоляГруппировка.Добавить("Статус", "Статус", Истина);
	КонецЕсли;
	
	Если СписокГруппируемыеПоля.НайтиПоЗначению("КомандаРазработчиков") = Неопределено Тогда
		СписокДоступныеПоляГруппировка.Добавить("КомандаРазработчиков", "Команда разработчиков", Истина);
	КонецЕсли;
	
	Если СписокГруппируемыеПоля.НайтиПоЗначению("Продукт") = Неопределено Тогда
		СписокДоступныеПоляГруппировка.Добавить("Продукт", "Продукт", Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокДоступныеПоляГруппировкаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СписокГруппируемыеПоля.Добавить(), ТекущиеДанные);
	
	СписокДоступныеПоляГруппировка.Удалить(СписокДоступныеПоляГруппировка.НайтиПоЗначению(ТекущиеДанные.Значение));
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Перетаскивание для группировок

&НаКлиенте
Процедура СписокГруппируемыеПоляПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокГруппируемыеПоляПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Для Каждого Идентификатор Из ПараметрыПеретаскивания.Значение Цикл
		ПеретаскиваемаяСтрока = СписокДоступныеПоляГруппировка.НайтиПоИдентификатору(Идентификатор);
		ЗаполнитьЗначенияСвойств(СписокГруппируемыеПоля.Добавить(), ПеретаскиваемаяСтрока);
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьИзДоступногоПоля(Команда)
		
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура("ЗаголовокОкна, МножественныйВыбор, ОтмеченныеЗначения, ВариантЗаполнения", 
		"Доступные поля для группировки", Ложь, СписокДоступныеПоляГруппировка, 1);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьВыборПоляДляГруппировки", ЭтотОбъект);

	ОткрытьФорму("ОбщаяФорма.ПодборЗначений", ПараметрыОткрытия, ЭтотОбъект, КлючУникальности,,, ОписаниеОповещения, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВыборПоляДляГруппировки(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		СписокГруппируемыеПоля.Добавить(Результат[0], Результат[0], Истина);
		СписокДоступныеПоляГруппировка.Удалить(СписокДоступныеПоляГруппировка.НайтиПоЗначению(Результат[0]));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПереместитьПолеВверх(Команда)
	
	ПереместитьГруппируемоеПоле(-1);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьПолеВниз(Команда)
	
	ПереместитьГруппируемоеПоле(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьВсе(Команда)
	
	Для Каждого Строка Из Теги Цикл
		Строка.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьНастройки(Команда)
	
	Результат = ПрименитьНастройкиНаСервере(АдресВХранилище, КомпоновщикНастроек, АдресСхемы);
	
	// Дописываем в результат название таблицы
	Результат.Вставить("НазваниеТаблицы", НазваниеТаблицы);
	
	Закрыть(Результат);
			
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для Каждого Строка Из Теги Цикл
		Строка.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьГруппируемыеПоля(Команда)
	
	ВыделенныеСтроки = Элементы.СписокГруппируемыеПоля.ВыделенныеСтроки;
	МассивНаУдаление = Новый Массив;
	Для Каждого Идентификатор Из ВыделенныеСтроки Цикл
		Строка = СписокГруппируемыеПоля.НайтиПоИдентификатору(Идентификатор);
		МассивНаУдаление.Добавить(Строка);
	КонецЦикла;
	
	Для Каждого Строка Из МассивНаУдаление Цикл
		СписокДоступныеПоляГруппировка.Добавить(Строка.Значение, Строка.Представление);
		СписокГруппируемыеПоля.Удалить(Строка);
	КонецЦикла;
	
	СписокДоступныеПоляГруппировка.СортироватьПоЗначению();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

///////////////////////////////////////////////////////////////////////////////
// Инициализация компоновщика

&НаСервере
Процедура ДобавитьВыбранныеПоляВКомпоновщик(Настройки, ВыбранныеПоля)
	
	Для Каждого Поле Из ВыбранныеПоля Цикл
		ДобавленноеПоле = Настройки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ДобавленноеПоле.Использование = Истина;
		ДобавленноеПоле.Заголовок = Поле.Имя;
		ДобавленноеПоле.Поле = Новый ПолеКомпоновкиДанных(Поле.Имя);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ДобавитьГруппировкиВСписокЗначений(СтруктураКомпоновки, ПоляСхемы)
	
	Для Каждого Элемент Из СтруктураКомпоновки Цикл
		Если ЗначениеЗаполнено(Элемент.Имя) И СписокГруппируемыеПоля.НайтиПоЗначению(Элемент.Имя) = Неопределено Тогда  
			СписокГруппируемыеПоля.Добавить(Элемент.Имя, ПоляСхемы.Найти(Элемент.Имя).Заголовок, Истина);
			ДобавитьГруппировкиВСписокЗначений(Элемент.Структура, ПоляСхемы);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьПримененныеНастройки(Знач КомпоновщикСохраненныеНастройки, Знач Полясхемы)
	
	// Сформируем выбранные поля, если настройки открываются впервые
	// или загрузим настройки из переданного компоновщика настроек
	НастройкиКомпоновки = КомпоновщикСохраненныеНастройки.Настройки;
	Если НастройкиКомпоновки.Выбор.Элементы.Количество() <> 0 Тогда   
		ДобавитьГруппировкиВСписокЗначений(НастройкиКомпоновки.Структура, ПоляСхемы);
		КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиКомпоновки);
	Иначе
		ДобавитьВыбранныеПоляВКомпоновщик(КомпоновщикНастроек.Настройки, ДопустимыеПоляВыбора);
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Перемещение сгруппированных полей

&НаКлиенте
Процедура ПереместитьГруппируемоеПоле(Знач Направление)
	
	ИдентификаторСтроки = Элементы.СписокГруппируемыеПоля.ТекущаяСтрока;
	Если ИдентификаторСтроки <> Неопределено Тогда
		Строка = СписокГруппируемыеПоля.НайтиПоИдентификатору(ИдентификаторСтроки);
		ИндексСтроки = СписокГруппируемыеПоля.Индекс(Строка);
		КоличествоЭлементов = СписокГруппируемыеПоля.Количество();
		Если Направление = -1 И ИндексСтроки = 0 
			ИЛИ Направление = 1 И ИндексСтроки = КоличествоЭлементов - 1 Тогда
			Возврат;
		КонецЕсли;
			
		СписокГруппируемыеПоля.Сдвинуть(Строка, Направление);
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Применение настроек

&НаСервереБезКонтекста
Процедура ПрименитьНастройкиГруппировки(СтруктураКомпоновки, Знач ГруппируемыеПоля, Знач Уровень)
		
	Если Уровень = ГруппируемыеПоля.Количество() Тогда
		// Детальные записи
		ЭлементСтруктуры = СтруктураКомпоновки.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		ЭлементСтруктуры.Состояние = СостояниеЭлементаНастройкиКомпоновкиДанных.Включен;		
		ВыбранноеПолеДляГруппировки = ЭлементСтруктуры.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПолеДляГруппировки.Использование = Истина;
		Возврат;
	КонецЕсли;

	ЭлементСписка = ГруппируемыеПоля.Получить(Уровень);
	
	Если ЭлементСписка.Пометка Тогда 
		ЭлементСтруктуры = СтруктураКомпоновки.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		ЭлементСтруктуры.Состояние = СостояниеЭлементаНастройкиКомпоновкиДанных.Включен;
		ЭлементСтруктуры.Имя = ЭлементСписка.Значение;
		
		ЭлементГруппировки = ЭлементСтруктуры.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ЭлементГруппировки.Использование = Истина;
		ЭлементГруппировки.Поле = Новый ПолеКомпоновкиДанных(ЭлементСписка.Значение);
		ЭлементГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
		
		ВыбранноеПолеДляГруппировки = ЭлементСтруктуры.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПолеДляГруппировки.Использование = Истина; 
		Структура = ЭлементСтруктуры.Структура;
	Иначе
		Структура = СтруктураКомпоновки;
	КонецЕсли;
	
	ПрименитьНастройкиГруппировки(Структура, ГруппируемыеПоля, Уровень + 1);
	
КонецПроцедуры

&НаСервере
Функция ПрименитьНастройкиНаСервере(Знач АдресВХранилище, Знач КомпоновщикНастроек, Знач АдресСхемы)
	
	// Получение структуры группируемых полей компоновщика настроек
	НастройкиКомпоновщика = КомпоновщикНастроек.ПолучитьНастройки();
	НастройкиКомпоновщика.Структура.Очистить(); 
	ТаблицаТеги = РеквизитФормыВЗначение("Теги");
	
	Если СписокГруппируемыеПоля.Количество() > 0 Тогда
		ПрименитьНастройкиГруппировки(НастройкиКомпоновщика.Структура, СписокГруппируемыеПоля, 0);
	КонецЕсли;
	
	КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиКомпоновщика);
	
	ЭтоОбъектыВРеализацию = Ложь;
	
	Если НазваниеТаблицы = "ДоступныеОбъекты" Тогда
		ЭтоОбъектыВРеализацию = Истина;
	КонецЕсли;
	
	Результат = Документы.Спринт.ПрименитьНастройкиКомпоновкиДанных(АдресВХранилище, КомпоновщикНастроек, АдресСхемы, ЭтоОбъектыВРеализацию); 
	
	СтруктураНастроекСКД = Новый Структура;
	СтруктураНастроекСКД.Вставить("СписокГруппировок", СписокГруппируемыеПоля);
	СтруктураНастроекСКД.Вставить("Теги", ТаблицаТеги);
    
	КлючНастроек = Документы.Спринт.ПолучитьКлючНастроек(НазваниеТаблицы); 
	ОбщегоНазначенияВызовСервера.СохранитьОбщиеНастройки(КлючНастроек.Ключ, КлючНастроек.Значение, СтруктураНастроекСКД);

	Возврат Результат;
	
КонецФункции

Процедура ПроставитьГруппировкуИзНастроекСКД(СписокГруппировок, Структура)      
	
	Для Каждого Элемент Из Структура Цикл 
		
		Найденное = СписокГруппировок.НайтиПоЗначению(Элемент.Имя);
		
		Если Найденное <> Неопределено Тогда
			Найденное.Пометка = Истина;
		КонецЕсли;     
		
		ПроставитьГруппировкуИзНастроекСКД(СписокГруппировок, Элемент.Структура);
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти
