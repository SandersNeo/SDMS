///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

// При установке значения в Истина позволяет игнорировать проверку даты запрета изменений,
// по умолчанию значение Ложь.
Перем ИгнорироватьДатуЗапретаИзменений Экспорт;

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ОбщегоНазначения.ПроверитьДатуЗапретаИзмененияДанных(ДатаПримененияЦены, ИгнорироватьДатуЗапретаИзменений);
	
	// Проверим отсутствие дублирующихся услуг в табличной части "Услуги"
	ПроверитьДублиУслуг(Отказ);
	ДокументУстановкиСтоимостиНаДатуСуществует(Отказ);
	
	// Проверим что Дата применения цены правильно установлена
	Если НЕ ЗначениеЗаполнено(ДатаПримененияЦены) Тогда
		Сообщение = "Не заполнена дата применения цен!";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение, ЭтотОбъект, "ДатаПримененияЦены",, Отказ);
	КонецЕсли;
	        
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	ТекущаяДата = ТекущаяДатаСеанса();
	
	// регистр сведений СтоимостьУслуг
	Движения.СтоимостьУслуг.Записывать = Истина;
	
	Для Каждого ТекСтрокаУслуги Из Услуги Цикл
		Движение = Движения.СтоимостьУслуг.Добавить();
		Движение.Период = ДатаПримененияЦены;
		Движение.Услуга = ТекСтрокаУслуги.Услуга;
		Движение.ЮридическоеЛицо = ЮридическоеЛицо;
		Движение.Цена = ТекСтрокаУслуги.Цена;
		Движение.Автор = ПараметрыСеанса.ТекущийПользователь;
		Движение.ДатаДобавления = ТекущаяДата;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьДублиУслуг(Отказ)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Услуги.Услуга КАК Услуга
	|ПОМЕСТИТЬ Услуги
	|ИЗ
	|	&Услуги КАК Услуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Услуги.Услуга КАК Услуга,
	|	КОЛИЧЕСТВО(Услуги.Услуга) КАК Количество
	|ИЗ
	|	Услуги КАК Услуги
	|
	|СГРУППИРОВАТЬ ПО
	|	Услуги.Услуга
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(Услуги.Услуга) > 1";
	
	Запрос.УстановитьПараметр("Услуги", Услуги.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		МассивДублирующихсяУслуг = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Услуга");
		Сообщение = СтрШаблон("В таблице ""Услуги"" имеются дубли: %1", СтрСоединить(МассивДублирующихсяУслуг, ", "));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение, ЭтотОбъект, "Услуги",, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДокументУстановкиСтоимостиНаДатуСуществует(Отказ)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтоимостьУслуг.Регистратор КАК Регистратор,
	|	СтоимостьУслуг.Услуга КАК Услуга
	|ИЗ
	|	РегистрСведений.СтоимостьУслуг КАК СтоимостьУслуг
	|ГДЕ
	|	СтоимостьУслуг.Услуга В(&Услуги)
	|	И СтоимостьУслуг.Период = &Период
	|	И СтоимостьУслуг.Регистратор <> &Регистратор
	|	И СтоимостьУслуг.ЮридическоеЛицо = &ЮридическоеЛицо";
	
	Запрос.УстановитьПараметр("Услуги", Услуги.Выгрузить().ВыгрузитьКолонку("Услуга"));
	Запрос.УстановитьПараметр("Период", ДатаПримененияЦены);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ЮридическоеЛицо", ЮридическоеЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Сообщение = СтрШаблон("На указанную дату уже есть документы установки стоимости услуг!");
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Сообщение = Сообщение + Символы.ПС + "Услуга - " + Выборка.Услуга + ". Документ - " + Выборка.Регистратор;
		КонецЦикла;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение, ЭтотОбъект, "Услуги",, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

ИгнорироватьДатуЗапретаИзменений = Ложь;

#КонецОбласти
