///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Ключ.Пустая() Тогда
		ВосстановитьНастройки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьДоступностьЭлементаИскатьОдноИзСлов();
	ОбновитьПредставлениеОтбора();  
	
	Если ПроверитьПараметрыНечеткоеСовпадение() Тогда
		 ИскатьТочноеИлиНеточноеСовпадение = 1;
	КонецЕсли;
	ОбновитьЗначенияЭлементовФормы(); 
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.НастройкиОтбора = Новый ХранилищеЗначения(КомпоновщикНастроек.ПолучитьНастройки(), Новый СжатиеДанных(9));
	ТекущийОбъект.НастройкиПоиска = СформироватьНастройкиПоиска();
	СгенерироватьШаблоныПоиска(ТекущийОбъект);
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ИскатьТочноеИлиНеточноеСовпадение = 1 
		И НЕ ПроверитьПараметрыНечеткоеСовпадение() Тогда
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Поле = "ИскатьСловаРядом";
		СообщениеПользователю.Текст = "Для ""Нечеткого совпадения"" необходимо выбрать хотя бы одну из настроек.";
		СообщениеПользователю.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманда

&НаКлиенте
Процедура ОтборДокументов(Команда)
	
	ОткрытьФормуОтбораДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура Справка(Команда)
	
	ПерейтиПоНавигационнойСсылке(
		ОбщегоНазначенияВызовСервера.ПолучитьКонстанту("КорневойURL") + "/docs/common/semantic-analysis/");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДекорацияПредставлениеОтбораНажатие(Элемент)
	
	ОткрытьФормуОтбораДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	Если ИскатьТочноеИлиНеточноеСовпадение = 1 Тогда
		ОбновитьДоступностьЭлементаИскатьОдноИзСлов(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИскатьТочноеИлиНеточноеСовпадениеПриИзменении(Элемент)
	
	ОбновитьЗначенияЭлементовФормы();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВосстановитьНастройки()
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Ссылка, "НастройкиПоиска, НастройкиОтбора");
	НастройкиПоиска = ЗначенияРеквизитов.НастройкиПоиска.Получить();
	НастройкиОтбора = ЗначенияРеквизитов.НастройкиОтбора.Получить();
	
	Если НастройкиПоиска <> Неопределено Тогда
		Для Каждого ЭлементСтруктуры Из НастройкиПоиска Цикл
			ЭтотОбъект[ЭлементСтруктуры.Ключ] = ЭлементСтруктуры.Значение;
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(НастройкиОтбора) = Тип("НастройкиКомпоновкиДанных") Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиОтбора);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступностьЭлементаИскатьОдноИзСлов(Знач Текст = Неопределено)
	
	Если Текст = Неопределено Тогда
		Текст = Объект.Наименование;
	КонецЕсли;
	
	МассивСлов = СтрРазделить(Текст, " ", Ложь);
	ВведеноНесколькоСлов = (МассивСлов.Количество() > 1);
	
	Элементы.ИскатьОдноИзСлов.Доступность = ВведеноНесколькоСлов;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗначенияЭлементовФормы()
	
	Если ИскатьТочноеИлиНеточноеСовпадение = 0 Тогда
		ИскатьТочноеСовпадение = Истина;
		ИскатьОдноИзСлов = Ложь;
		ИскатьСловаРядом = Ложь;
		ИспользоватьНечеткийПоиск = Ложь;
		ИспользоватьСинонимы = Ложь;
		Элементы.ИскатьОдноИзСлов.Доступность = Ложь;
	Иначе
		ИскатьТочноеСовпадение = Ложь;
		ОбновитьДоступностьЭлементаИскатьОдноИзСлов();
	КонецЕсли;
	
	ДоступностьЭлементов = (ИскатьТочноеИлиНеточноеСовпадение = 1);
	Элементы.ИскатьСловаРядом.Доступность = ДоступностьЭлементов;
	Элементы.ИспользоватьНечеткийПоиск.Доступность = ДоступностьЭлементов;
	Элементы.ИспользоватьСинонимы.Доступность = ДоступностьЭлементов;
			
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеОтбора()
	
	Если КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество() > 0 Тогда
		Объект.ПредставлениеОтбора = Строка(КомпоновщикНастроек.Настройки.Отбор);
	Иначе
		Объект.ПредставлениеОтбора = "<отбор документов не установлен>";
	КонецЕсли;
	
	СформироватьПредставлениеОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьУстановкуОтбораДокументов(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("НастройкиКомпоновкиДанных") Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(Результат);
		ОбновитьПредставлениеОтбора();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОтбораДокументов()
	
	ПараметрыОткрытия = Новый Структура("НастройкиОтбора", ПолучитьНастройкиКомпоновкиДанных(КомпоновщикНастроек));
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьУстановкуОтбораДокументов", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.ФразыДляСемантическогоАнализа.Форма.НастройкаОтбораДокументов", ПараметрыОткрытия, ЭтотОбъект, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНастройкиКомпоновкиДанных(Знач КомпоновщикНастроек)
	
	Возврат КомпоновщикНастроек.ПолучитьНастройки();
	
КонецФункции

&НаКлиенте
Функция ПроверитьПараметрыНечеткоеСовпадение()
	
	Возврат (ИскатьОдноИзСлов ИЛИ ИскатьСловаРядом ИЛИ ИспользоватьНечеткийПоиск ИЛИ ИспользоватьСинонимы);
	
КонецФункции

&НаСервере
Процедура СгенерироватьШаблоныПоиска(ТекущийОбъект)
	
	Фраза = НРег(ТекущийОбъект.Наименование);
	
	Шаблоны = Новый Массив;
	
	Если ИскатьТочноеСовпадение Тогда
		Шаблоны.Добавить(СтрЗаменить(Фраза, " ", " РЯДОМ/+1 "));
	Иначе
		Если Элементы.ИскатьОдноИзСлов.Доступность И ИскатьОдноИзСлов Тогда
			Шаблоны.Добавить(СтрЗаменить(Фраза, " ", " ИЛИ "));
		КонецЕсли;
		
		Если ИспользоватьСинонимы Тогда
			Шаблоны.Добавить("!" + СтрЗаменить(Фраза, " ", " !"));
		КонецЕсли;
		
		Если ИспользоватьНечеткийПоиск Тогда
			Шаблоны.Добавить(СтрЗаменить(Фраза, " ", "# ") + "#");
		КонецЕсли;
		
		Если ИскатьСловаРядом Тогда
			Шаблоны.Добавить(СтрЗаменить(Фраза, " ", " РЯДОМ/+3 "));
			Шаблоны.Добавить(СтрЗаменить(Фраза, " ", " РЯДОМ "));
		КонецЕсли;
	КонецЕсли;
	
	ТекущийОбъект.ШаблоныПоиска.Очистить();
	
	Для Каждого Шаблон Из Шаблоны Цикл
		ТекущийОбъект.ШаблоныПоиска.Добавить().Шаблон = Шаблон;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СформироватьНастройкиПоиска()
	
	Настройки = Новый Структура;
	Настройки.Вставить("ИскатьОдноИзСлов", ИскатьОдноИзСлов);
	Настройки.Вставить("ИскатьСловаРядом", ИскатьСловаРядом);
	Настройки.Вставить("ИскатьТочноеСовпадение", ИскатьТочноеСовпадение);
	Настройки.Вставить("ИспользоватьНечеткийПоиск", ИспользоватьНечеткийПоиск);
	Настройки.Вставить("ИспользоватьСинонимы", ИспользоватьСинонимы);
	
	Возврат Новый ХранилищеЗначения(Настройки, Новый СжатиеДанных(9));
	
КонецФункции

&НаКлиенте
Процедура СформироватьПредставлениеОтбора()
	
	Представление = Объект.ПредставлениеОтбора;
	Представление = СтрЗаменить(Представление, " И ", Символы.ПС + "И ");
	Представление = СтрЗаменить(Представление, " ИЛИ ", Символы.ПС + "ИЛИ ");
	
	Элементы.ДекорацияПредставлениеОтбора.Заголовок = Представление;
	
КонецПроцедуры

#КонецОбласти
