///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

// Только для модулей, которые могут содержать раздел описания переменных.
// Все переменные модуля должны быть снабжены комментарием, достаточным для 
// понимания их назначения. Комментарий рекомендуется размещать в той же 
// строке, где объявляется переменная.

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Раздел «Программный интерфейс» содержит экспортные процедуры и функции, 
// предназначенные для использования в других модулях конфигурации или другими 
// программами (например, через внешнее соединение). Не следует в этот раздел 
// помещать экспортные функции и процедуры, которые предназначены для вызова 
// исключительно из модулей самого объекта, его форм и команд. Например, процедуры
// заполнения табличной части документа, которые вызываются из обработки 
// заполнения в модуле объекта и из формы документа в обработчике команды формы не 
// являются программным интерфейсом модуля объекта, т.к. вызываются только в самом 
// модуле и из форм этого же объекта. Их следует размещать в разделе «Служебные 
// процедуры и функции».
//
// Экспортные процедуры и функции, составляющие программный интерфейс, размещаются 
// сразу же после описания переменных. Такие процедуры и функции предназначены для 
// использования другими объектами конфигурации или другими программами (например,
// через внешнее соединение), поэтому должны быть расположены в модуле на "видном месте".

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Проверим уникальность элемента справочника по его наименованию
	ПроверитьЗаполнение();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Нужно проверить, чтобы не было уже имеющейся роли с точно таким же наименованием
	ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Наименование"));

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РолиПользователей.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.РолиПользователей КАК РолиПользователей
	|ГДЕ
	|	РолиПользователей.Наименование = &Наименование
	|	И РолиПользователей.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Если НЕ Запрос.Выполнить().Пустой() Тогда
		Отказ = Истина;
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = СтрШаблон("Роль пользователя ""%1"" уже существует.", Наименование);
		СообщениеПользователю.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Раздел «Служебный программный интерфейс»  предназначен для модулей, которые 
// являются частью некоторой функциональной подсистемы. В нем должны быть размещены 
// экспортные процедуры и функции, которые допустимо вызывать только из других 
// функциональных подсистем этой же библиотеки.

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Раздел «Служебные процедуры и функции» содержит процедуры и функции, составляющие 
// внутреннюю реализацию общего модуля. В тех случаях, когда общий модуль является 
// частью некоторой функциональной подсистемы, включающей в себя несколько объектов 
// метаданных, в этом разделе также могут быть размещены служебные экспортные 
// процедуры и функции, предназначенные только для вызова из других объектов данной
// подсистемы.

#КонецОбласти

#Область Инициализация

// Только для модулей, которые могут содержать раздел инициализации. Раздел 
// инициализации содержит операторы, инициализирующие переменные модуля или 
// объект (форму).

#КонецОбласти
