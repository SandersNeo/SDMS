///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбъявлениеПеременных

// Хранит пользовательскте настройки колонок
&НаКлиенте
Перем ПользовательскиеНастройкиКолонок;

&НаКлиенте
Перем КешВспомогательныхДанных;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Параметры.Свойство("ТипНастроек", ТипНастроек); 
	Параметры.Свойство("КлючНастроек", Канбан_КлючНастроек); 
	Филиал = ?(Параметры.Свойство("Филиал"), Параметры.Филиал, ПараметрыСеанса.Филиал);	
	ТипКанбана = ?(Параметры.Свойство("ТипКанбана"), Параметры.ТипКанбана, Перечисления.ТипыКанбана.ПустаяСсылка());	
	
	НастройкаОтбора = Неопределено;   
	
	НастройкаКанбана = Неопределено;
	Если Параметры.Свойство("НастройкиКанбан", НастройкаКанбана) Тогда 
		НастройкаОтбора = НастройкаКанбана.Фильтр;
	КонецЕсли;		
	
	ЗаполнитьТаблицуНастроек(НастройкаОтбора, ТипКанбана);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)   
	
	КешВспомогательныхДанных = ПолучитьКешВспомогательныхДанных();  
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НастройкиВидСравненияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Настройки.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если ТекущиеДанные.ВидСравнения = ВидСравнения.ВСписке ИЛИ ТекущиеДанные.ВидСравнения = ВидСравнения.НеВСписке Тогда
			Если ТипЗнч(ТекущиеДанные.ПравоеЗначение) <> Тип("СписокЗначений") Тогда
				МассивТипов = Новый Массив;
				МассивТипов.Добавить(ТипЗнч(ТекущиеДанные.ЗначениеПоУмолчанию));
				
				СписокНаправлений = Новый СписокЗначений;
				СписокНаправлений.ТипЗначения = Новый ОписаниеТипов(МассивТипов);
				ТекущиеДанные.ПравоеЗначение = СписокНаправлений;
				ТекущиеДанные.ТипДляСвязи = СписокНаправлений;
			КонецЕсли;
			
		Иначе
			Если ТипЗнч(ТекущиеДанные.ПравоеЗначение) = Тип("СписокЗначений") Тогда
				ТекущиеДанные.ПравоеЗначение = ТекущиеДанные.ЗначениеПоУмолчанию;
				ТекущиеДанные.ТипДляСвязи = ТекущиеДанные.ЗначениеПоУмолчанию;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПравоеЗначениеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Настройки.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ПравоеЗначение) Тогда
		ТекущиеДанные.Использование = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьНастройку(Имя, ПоУмолчанию, Тип, Представление = "", Вид = Неопределено, Использование = Ложь)
	
	Если Вид = Неопределено Тогда
		Вид = ВидСравнения.Равно;
	КонецЕсли;
	
	НоваяСтрока = Настройки.Добавить();
	НоваяСтрока.Использование = Использование;
	НоваяСтрока.ИмяПоля = Имя;
	НоваяСтрока.ПредставлениеИмениПоля = ?(Представление = "", Имя, Представление);
	НоваяСтрока.ЗначениеПоУмолчанию = ПоУмолчанию;
	НоваяСтрока.ТипДляСвязи = Тип;
	НоваяСтрока.ВидСравнения = Вид;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНастроек(Знач НастройкаОтбора = Неопределено, ТипКанбана)
	
	ПользовательПустаяСсылка = Справочники.Пользователи.ПустаяСсылка();
	ТегПустаяСсылка = Справочники.Теги.ПустаяСсылка();
	ПроектПустаяСсылка = Справочники.Проекты.ПустаяСсылка();
	ПродуктПустаяСсылка = Справочники.Продукты.ПустаяСсылка();
	СистемаПустаяСсылка = Справочники.СистемыУчета.ПустаяСсылка();
	НаправлениеПустаяСсылка = Справочники.НаправленияРазработки.ПустаяСсылка();
	ФилиалПустаяСсылка = Справочники.Филиалы.ПустаяСсылка();
	НазначениеПустаяСсылка = Справочники.НазначенияЗадач.ПустаяСсылка();
	СпринтПустаяСсылка = Документы.Спринт.ПустаяСсылка();
	ГруппаЗаказчиковПустаяСсылка = Справочники.ГруппыЗаказчиковНаправлений.ПустаяСсылка();
	
	Если ТипКанбана = Перечисления.ТипыКанбана.ВнутреннееЗаданиеНовый Тогда
		ДобавитьНастройку("Автор", ПользовательПустаяСсылка, ПользовательПустаяСсылка);
		ДобавитьНастройку("ДатаИзменения", Новый СтандартнаяДатаНачала, Новый СтандартнаяДатаНачала, "Дата изменения");
		ДобавитьНастройку("Назначение", НазначениеПустаяСсылка, НазначениеПустаяСсылка, "Назначение");
		ДобавитьНастройку("Направление", НаправлениеПустаяСсылка, НаправлениеПустаяСсылка, "Направление");
		ДобавитьНастройку("Проект", ПроектПустаяСсылка, ПроектПустаяСсылка);
		ДобавитьНастройку("Спринт", СпринтПустаяСсылка, СпринтПустаяСсылка);
		ДобавитьНастройку("Тег", ТегПустаяСсылка, ТегПустаяСсылка);
		
	ИначеЕсли ТипКанбана = Перечисления.ТипыКанбана.ЗаявкиМоегоФилиала Тогда
		ДобавитьНастройку("Тег", ТегПустаяСсылка, ТегПустаяСсылка);
		ДобавитьНастройку("Проект", ПроектПустаяСсылка, ПроектПустаяСсылка);
		ДобавитьНастройку("Спринт", СпринтПустаяСсылка, СпринтПустаяСсылка);
		ДобавитьНастройку("Продукт", ПродуктПустаяСсылка, ПродуктПустаяСсылка);
		ДобавитьНастройку("Автор", ПользовательПустаяСсылка, ПользовательПустаяСсылка);
		ДобавитьНастройку("ГруппаЗаказчиков", ГруппаЗаказчиковПустаяСсылка, ГруппаЗаказчиковПустаяСсылка, "Группа заказчиков");
		ДобавитьНастройку("Назначение", НазначениеПустаяСсылка, НазначениеПустаяСсылка, "Назначение");
		ДобавитьНастройку("Направление", НаправлениеПустаяСсылка, НаправлениеПустаяСсылка, "Направление");
		ДобавитьНастройку("СистемаУчета", СистемаПустаяСсылка, СистемаПустаяСсылка, "Система учета");

	ИначеЕсли ТипКанбана = Перечисления.ТипыКанбана.ПулЗаявокНовый Тогда
		ДобавитьНастройку("Тег", ТегПустаяСсылка, ТегПустаяСсылка);
		ДобавитьНастройку("Проект", ПроектПустаяСсылка, ПроектПустаяСсылка);
		ДобавитьНастройку("Спринт", СпринтПустаяСсылка, СпринтПустаяСсылка);
		ДобавитьНастройку("Автор", ПользовательПустаяСсылка, ПользовательПустаяСсылка);
		ДобавитьНастройку("Назначение", НазначениеПустаяСсылка, НазначениеПустаяСсылка, "Назначение");
		
	Иначе
		ДобавитьНастройку("Тег", ТегПустаяСсылка, ТегПустаяСсылка);
		ДобавитьНастройку("СистемаУчета", СистемаПустаяСсылка, СистемаПустаяСсылка, "Система учета");
		ДобавитьНастройку("Проект", ПроектПустаяСсылка, ПроектПустаяСсылка);
		ДобавитьНастройку("Команда", ФилиалПустаяСсылка, ФилиалПустаяСсылка);
		ДобавитьНастройку("Спринт", СпринтПустаяСсылка, СпринтПустаяСсылка);
		ДобавитьНастройку("Продукт", ПродуктПустаяСсылка, ПродуктПустаяСсылка);
		ДобавитьНастройку("Автор", ПользовательПустаяСсылка, ПользовательПустаяСсылка);
		ДобавитьНастройку("ДатаИзменения", Новый СтандартнаяДатаНачала, Новый СтандартнаяДатаНачала, "Дата изменения"); 
		ДобавитьНастройку("ГруппаЗаказчиков", ГруппаЗаказчиковПустаяСсылка, ГруппаЗаказчиковПустаяСсылка, "Группа заказчиков");
		ДобавитьНастройку("Назначение", НазначениеПустаяСсылка, НазначениеПустаяСсылка, "Назначение");
		ДобавитьНастройку("Направление", НаправлениеПустаяСсылка, НаправлениеПустаяСсылка, "Направление");
	КонецЕсли;

	ТипСтруктура = Тип("Структура");
	Если НастройкаОтбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Настройка Из НастройкаОтбора Цикл
		ЗначениеНастройки = Настройка.Значение; 
		
		Если ТипЗнч(ЗначениеНастройки) = ТипСтруктура Тогда
			НайденныеСтроки = Настройки.НайтиСтроки(Новый Структура("ИмяПоля", Настройка.Ключ));
			Если НайденныеСтроки.Количество() > 0 Тогда
				НайденнаяСтрока = НайденныеСтроки.Получить(0);
				ЗаполнитьЗначенияСвойств(НайденнаяСтрока, ЗначениеНастройки, "Использование, ВидСравнения, ПравоеЗначение");
				
				Если НайденнаяСтрока.ПравоеЗначение = Неопределено Тогда
					НайденнаяСтрока.ПравоеЗначение = НайденнаяСтрока.ЗначениеПоУмолчанию;
				КонецЕсли;
				
				НайденнаяСтрока.ТипДляСвязи = НайденнаяСтрока.ПравоеЗначение;
			КонецЕсли;
		Иначе
			ЭтотОбъект[Настройка.Ключ] = Настройка.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Настройки.Сортировать("ИмяПоля");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКешВспомогательныхДанных()
	
	// Получаем все значения перечисления.
	МассивВидыИсполнителей = Новый Массив;
	МассивВидыИсполнителей.Добавить(Перечисления.ПринадлежностьИсполнителейКЗадаче.НеНазначен);
	МассивВидыИсполнителей.Добавить(Перечисления.ПринадлежностьИсполнителейКЗадаче.Внутренний);
	МассивВидыИсполнителей.Добавить(Перечисления.ПринадлежностьИсполнителейКЗадаче.Внешний);
	
	КешВспомогательныхДанных = Новый Структура;
	КешВспомогательныхДанных.Вставить("МассивВидыИсполнителей", МассивВидыИсполнителей);
	КешВспомогательныхДанных.Вставить("ВнутреннийИсполнительСсылка", Перечисления.ПринадлежностьИсполнителейКЗадаче.Внутренний);
	
	Возврат КешВспомогательныхДанных;
	
КонецФункции

&НаКлиенте
Процедура Применить(Команда)

	Результат = Новый Структура;
	
	Для Каждого Строка Из Настройки Цикл
		Если ЗначениеЗаполнено(Строка.ПравоеЗначение) ИЛИ Строка.Использование Тогда
			СтруктураНастройки = Новый Структура("ВидСравнения, Использование, ПравоеЗначение");
			ЗаполнитьЗначенияСвойств(СтруктураНастройки, Строка);
			
			Если СтруктураНастройки.ПравоеЗначение = Неопределено Тогда
				СтруктураНастройки.ПравоеЗначение = Строка.ЗначениеПоУмолчанию;
			КонецЕсли;
			
			Результат.Вставить(Строка.ИмяПоля, СтруктураНастройки);
		КонецЕсли;
	КонецЦикла;
	
	Результат = Новый Структура("Фильтр", Результат);
		
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти
