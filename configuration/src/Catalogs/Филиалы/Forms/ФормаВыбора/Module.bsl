///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ВыборКоманды") Тогда
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
		ЭтотОбъект.АвтоЗаголовок = Ложь;
		ЭтотОбъект.Заголовок = "Команды разработчиков";
	ИначеЕсли Параметры.Свойство("УстановитьСписок") Тогда
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоФилиалыСНаправлением") Тогда
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Филиалы.Ссылка КАК Филиал
		|ИЗ
		|	Справочник.Филиалы КАК Филиалы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиФилиалов КАК НастройкиФилиалов
		|		ПО Филиалы.Ссылка = НастройкиФилиалов.Филиал
		|			И (НастройкиФилиалов.Настройка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыНастроекФилиалов.НаправлениеРазработки))
		|			И (НастройкиФилиалов.Значение <> ЗНАЧЕНИЕ(Справочник.НаправленияРазработки.ПустаяСсылка))
		|ГДЕ
		|	Филиалы.Родитель = ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка)
		|	И НЕ Филиалы.ПометкаУдаления
		|	И ВЫБОР
		|			КОГДА &ТолькоIT
		|				ТОГДА Филиалы.ТипФилиала <> ЗНАЧЕНИЕ(Перечисление.ТипыФилиалов.НеIT)
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ";
		
		ТолькоIT = Параметры.Свойство("ТолькоIT") И Параметры.ТолькоIT;
		
		Запрос.УстановитьПараметр("ТолькоIT", ТолькоIT);
		
		Результат = Запрос.Выполнить().Выгрузить();
		СписокФилиал = Новый СписокЗначений;
		СписокФилиал.ЗагрузитьЗначения(Результат.ВыгрузитьКолонку("Филиал"));
		
		ЭлементОтбора = Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ПравоеЗначение = СписокФилиал; 
	КонецЕсли;

	ЭтоАдминистратор = УправлениеДоступомПовтИсп.ПроверитьДоступностьРоли("Администратор");
	Список.Параметры.УстановитьЗначениеПараметра("ЭтоАдминистратор", ЭтоАдминистратор);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки, ИспользуютсяСтандартныеНастройки)
	
	// Форма может открываться с фиксированными настройками отбора. 
	// Чтобы при пересечении этих отборов с пользовательскими не возникало исключения, 
	// необходимо удалить пересекающиеся пользовательские отборы.  
	
	// Удаление пользовательских настроек, конфликтующих с отборами, добавленными при создании формы выбора
	РаботаСНастройками.УдалитьКонфликтующиеНастройкиДинамическогоСписка(Настройки, Список.КомпоновщикНастроек.ФиксированныеНастройки);
	// Удаление пользовательских настроек, конфликтующих с отборами в фиксированных настройках, переданных в параметры формы
	РаботаСНастройками.УдалитьКонфликтующиеНастройкиДинамическогоСписка(Настройки, Параметры.ФиксированныеНастройки);
	
КонецПроцедуры
	
#КонецОбласти
