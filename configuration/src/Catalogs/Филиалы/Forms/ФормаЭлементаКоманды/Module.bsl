///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

&НаКлиенте
Перем Участники;

&НаКлиенте
Перем УдаленныеУчастники;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КастомнаяКоманда = Объект.Родитель = Справочники.Филиалы.КастомныеКоманды; 
	
	Если КастомнаяКоманда Тогда  
		
		ЭтоНовый = Объект.Ссылка.Пустая();
		ЗапретСоздания = Ложь; 
		
		Безопасность.НастроитьФормуПередОткрытием(ЭтотОбъект, ЗапретСоздания);
		
		Если ЭтоНовый И ЗапретСоздания Тогда
			Отказ = Истина;
			Возврат;
		ИначеЕсли ЗапретСоздания Тогда 
			Доступность = Ложь; 
		Иначе 
			// Если открывает руководитель команды, то сначала открывается список филиалов, где ТолькоПросмотр = Истина;
			// так как руководитель не имеет прав на создание команд. Но редактировать свою команду он может.
			Если Объект.Руководитель = ПараметрыСеанса.ТекущийПользователь Тогда
				ТолькоПросмотр = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ЭтотОбъект.АвтоЗаголовок = Ложь;
	
	Если Параметры.Ключ.Пустая() Тогда
		ЭтотОбъект.Заголовок = "Команды разработчиков (создание)";
	Иначе
		ЭтотОбъект.Заголовок = СтрШаблон("%1 (Команды разработчиков)", Объект.Наименование);
		ЗаполнитьНастройкиФилиала(Параметры.Ключ);
	КонецЕсли;
		
	// Заполнение родителя.
	Если Параметры.Свойство("Родитель") Тогда
		Объект.Родитель = Параметры.Родитель;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Результат = ПолучитьУчастниковДляКоманды(Объект.Родитель, Объект.Ссылка);
	Участники = Результат.УчастникиДляВыбора; 
	Для Каждого Элемент Из Результат.Участники Цикл
		СтрокаТаблицы = ТаблицаУчастники.Добавить();
	    СтрокаТаблицы.Пользователь = Элемент.Значение;
		СтрокаТаблицы.ЗаписьВРегистре = Истина;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// Проверка на количество участников
	Если ТаблицаУчастники.Количество() = 0 Тогда
		Сообщить("Необходимо выбрать участников команды.");
		Отказ = Истина;
	КонецЕсли;
	
	ПараметрыЗаписи.Вставить("УдаленныеУчастники", УдаленныеУчастники); 
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Добавляем записи о принадлежности к команде в регистр сведений.
	Для Каждого СтрокаТаблицы Из ТаблицаУчастники Цикл
		Если НЕ СтрокаТаблицы.ЗаписьВРегистре Тогда 
			РегистрыСведений.ЛичныеДела.ПереводВКоманду(СтрокаТаблицы.Пользователь, ТекущийОбъект.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	// Сбрасываем филиал для пользователей, которых удалили.
	Для Каждого ЭлементУчастник Из ПараметрыЗаписи.УдаленныеУчастники Цикл
		РегистрыСведений.ЛичныеДела.ПереводВКоманду(ЭлементУчастник.Значение, Справочники.Филиалы.ПустаяСсылка(),
			Объект.Родитель = Справочники.Филиалы.КастомныеКоманды);
	КонецЦикла;
	
	Если ИменаИзмененныхРеквизитов.Количество() > 0 Тогда
		НовыеЗначения = Новый Массив;
		
		Для Каждого Реквизит Из ИменаИзмененныхРеквизитов Цикл
			НовыеЗначения.Добавить(Новый Структура("ИмяНастройки, Значение", Реквизит.Значение, ЭтотОбъект[Реквизит.Значение]));
		КонецЦикла;
		
		РаботаСНастройками.СохранитьИзмененныеНастройки(Объект.Ссылка, НовыеЗначения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЭтотОбъект.Заголовок = СтрШаблон("%1 (Команды разработчиков)", Объект.Наименование);
	
	Для Каждого СтрокаТаблицы Из ТаблицаУчастники Цикл
		СтрокаТаблицы.ЗаписьВРегистре = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить(СобытияОповещенияКлиент.ИмяСобытияОбновленияСпискаКоманд());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НаправлениеРазработкиПриИзменении(Элемент)
	
	ПометитьИзмененным(Элемент.Имя);	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокУчастниковЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СписокУчастниковПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ОткрытьФормуВыбораУчастника();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУчастникиПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.ТаблицаУчастники.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ЗаписьВРегистре Тогда
		УдаленныеУчастники.Добавить(ТекущиеДанные.Пользователь);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ФилиалТестированияПриИзменении(Элемент)
	
	ПометитьИзмененным(Элемент.Имя);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ДобавитьУчастника(Команда)
	
	ОткрытьФормуВыбораУчастника();
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьОтборВКоллекциюКомпоновкиДанных(НастройкиКомпоновки, Знач ИмяПоляКомпоновки, Знач ВидОтбора, Знач ЗначениеОтбора)
	
	ОтборСписка = НастройкиКомпоновки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ОтборСписка.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоляКомпоновки);
    ОтборСписка.ВидСравнения = ВидОтбора;
    ОтборСписка.ПравоеЗначение = ЗначениеОтбора;
    ОтборСписка.Использование = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройкиФилиала(Знач Команда)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыНастроекФилиалов.ИмяПредопределенныхДанных КАК Настройка,
	|	НастройкиФилиалов.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.НастройкиФилиалов КАК НастройкиФилиалов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВидыНастроекФилиалов КАК ВидыНастроекФилиалов
	|		ПО НастройкиФилиалов.Настройка = ВидыНастроекФилиалов.Ссылка
	|			И (ВидыНастроекФилиалов.Ссылка В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыНастроекФилиалов.НаправлениеРазработки), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыНастроекФилиалов.ФилиалТестирования)))
	|ГДЕ
	|	НастройкиФилиалов.Филиал = &Команда";
	
	Запрос.УстановитьПараметр("Команда", Команда);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЭтотОбъект[Выборка.Настройка] = Выборка.Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборУчастника(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ЭлементМассива Из Результат Цикл
		ТаблицаУчастники.Добавить().Пользователь = ЭлементМассива;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораУчастника()
	
	НастройкиКомпоновкиДанных = Новый НастройкиКомпоновкиДанных;
	
	Если НЕ КастомнаяКоманда Тогда 	
		// Открываем форму, с возможностью выбора только
		ДобавитьОтборВКоллекциюКомпоновкиДанных(НастройкиКомпоновкиДанных, "Ссылка", ВидСравненияКомпоновкиДанных.ВСписке, Участники);
	КонецЕсли;
	
	// Исключаем уже добавленных участников в команду.	
	УчастникиКоманды = Новый СписокЗначений;
	Для Каждого СтрокаТаблицы Из ТаблицаУчастники Цикл
		УчастникиКоманды.Добавить(СтрокаТаблицы.Пользователь);
	КонецЦикла;
	
	ДобавитьОтборВКоллекциюКомпоновкиДанных(НастройкиКомпоновкиДанных, "Ссылка", ВидСравненияКомпоновкиДанных.НеВСписке, УчастникиКоманды);
	
	ПараметрыОтбора = Новый Структура("МножественныйВыбор, ФиксированныеНастройки", Истина, НастройкиКомпоновкиДанных);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборУчастника", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыОтбора, ЭтотОбъект, ЭтотОбъект.УникальныйИдентификатор,,, ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьУчастниковДляКоманды(Знач ФилиалРодитель, Знач ТекущаяКоманда)

	Результат = Новый Структура("УчастникиДляВыбора, Участники", Новый СписокЗначений, Новый СписокЗначений);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЛичныеДелаСрезПоследних.Сотрудник КАК Пользователь,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КомандыРазработки.ПометкаУдаления, ИСТИНА)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка)
	|		ИНАЧЕ ВЫРАЗИТЬ(ЛичныеДелаКомандыСрезПоследних.Данные КАК Справочник.Филиалы)
	|	КОНЕЦ КАК Команда,
	|	Пользователи.Наименование КАК Наименование
	|ИЗ
	|	РегистрСведений.ЛичныеДела.СрезПоследних(&ТекущаяДата, Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПереведенВДругоеПодразделение)) КАК ЛичныеДелаСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ЛичныеДелаСрезПоследних.Сотрудник = Пользователи.Ссылка
	|			И (НЕ Пользователи.ПометкаУдаления)
	|			И (НЕ Пользователи.Недействителен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЛичныеДела.СрезПоследних(&ТекущаяДата, Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПереведенВКоманду)) КАК ЛичныеДелаКомандыСрезПоследних
	|		ПО ЛичныеДелаСрезПоследних.Сотрудник = ЛичныеДелаКомандыСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК КомандыРазработки
	|		ПО ((ВЫРАЗИТЬ(ЛичныеДелаКомандыСрезПоследних.Данные КАК Справочник.Филиалы)) = КомандыРазработки.Ссылка)
	|			И (НЕ КомандыРазработки.ПометкаУдаления)
	|			И (КомандыРазработки.Родитель = &Филиал)
	|ГДЕ
	|	(ВЫРАЗИТЬ(ЛичныеДелаСрезПоследних.Данные КАК Справочник.Филиалы)) = &Филиал
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЛичныеДелаКомандыСрезПоследних.Сотрудник,
	|	ЛичныеДелаКомандыСрезПоследних.Данные,
	|	Пользователи.Наименование
	|ИЗ
	|	РегистрСведений.ЛичныеДела.СрезПоследних(&ТекущаяДата, Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПереведенВКастомнуюКоманду)) КАК ЛичныеДелаКомандыСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ЛичныеДелаКомандыСрезПоследних.Сотрудник = Пользователи.Ссылка
	|			И (НЕ Пользователи.ПометкаУдаления)
	|			И (НЕ Пользователи.Недействителен)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК КомандыРазработки
	|		ПО ((ВЫРАЗИТЬ(ЛичныеДелаКомандыСрезПоследних.Данные КАК Справочник.Филиалы)) = КомандыРазработки.Ссылка)
	|			И (НЕ КомандыРазработки.ПометкаУдаления)
	|			И (КомандыРазработки.Родитель = &Филиал)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Пользователи.Наименование";
	
	Запрос.УстановитьПараметр("Филиал", ФилиалРодитель);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(Выборка.Команда) Тогда	
			Результат.УчастникиДляВыбора.Добавить(Выборка.Пользователь);
		ИначеЕсли Выборка.Команда = ТекущаяКоманда Тогда
			Результат.Участники.Добавить(Выборка.Пользователь);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПометитьИзмененным(НазваниеЭлемента)
	
	НайденныйЭлемент = ИменаИзмененныхРеквизитов.НайтиПоЗначению(НазваниеЭлемента);
	Если НайденныйЭлемент = Неопределено Тогда
		ИменаИзмененныхРеквизитов.Добавить(НазваниеЭлемента);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Клиент Тогда	
	Участники = Новый СписокЗначений;
	УдаленныеУчастники = Новый СписокЗначений;
#КонецЕсли
