///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Описание назначения параметров формы:
//  - ВыбранныеФилиалы - список значений - элементы справочника Филиалы
//  - ITСтруктура      - булево          - если Истина выбирать только филиалы IT
//  - ВключаяКоманды   - булево          - если Истина дополнительно выводить команды филиалов.

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Установка общего условного оформления для окон данного вида
	ИнтерфейсПриложения.УстановитьУсловноеОформлениеСпискаДоступныхЗначений(
		ЭтотОбъект, "ДоступныеФилиалы.Избранное", "ДоступныеФилиалыПредставлениеДоступные");
		
	УстановитьЗаголовкиЭлементов();		
	ЗаполнитьСпискиФилиалов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СтрокаПоискаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	// Установка отбора на основании значения в строке поиска
	ИнтерфейсПриложенияКлиент.УстановитьОтборПриИзмененииСтрокиПоиска(
		ЭтотОбъект, "ДоступныеФилиалы", Текст, "Наименование");
		
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОчистка(Элемент, СтандартнаяОбработка)
	
	ИнтерфейсПриложенияКлиент.СброситьПоиск(ЭтотОбъект, "ДоступныеФилиалы");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий таблицы "ВыбранныеФилиалы"

&НаКлиенте
Процедура ВыбранныеФилиалыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ВыбранныеФилиалыИсключить" Тогда
		НайденнаяСтрока = ВыбранныеФилиалы.НайтиПоИдентификатору(ВыбраннаяСтрока);
		НайденнаяСтрока = ДоступныеФилиалы.НайтиПоИдентификатору(НайденнаяСтрока.ИдентификаторСтрокиСписка);
		
		ИсключитьФилиал(НайденнаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий таблицы "ДоступныеФилиалы"

&НаКлиенте
Процедура ДоступныеФилиалыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	НайденнаяСтрока = ДоступныеФилиалы.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если Поле.Имя = "ДоступныеФилиалыПредставление" Тогда
		НайденнаяСтрока.Пометка = НЕ НайденнаяСтрока.Пометка;
		
		ОбработатьИзменениеСтрокиДоступныхФилиалов(НайденнаяСтрока);
		
	ИначеЕсли Поле.Имя = "ДоступныеФилиалыИзбранное" Тогда
		Избранное = НайденнаяСтрока.Избранное;
		
		ПараметрыОтбора = Новый Структура("Родитель", НайденнаяСтрока.Филиал);
		НайденныеСтроки = ДоступныеФилиалы.НайтиСтроки(ПараметрыОтбора);
		
		Для Каждого Строка Из НайденныеСтроки Цикл
			Строка.Избранное = НЕ Избранное;
		КонецЦикла;
		
		ОбщегоНазначенияВызовСервера.ОбработатьПометкуИзбранного(НайденнаяСтрока.Филиал, НайденнаяСтрока.Избранное, "Филиалы");
		
		ДоступныеФилиалы.Сортировать("Избранное УБЫВ, РодительПредставление, ПриоритетСортировки, Наименование");		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеФилиалыПометкаПриИзменении(Элемент)
	
	ОбработатьИзменениеСтрокиДоступныхФилиалов(Элементы.ДоступныеФилиалы.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьВыбор(Команда)
		
	ВозвращаемыеФилиалы = Новый СписокЗначений;
	
	Если ВыбранныеФилиалы.Количество() > 0 Тогда
		Для Каждого СтрокаТаблицы Из ВыбранныеФилиалы Цикл
			ВозвращаемыеФилиалы.Добавить(СтрокаТаблицы.Филиал, СтрокаТаблицы.Наименование);
		КонецЦикла;		
	КонецЕсли;	
	
	Закрыть(ВозвращаемыеФилиалы);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПометкуДоступных(Команда)
	
	Пометка = (Команда.Имя = "ОтметитьВсе");
	
	Для Каждого Строка Из ДоступныеФилиалы Цикл
		Если Строка.Пометка <> Пометка Тогда
			Если Пометка Тогда
				ДобавитьФилиал(Строка);
			Иначе
				ИсключитьФилиал(Строка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьИзбранные(Команда)
	
	Для Каждого Строка Из ДоступныеФилиалы Цикл
		Если Строка.Избранное Тогда
			Если НЕ Строка.Пометка Тогда
				ДобавитьФилиал(Строка);
			КонецЕсли;
		Иначе
			Если Строка.Пометка Тогда
				ИсключитьФилиал(Строка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПоиск(Команда)
	
	ИнтерфейсПриложенияКлиент.СброситьПоиск(ЭтотОбъект, "ДоступныеФилиалы");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьФилиал(СтрокаТаблицы)
	
	НоваяСтрокаВыбранных = ВыбранныеФилиалы.Добавить();
	НоваяСтрокаВыбранных.Исключить = БиблиотекаКартинок.УдалитьЗначение;
	
	ЗаполнитьЗначенияСвойств(НоваяСтрокаВыбранных, СтрокаТаблицы);
	
	СтрокаТаблицы.Пометка = Истина;
	
	СтрокаТаблицы.ИдентификаторСтрокиСписка = НоваяСтрокаВыбранных.ПолучитьИдентификатор();
	НоваяСтрокаВыбранных.ИдентификаторСтрокиСписка = СтрокаТаблицы.ПолучитьИдентификатор();
	
	ВыбранныеФилиалы.Сортировать("РодительПредставление, ПриоритетСортировки, Наименование");
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьФилиал(СтрокаТаблицы)
	
	НайденнаяСтрока = ВыбранныеФилиалы.НайтиПоИдентификатору(СтрокаТаблицы.ИдентификаторСтрокиСписка);
	
	Если НайденнаяСтрока <> Неопределено Тогда
		ВыбранныеФилиалы.Удалить(НайденнаяСтрока);
	КонецЕсли;	
	
	СтрокаТаблицы.Пометка = Ложь;
	СтрокаТаблицы.ИдентификаторСтрокиСписка = -1;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискиФилиалов()
	
	ВыбранныеФилиалы.Очистить();
	ДоступныеФилиалы.Очистить();
	
	Если Параметры.Свойство("ВключаяКоманды") И Параметры.ВключаяКоманды Тогда
		ТекстЗапроса =
		#Область ТекстЗапроса
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ИзбранныеОбъекты.Объект КАК Справочник.Филиалы) КАК Филиал
		|ПОМЕСТИТЬ ИзбранныеФилиалы
		|ИЗ
		|	РегистрСведений.ИзбранныеОбъекты КАК ИзбранныеОбъекты
		|ГДЕ
		|	ИзбранныеОбъекты.Владелец = &ТекущийПользователь
		|	И ИзбранныеОбъекты.ТипОбъекта = ЗНАЧЕНИЕ(Перечисление.ТипыИзбранныхОбъектов.Филиалы)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Филиалы.Ссылка КАК Ссылка,
		|	Филиалы.Наименование КАК Наименование,
		|	Филиалы.Наименование КАК ПредставлениеДоступные,
		|	Филиалы.Наименование КАК ПредставлениеВыбранные,
		|	Филиалы.Ссылка КАК Родитель,
		|	0 КАК ПриоритетСортировки,
		|	ВЫБОР
		|		КОГДА ИзбранныеФилиалы.Филиал ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Избранное
		|ПОМЕСТИТЬ Филиалы
		|ИЗ
		|	Справочник.Филиалы КАК Филиалы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИзбранныеФилиалы КАК ИзбранныеФилиалы
		|		ПО Филиалы.Ссылка = ИзбранныеФилиалы.Филиал
		|ГДЕ
		|	НЕ Филиалы.ПометкаУдаления
		|{ГДЕ
		|	Филиалы.ТипФилиала КАК ТипФилиала,
		|	Филиалы.Ссылка КАК Филиал}
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Филиалы.Ссылка КАК Ссылка,
		|	Филиалы.Наименование КАК Наименование,
		|	Филиалы.ПредставлениеДоступные КАК ПредставлениеДоступные,
		|	Филиалы.ПредставлениеВыбранные КАК ПредставлениеВыбранные,
		|	Филиалы.Родитель КАК Родитель,
		|	0 КАК ПриоритетСортировки,
		|	Филиалы.Избранное КАК Избранное
		|ПОМЕСТИТЬ ФилиалыИКоманды
		|ИЗ
		|	Филиалы КАК Филиалы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Команды.Ссылка,
		|	Команды.Наименование,
		|	"" -  команда "" + Команды.Наименование,
		|	""команда "" + Команды.Наименование,
		|	Команды.Родитель,
		|	1,
		|	Филиалы.Избранное
		|ИЗ
		|	Филиалы КАК Филиалы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК Команды
		|		ПО Филиалы.Ссылка = Команды.Родитель
		|			И (Филиалы.Ссылка <> ЗНАЧЕНИЕ(Справочник.Филиалы.КастомныеКоманды))
		|			И (НЕ Команды.ПометкаУдаления)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Команды.Ссылка,
		|	Команды.Наименование,
		|	"" -  команда "" + Команды.Наименование,
		|	""команда "" + Команды.Наименование,
		|	Команды.Родитель,
		|	1,
		|	Филиалы.Избранное
		|ИЗ
		|	Филиалы КАК Филиалы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК Команды
		|		ПО Филиалы.Ссылка = Команды.Родитель
		|			И (Филиалы.Ссылка = ЗНАЧЕНИЕ(Справочник.Филиалы.КастомныеКоманды))
		|			И (НЕ Команды.ПометкаУдаления)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ФилиалыИКоманды.Ссылка В (&ВыбранныеФилиалы)
		|				И ФилиалыИКоманды.Ссылка <> ЗНАЧЕНИЕ(Справочник.Филиалы.КастомныеКоманды)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Пометка,
		|	ФилиалыИКоманды.Избранное КАК Избранное,
		|	ФилиалыИКоманды.Ссылка КАК Филиал,
		|	ФилиалыИКоманды.Наименование КАК Наименование,
		|	ФилиалыИКоманды.ПредставлениеДоступные КАК ПредставлениеДоступные,
		|	ФилиалыИКоманды.ПредставлениеВыбранные КАК ПредставлениеВыбранные,
		|	ФилиалыИКоманды.Родитель КАК Родитель,
		|	Филиалы.Наименование КАК РодительПредставление,
		|	ФилиалыИКоманды.ПриоритетСортировки КАК ПриоритетСортировки,
		|	-1 КАК ИдентификаторСтрокиСписка
		|ИЗ
		|	ФилиалыИКоманды КАК ФилиалыИКоманды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК Филиалы
		|		ПО ФилиалыИКоманды.Родитель = Филиалы.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Избранное УБЫВ,
		|	РодительПредставление,
		|	ПриоритетСортировки,
		|	Наименование";
		#КонецОбласти
	Иначе
		ТекстЗапроса =
		#Область ТекстЗапроса
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ИзбранныеОбъекты.Объект КАК Справочник.Филиалы) КАК Филиал
		|ПОМЕСТИТЬ ИзбранныеФилиалы
		|ИЗ
		|	РегистрСведений.ИзбранныеОбъекты КАК ИзбранныеОбъекты
		|ГДЕ
		|	ИзбранныеОбъекты.Владелец = &ТекущийПользователь
		|	И ИзбранныеОбъекты.ТипОбъекта = ЗНАЧЕНИЕ(Перечисление.ТипыИзбранныхОбъектов.Филиалы)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Филиалы.Ссылка В (&ВыбранныеФилиалы)
		|				И Филиалы.Ссылка <> ЗНАЧЕНИЕ(Справочник.Филиалы.КастомныеКоманды)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Пометка,
		|	ВЫБОР
		|		КОГДА ИзбранныеФилиалы.Филиал ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Избранное,
		|	Филиалы.Ссылка КАК Филиал,
		|	Филиалы.Наименование КАК Наименование,
		|	Филиалы.Наименование КАК ПредставлениеДоступные,
		|	Филиалы.Наименование КАК ПредставлениеВыбранные,
		|	Филиалы.Ссылка КАК Родитель,
		|	-1 КАК ИдентификаторСтрокиСписка
		|ИЗ
		|	Справочник.Филиалы КАК Филиалы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиФилиалов КАК НастройкиФилиалов
		|		ПО Филиалы.Ссылка = НастройкиФилиалов.Филиал
		|			И (НастройкиФилиалов.Настройка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыНастроекФилиалов.НаправлениеРазработки))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЮридическиеЛица КАК ЮридическиеЛица
		|		ПО Филиалы.ЮридическоеЛицо = ЮридическиеЛица.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИзбранныеФилиалы КАК ИзбранныеФилиалы
		|		ПО Филиалы.Ссылка = ИзбранныеФилиалы.Филиал
		|ГДЕ
		|	НЕ Филиалы.ПометкаУдаления
		|	И (ВЫРАЗИТЬ(ЕСТЬNULL(НастройкиФилиалов.Значение, ЗНАЧЕНИЕ(Справочник.НаправленияРазработки.ПустаяСсылка)) КАК Справочник.НаправленияРазработки)) <> ЗНАЧЕНИЕ(Справочник.НаправленияРазработки.ПустаяСсылка)
		|{ГДЕ
		|	Филиалы.ТипФилиала КАК ТипФилиала,
		|	Филиалы.Ссылка КАК Филиал,
		|	ЕСТЬNULL(ЮридическиеЛица.ЯвляетсяИТОрганизацией, ЛОЖЬ) КАК ТолькоИТФилиалы,
		|	НастройкиФилиалов.Значение КАК Направление}
		|
		|УПОРЯДОЧИТЬ ПО
		|	Избранное УБЫВ,
		|	Наименование";
		#КонецОбласти
	КонецЕсли;
		             
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.Текст = ТекстЗапроса;
	ПостроительЗапроса.Параметры.Вставить("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
	ПостроительЗапроса.Параметры.Вставить("ВыбранныеФилиалы", Параметры.ВыбранныеФилиалы);
		
	Если Параметры.Свойство("ITСтруктура") Тогда
		ЭлементОтбора = ПостроительЗапроса.Отбор.Добавить("ТипФилиала");
		ЭлементОтбора.ВидСравнения = ?(Параметры.ITСтруктура, ВидСравнения.НеРавно, ВидСравнения.Равно);
		ЭлементОтбора.Значение = Перечисления.ТипыФилиалов.НеIT;
		ЭлементОтбора.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("Направление") Тогда
		ЭлементОтбора = ПостроительЗапроса.Отбор.Добавить("Направление");
		ЭлементОтбора.ВидСравнения = ВидСравнения.Равно;
		ЭлементОтбора.Значение = Параметры.Направление;
		ЭлементОтбора.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоИТФилиалы") Тогда
		ЭлементОтбора = ПостроительЗапроса.Отбор.Добавить("ТолькоИТФилиалы");
		ЭлементОтбора.ВидСравнения = ВидСравнения.Равно;
		ЭлементОтбора.Значение = Параметры.ТолькоИТФилиалы;
		ЭлементОтбора.Использование = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ФилиалыНаправления") Тогда
		СписокФилиалов = Новый СписокЗначений;
		СписокФилиалов.ЗагрузитьЗначения(Параметры.ФилиалыНаправления);
		
		ЭлементОтбора = ПостроительЗапроса.Отбор.Добавить("Филиал");
		ЭлементОтбора.ВидСравнения = ВидСравнения.ВСписке;
		ЭлементОтбора.Значение = СписокФилиалов;
		ЭлементОтбора.Использование = Истина;
	КонецЕсли;
	
	ПостроительЗапроса.Выполнить();	
	РезультатЗапроса = ПостроительЗапроса.Результат;
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			// Заполнение общей таблицы филиалов
			НоваяСтрокаДоступных = ДоступныеФилиалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДоступных, Выборка);
			
			// Заполнение таблицы уже выбранных филиалов
			Если Выборка.Пометка Тогда 				
				НоваяСтрокаВыбранных = ВыбранныеФилиалы.Добавить();
				НоваяСтрокаВыбранных.Исключить = БиблиотекаКартинок.УдалитьЗначение;
				
				НоваяСтрокаВыбранных.ИдентификаторСтрокиСписка = НоваяСтрокаДоступных.ПолучитьИдентификатор();
				НоваяСтрокаДоступных.ИдентификаторСтрокиСписка = НоваяСтрокаВыбранных.ПолучитьИдентификатор();
				
				ЗаполнитьЗначенияСвойств(НоваяСтрокаВыбранных, Выборка, , "ИдентификаторСтрокиСписка");
			КонецЕсли;
		КонецЦикла;
		
		ВыбранныеФилиалы.Сортировать("РодительПредставление, ПриоритетСортировки, Наименование");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеСтрокиДоступныхФилиалов(СтрокаТаблицы)
	
	Если СтрокаТаблицы.Пометка = Истина Тогда
		ДобавитьФилиал(СтрокаТаблицы);	
	Иначе
		ИсключитьФилиал(СтрокаТаблицы);	
	КонецЕсли;			
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовкиЭлементов()
	
	Если Параметры.Свойство("ВключаяКоманды") И Параметры.ВключаяКоманды Тогда
		Заголовок = Заголовок + " и команд";
		Элементы.НадписьДобавитьФилиалы.Заголовок = Элементы.НадписьДобавитьФилиалы.Заголовок + " и команды";
		Элементы.НадписьВыбранныеФилиалы.Заголовок = Элементы.НадписьВыбранныеФилиалы.Заголовок + " и команды";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
