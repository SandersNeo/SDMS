///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Установка общего условного оформления для окон данного вида
	ИнтерфейсПриложения.УстановитьУсловноеОформлениеСпискаДоступныхЗначений(
		ЭтотОбъект, "Доступные.Избранное", "ДоступныеНаименование");
	
	ЗаполнитьСписки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СтрокаПоискаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	// Установка отбора на основании значения в строке поиска
	ИнтерфейсПриложенияКлиент.УстановитьОтборПриИзмененииСтрокиПоиска(
		ЭтотОбъект, "Доступные", Текст, "Наименование");	
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОчистка(Элемент, СтандартнаяОбработка)
	
	ИнтерфейсПриложенияКлиент.СброситьПоиск(ЭтотОбъект, "Доступные");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий таблицы "Выбранные"

&НаКлиенте
Процедура ВыбранныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ВыбранныеИсключить" Тогда
		НайденнаяСтрока = Выбранные.НайтиПоИдентификатору(ВыбраннаяСтрока);
		НайденнаяСтрока = Доступные.НайтиПоИдентификатору(НайденнаяСтрока.ИдентификаторСтрокиСписка);
		
		Исключить(НайденнаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий таблицы "Доступные"

&НаКлиенте
Процедура ДоступныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ДоступныеНаименование" Тогда
		НайденнаяСтрока = Доступные.НайтиПоИдентификатору(ВыбраннаяСтрока);
		НайденнаяСтрока.Пометка = НЕ НайденнаяСтрока.Пометка;
		
		ОбработатьИзменениеСтрокиДоступных(НайденнаяСтрока);
		
	ИначеЕсли Поле.Имя = "ДоступныеИзбранное" Тогда
		ПриИзмененииПометкиИзбранного(ВыбраннаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеПометкаПриИзменении(Элемент)
	
	ОбработатьИзменениеСтрокиДоступных(Элементы.Доступные.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьВыбор(Команда)
	
	Возвращаемые = Новый СписокЗначений;
	
	Если Выбранные.Количество() > 0 Тогда
		Для Каждого Строка Из Выбранные Цикл
			Возвращаемые.Добавить(Строка.Ссылка, Строка.Наименование);
		КонецЦикла;
		
		Возвращаемые.СортироватьПоПредставлению();
	КонецЕсли;	
	
	Закрыть(Возвращаемые);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПометкуДоступных(Команда)
	
	Пометка = (Команда.Имя = "ОтметитьВсе");
	
	Для Каждого Строка Из Доступные Цикл
		Если Строка.Пометка <> Пометка Тогда
			Если Пометка Тогда
				Добавить(Строка);
			Иначе
				Исключить(Строка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьИзбранные(Команда)
	
	Для Каждого Строка Из Доступные Цикл
		Если Строка.Избранное Тогда
			Если НЕ Строка.Пометка Тогда
				Добавить(Строка);
			КонецЕсли;
		Иначе
			Если Строка.Пометка Тогда
				Исключить(Строка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПоиск(Команда)
	
	ИнтерфейсПриложенияКлиент.СброситьПоиск(ЭтотОбъект, "Доступные");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Добавить(Строка)
	
	НоваяСтрокаВыбранных = Выбранные.Добавить();
	НоваяСтрокаВыбранных.Исключить = БиблиотекаКартинок.УдалитьЗначение;
	
	ЗаполнитьЗначенияСвойств(НоваяСтрокаВыбранных, Строка, "Ссылка, Наименование");
	
	Строка.Пометка = Истина;
	
	Строка.ИдентификаторСтрокиСписка = НоваяСтрокаВыбранных.ПолучитьИдентификатор();
	НоваяСтрокаВыбранных.ИдентификаторСтрокиСписка = Строка.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура Исключить(Строка)
	
	НайденнаяСтрока = Выбранные.НайтиПоИдентификатору(Строка.ИдентификаторСтрокиСписка);
	
	Если НайденнаяСтрока <> Неопределено Тогда
		Выбранные.Удалить(НайденнаяСтрока);
	КонецЕсли;	
	
	Строка.Пометка = Ложь;
	Строка.ИдентификаторСтрокиСписка = -1;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеСтрокиДоступных(Строка)
	
	Если Строка.Пометка = Истина Тогда
		Добавить(Строка);	
	Иначе
		Исключить(Строка);	
	КонецЕсли;			
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочие процедуры и функции

&НаСервере
Процедура ЗаполнитьСписки()
	
	Выбранные.Очистить();
	Доступные.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	#Область ТекстЗапроса
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ИзбранныеОбъекты.Объект КАК Справочник.Продукты) КАК Ссылка
	|ПОМЕСТИТЬ ИзбранныеОбъекты
	|ИЗ
	|	РегистрСведений.ИзбранныеОбъекты КАК ИзбранныеОбъекты
	|ГДЕ
	|	ИзбранныеОбъекты.Владелец = &Пользователь
	|	И ИзбранныеОбъекты.ТипОбъекта = ЗНАЧЕНИЕ(Перечисление.ТипыИзбранныхОбъектов.Продукты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Элементы.Ссылка КАК Ссылка,
	|	Элементы.Наименование КАК Наименование,
	|	Элементы.ПометкаУдаления КАК ПометкаУдаления
	|ПОМЕСТИТЬ ТаблицаЭлементовСправочника
	|ИЗ
	|	Справочник.Продукты КАК Элементы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК Пометка,
	|	ТаблицаЭлементовСправочника.Ссылка КАК Ссылка,
	|	ТаблицаЭлементовСправочника.Наименование КАК Наименование,
	|	ВЫБОР
	|		КОГДА ИзбранныеОбъекты.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Избранное
	|ПОМЕСТИТЬ ПолнаяТаблицаЭлементов
	|ИЗ
	|	ТаблицаЭлементовСправочника КАК ТаблицаЭлементовСправочника
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИзбранныеОбъекты КАК ИзбранныеОбъекты
	|		ПО ТаблицаЭлементовСправочника.Ссылка = ИзбранныеОбъекты.Ссылка
	|ГДЕ
	|	ТаблицаЭлементовСправочника.Ссылка В(&Выбранные)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЛОЖЬ,
	|	ТаблицаЭлементовСправочника.Ссылка,
	|	ТаблицаЭлементовСправочника.Наименование,
	|	ВЫБОР
	|		КОГДА ИзбранныеОбъекты.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|ИЗ
	|	ТаблицаЭлементовСправочника КАК ТаблицаЭлементовСправочника
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИзбранныеОбъекты КАК ИзбранныеОбъекты
	|		ПО ТаблицаЭлементовСправочника.Ссылка = ИзбранныеОбъекты.Ссылка
	|ГДЕ
	|	НЕ ТаблицаЭлементовСправочника.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ПолнаяТаблицаЭлементов.Пометка) КАК Пометка,
	|	ПолнаяТаблицаЭлементов.Ссылка КАК Ссылка,
	|	ПолнаяТаблицаЭлементов.Наименование КАК Наименование,
	|	МАКСИМУМ(ПолнаяТаблицаЭлементов.Избранное) КАК Избранное,
	|	МАКСИМУМ(-1) КАК ИдентификаторСтрокиСписка
	|ИЗ
	|	ПолнаяТаблицаЭлементов КАК ПолнаяТаблицаЭлементов
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолнаяТаблицаЭлементов.Ссылка,
	|	ПолнаяТаблицаЭлементов.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Избранное УБЫВ,
	|	Наименование";
	#КонецОбласти
	
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("Выбранные", Параметры.Выбранные);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
		
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрокаДоступных = Доступные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаДоступных, Выборка, "Пометка, Ссылка, Наименование, Избранное, ИдентификаторСтрокиСписка");
		
		Если Выборка.Пометка = Истина Тогда
			НоваяСтрокаВыбранных = Выбранные.Добавить();
			НоваяСтрокаВыбранных.Исключить = БиблиотекаКартинок.УдалитьЗначение;
			
			НоваяСтрокаВыбранных.ИдентификаторСтрокиСписка = НоваяСтрокаДоступных.ПолучитьИдентификатор();
			НоваяСтрокаДоступных.ИдентификаторСтрокиСписка = НоваяСтрокаВыбранных.ПолучитьИдентификатор();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрокаВыбранных, Выборка, "Ссылка, Наименование");
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииПометкиИзбранного(ВыбраннаяСтрока)
	
	НайденнаяСтрока = Доступные.НайтиПоИдентификатору(ВыбраннаяСтрока);
	НайденнаяСтрока.Избранное = НЕ НайденнаяСтрока.Избранное;
	
	ОбщегоНазначенияВызовСервера.ОбработатьПометкуИзбранного(НайденнаяСтрока.Ссылка, НайденнаяСтрока.Избранное, "Продукты");
	
	// Установка фокуса на тот же номер строки
	ИндексСтроки = Доступные.Индекс(НайденнаяСтрока);
	
	Доступные.Сортировать("Избранное УБЫВ, Наименование");
	
	КоличествоСтрок = Доступные.Количество();
	
	Если КоличествоСтрок > 0 Тогда
		Если КоличествоСтрок >= ИндексСтроки Тогда
			ИдентификаторСтроки = Доступные[ИндексСтроки].ПолучитьИдентификатор();
		Иначе
			ИдентификаторСтроки = Доступные[0].ПолучитьИдентификатор();
		КонецЕсли;
		
		Элементы.Доступные.ТекущаяСтрока = ИдентификаторСтроки;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти
