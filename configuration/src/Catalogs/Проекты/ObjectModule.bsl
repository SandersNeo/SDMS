///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда
	
#Область ОписаниеПеременных

// Хранит состояние объекта до записи
Перем ДанныеДоЗаписи;

// Хранит предыдущий статус при смене
Перем ИзменилсяСтатус;

// Хранит описание изменений объекта
Перем ОписаниеИзменений;

// Хранит признак изменения описания
Перем ОписаниеИзменилось;

// Хранит предыдущий объект основания при смене
Перем ПредыдущийОбъектОснование;

// Хранит признаки изменения ключевых реквизитов
Перем ПризнакиИзмененияРеквизитов;

// Хранит признак, указывающий, что объект еще не записан в БД
Перем ЭтоНовыйОбъект;

#КонецОбласти
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ (ЗначениеЗаполнено(Продукт)
		И (Статус = Справочники.СтатусыОбъектов.Новый ИЛИ Статус = Справочники.СтатусыОбъектов.Приостановлен)) Тогда
		
		ПроверяемыеРеквизиты.Добавить("Руководитель");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Направление) 
		И РегистрыСведений.ИспользованиеЮридическихЛицНаправлений.Использует(Направление) Тогда

		ПроверяемыеРеквизиты.Добавить("ЮридическоеЛицо");
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
		
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// ДЕЙСТВИЯ, СВЯЗАННЫЕ С ОБРАЩЕНИЕМ К "СТАРЫМ" ЗНАЧЕНИЯМ РЕКВИЗИТОВ ОБЪЕКТА
	
	// Данные объекта до записи
	ДанныеДоЗаписи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, 
		"Автор, ВидПроекта, Заказчик, ОбъектОснование, Описание, Руководитель, Статус, Направление, ЮридическоеЛицо");
	
	// Определенные данные объекта до записи,
	// для фиксации изменений состояния в РС.ОчередьСобытийНаОбработку 
	ОписаниеИзменений = ОбщегоНазначения.ПолучитьСостояниеОбъектаДоЗаписи(Ссылка);
	
	// ДЕЙСТВИЯ, СВЯЗАННЫЕ С ПРОВЕРКАМИ И ЗАПОЛНЕНИЕМ ЗНАЧЕНИЙ РЕКВИЗИТОВ ОБЪЕКТА
	
	ТекущаяДата = ТекущаяДатаСеанса();	
	ЭтоНовыйОбъект = ЭтоНовый();
	ПредыдущийОбъектОснование = Неопределено;	
	ИзменилсяСтатус = (ДанныеДоЗаписи.Статус <> Статус);
	
	// Проверка изменения основания у проекта
	ПризнакиИзмененияРеквизитов.ОбъектОснование = (ОбъектОснование <> ДанныеДоЗаписи.ОбъектОснование);
	ПризнакиИзмененияРеквизитов.ЮридическоеЛицо = (ЮридическоеЛицо <> ДанныеДоЗаписи.ЮридическоеЛицо);
	
	// Изменение вида текущего проекта на вид родительского проекта
	Если ПризнакиИзмененияРеквизитов.ОбъектОснование И НЕ ЭтоНовыйОбъект Тогда
		ВидПроекта = ОбщегоНазначения.ПолучитьВидРодительскогоПроекта(ОбъектОснование);
		ПредыдущийОбъектОснование = ДанныеДоЗаписи.ОбъектОснование;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ПланГабаритноеПланирование") Тогда
		ОписаниеИзменений.Значения.Реквизиты.Вставить("ПланГабаритноеПланирование", 
			ДополнительныеСвойства.ПланГабаритноеПланирование);
	КонецЕсли;

	// Проверка изменения вида проекта
	Если НЕ ЭтоНовыйОбъект Тогда
		ПризнакиИзмененияРеквизитов.ВидПроекта = (ВидПроекта <> ДанныеДоЗаписи.ВидПроекта);
		
		Если ИзменилсяСтатус Тогда
			ДатаИзмененияСтатуса = ТекущаяДата;
			
			Если Статус = Справочники.СтатусыОбъектов.Рассмотрение И НЕ ЗначениеЗаполнено(ДатаНачалаРассмотрения) Тогда
				ДатаНачалаРассмотрения = ТекущаяДата;
			ИначеЕсли Статус = Справочники.СтатусыОбъектов.Отклонен И НЕ ЗначениеЗаполнено(ДатаЗавершения) Тогда
				ДатаЗавершения = ТекущаяДата;
			ИначеЕсли Статус = Справочники.СтатусыОбъектов.ВРаботе И НЕ ЗначениеЗаполнено(ДатаНачалаРазработки) Тогда
				ДатаНачалаРазработки = ТекущаяДата;
			ИначеЕсли Статус = Справочники.СтатусыОбъектов.Масштабирование И НЕ ЗначениеЗаполнено(ДатаГотовностиКМаштабированию) Тогда
				ДатаГотовностиКМаштабированию = ТекущаяДата;
			ИначеЕсли Статус = Справочники.СтатусыОбъектов.Решен Тогда 
				ПроцентВыполнения = 100;
				Если НЕ ЗначениеЗаполнено(ДатаЗавершения) Тогда
				ДатаЗавершения = ТекущаяДата;
				КонецЕсли;
			ИначеЕсли Статус = Справочники.СтатусыОбъектов.Тестирование Тогда
				ДатаПереходаВТестирование = ТекущаяДата;	
			КонецЕсли;			
		КонецЕсли
	Иначе	
		ЭтотОбъект.УстановитьНовыйКод();
		КороткийНомер = ОбщегоНазначения.ПолучитьКороткийНомер(Код, Справочники.Проекты.ПолучитьПрефикс());
		ДатаИзмененияСтатуса = Дата;
	КонецЕсли;  
	
	ИнтеграцияДополнительныхПодсистем.ПроверитьИзменениеПланаГабаритногоПланирования(Ссылка, ДополнительныеСвойства);
		
	ЕстьИзмененияОписания = Неопределено;	
	Если ДополнительныеСвойства.Свойство("ОписаниеИзменилось") Тогда
		ЕстьИзмененияОписания = ДополнительныеСвойства.ОписаниеИзменилось;
	КонецЕсли;

	// Задействование механизма сравнения истории описания объектов
	ОписаниеИзменилось = ИсторияИзменений.СравнитьОписанияОбъектаПриЗаписи(Ссылка,
		ДанныеДоЗаписи.Описание, Описание, ЕстьИзмененияОписания);
	
	Если НЕ Отказ И (ОписаниеИзменилось ИЛИ ЭтоНовыйОбъект) Тогда
		ИндексируемоеОписание = РедакторОписания.ПолучитьИндексируемоеОписание(Описание);	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяДата = ТекущаяДатаСеанса();
	
	Если ДополнительныеСвойства.Свойство("ДополнительныеРеквизиты_ТаблицаРеквизитов") Тогда
		ДопРеквизиты = ДополнительныеСвойства.ДополнительныеРеквизиты_ТаблицаРеквизитов;
	Иначе
		ДопРеквизиты = Неопределено;
	КонецЕсли;
	
	// Сравнение состояния до и после записи
	Если ДополнительныеСвойства.Свойство("Комментарий") Тогда
		ОбщегоНазначения.ОбработатьИзменениеОбъекта(Ссылка, ОписаниеИзменений, 
			ДопРеквизиты, ДополнительныеСвойства.Комментарий);
	Иначе
		ОбщегоНазначения.ОбработатьИзменениеОбъекта(Ссылка, ОписаниеИзменений, ДопРеквизиты);
	КонецЕсли;
	
	Если ДанныеДоЗаписи.ЮридическоеЛицо <> ЮридическоеЛицо Тогда
		РегистрыСведений.ИсторияИзмененийЮрЛицОбъектов.ДобавитьЗапись(Ссылка, ЮридическоеЛицо, ТекущаяДата);
	КонецЕсли;
	
	//Добавить наблюдателей для нового проекта и запись высшего родителя
	Если ЭтоНовыйОбъект Тогда
		УчастникиПроцессов.ДобавитьУчастниковИзОбъектаОснования(Ссылка);
		
		// Если это новый объект, то нужно добавить заказчика в заинтересованные лица
		РегистрыСведений.ЗаинтересованныеЛица.ДобавитьЗапись(Ссылка, Заказчик, "Заказчик");
	Иначе
		// Обновить значение реквизита ВидРодительскогоПроекта и ВидПроекта у всех подчиненных объектов
		Если ПризнакиИзмененияРеквизитов.ВидПроекта Тогда		
			РегистрыСведений.ОчередьСобытийНаОбработку.ДобавитьЗаданиеОбновитьВидРодительскогоПроекта(Ссылка, ВидПроекта);
		КонецЕсли;
	КонецЕсли;
	
	// Запись в регистр сведений высшего родителя для текущего объекта
	Если ЭтоНовыйОбъект ИЛИ ПризнакиИзмененияРеквизитов.ОбъектОснование Тогда		
		Если ЗначениеЗаполнено(ОбъектОснование) Тогда
			РегистрыСведений.ОбъектыВерхнегоУровняСтруктурыПодчиненности.Добавить(Ссылка, ОбъектОснование);
			РегистрыСведений.СтруктураПодчиненности.Добавить(Ссылка, ОбъектОснование, ПредыдущийОбъектОснование);
		Иначе
			РегистрыСведений.ОбъектыВерхнегоУровняСтруктурыПодчиненности.Добавить(Ссылка);
			РегистрыСведений.СтруктураПодчиненности.Добавить(Ссылка, Неопределено, ПредыдущийОбъектОснование);
		КонецЕсли;
	КонецЕсли;
	
	// Если изменили основание объекта, то нужно перебросить общие фактические трудозатраты со старого основания на новое
	Если НЕ ЭтоНовыйОбъект И ПризнакиИзмененияРеквизитов.ОбъектОснование Тогда
		УчетТрудозатрат.ОбработатьТрудозатратыПриИзмененииОснованияОбъекта(Ссылка, ОбъектОснование, ПредыдущийОбъектОснование);
	КонецЕсли;
	
	// Если объект изменен записываем дату изменения, и дату изменения в объект верхнего уровня
	Если ДополнительныеСвойства.Свойство("ОбновитьДатыПоследнихИзмененийПодчиненных") Тогда
		ОбщегоНазначения.ДобавитьДатыИзмененияДляПроекта(Ссылка, Истина);
		ДополнительныеСвойства.Удалить("ОбновитьДатыПоследнихИзмененийПодчиненных");
	КонецЕсли;
	
	// Добавляем комментарий при изменении статуса проекта
	КомментарийСтатуса = Неопределено;
	Если ДополнительныеСвойства.Свойство("Комментарий") И ЗначениеЗаполнено(ДополнительныеСвойства.Комментарий.ТекстКомментария) Тогда
		ИдентификаторКомментария = ДополнительныеСвойства.Комментарий.Идентификатор;
		РегистрыСведений.Комментарии.Добавить(Ссылка, ИдентификаторКомментария, , ДополнительныеСвойства.Комментарий.ТекстКомментария, , Истина);
		
		ПричинаИзмененияСтатуса = Неопределено;
		Если ДополнительныеСвойства.Свойство("ПричинаИзмененияСтатуса", ПричинаИзмененияСтатуса) Тогда
			РегистрыСведений.ПричиныИзмененияСтатусаОбъектов.Добавить(Ссылка, Статус, ПричинаИзмененияСтатуса, ИдентификаторКомментария);
			
			ДополнительныеСвойства.Удалить("ПричинаИзмененияСтатуса");
			ДополнительныеСвойства.Удалить("НеобходимоОтправитьУведомление");
		КонецЕсли;
		
		ДополнительныеСвойства.Удалить("Комментарий");
	КонецЕсли;
	
	ИнтеграцияДополнительныхПодсистем.ЗафиксироватьИзменениеПланаГабаритногоПланирования(Ссылка, ДополнительныеСвойства);
	
	// Если заявка является документом для элемента проекта и изменился статус, необходимо изменить статус элемента проекта
	Если ИзменилсяСтатус Тогда
		РегистрыСведений.ПланыВыполненияПроектов.ИзменитьСтатусЭлементаПланаПроекта(Ссылка, Статус, ДатаЗавершения);
	КонецЕсли;
	
	УчастникиПроцессов.ОбновитьУчастниковОбъекта(Ссылка, ДанныеДоЗаписи);
	
	ИнтеграцияДополнительныхПодсистем.ДобавитьИсключаемыеОбъекты(Ссылка, ОбъектОснование);
	
	УчетТрудозатрат.ПроверкаНеобходимостиПересчетаТрудозатрат(ЭтотОбъект, ЭтоНовыйОбъект, ДанныеДоЗаписи);
	
	Если НЕ Отказ И (ОписаниеИзменилось ИЛИ ЭтоНовыйОбъект) Тогда    
		РедакторОписания.ДополнительноОбработатьОписание(ЭтотОбъект);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("ОбъектОснование") 
		И ТипЗнч(ДанныеЗаполнения.ОбъектОснование) = Тип("СправочникСсылка.Проекты") Тогда
		ОбъектОснование = ДанныеЗаполнения.ОбъектОснование;
		
		ДанныеРодителя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОбъектОснование, "Направление, ВидПроцесса, ЮридическоеЛицо");
		Направление = ДанныеРодителя.Направление;
		ЮридическоеЛицо = ДанныеРодителя.ЮридическоеЛицо;
		ВидПроцесса = ДанныеРодителя.ВидПроцесса;
		
	ИначеЕсли ДанныеЗаполнения <> Неопределено Тогда
		ОбъектОснование = ДанныеЗаполнения;
		ДанныеРодителя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОбъектОснование, "Направление, ВидПроцесса, ЮридическоеЛицо");
		Направление = ДанныеРодителя.Направление;
		ЮридическоеЛицо = ДанныеРодителя.ЮридическоеЛицо;
		ВидПроцесса = ДанныеРодителя.ВидПроцесса;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ОбъектОснование = ОбъектКопирования.ОбъектОснование;
	
КонецПроцедуры

Процедура ПриУстановкеНовогоКода(СтандартнаяОбработка, Префикс)
	
	Префикс = Справочники.Проекты.ПолучитьПрефикс();
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

ПризнакиИзмененияРеквизитов = Новый Структура;
ПризнакиИзмененияРеквизитов.Вставить("ОбъектОснование", Ложь);
ПризнакиИзмененияРеквизитов.Вставить("ВидПроекта", Ложь);
ПризнакиИзмененияРеквизитов.Вставить("ЮридическоеЛицо", Ложь);

#КонецОбласти

#КонецЕсли
