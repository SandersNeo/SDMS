///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс     

// Добавляет обработчики обновления
//
// Параметры:
//  Обработчики	 - ТаблицаЗначений	 - см. ПриложениеВызовСервера.ПолучитьОбработчикиДанных
//
Процедура ДобавлениеОбработчиковОбновления(Обработчики) Экспорт     
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "*";
	Обработчик.Процедура = "Справочники.ПрограммныеРоли.ПроверитьПредопределенныеЭлементы";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "*";
	Обработчик.Процедура = "Справочники.ПрограммныеРоли.ЗаполнитьДанныеИзКонфигурации";
	
КонецПроцедуры

// Заполняет програмные роли ролями из конфигурации
//
Процедура ЗаполнитьДанныеИзКонфигурации() Экспорт 
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Роль", ОбщегоНазначенияКлиентСервер.ОписаниеТипаСтрока(250));
	
	Для Каждого Роль Из Метаданные.Роли Цикл
		Новая = Таблица.Добавить();
		Новая.Роль = Роль.Имя;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Роль КАК Роль
	|ПОМЕСТИТЬ Роли
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Роли.Роль КАК Роль
	|ИЗ
	|	Роли КАК Роли
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПрограммныеРоли КАК ПрограммныеРоли
	|		ПО Роли.Роль = ПрограммныеРоли.Наименование
	|ГДЕ
	|	ПрограммныеРоли.Ссылка ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Таблица", Таблица);	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Новая = Справочники.ПрограммныеРоли.СоздатьЭлемент();
		Новая.Наименование = Выборка.Роль;
		Новая.ЭтоРольКонфигурации = Истина;
		Новая.Родитель = Справочники.ПрограммныеРоли.ИзКонфигурации;
		Новая.Записать();
	КонецЦикла;
		
КонецПроцедуры     

// Проверяет предопределенные настройки
//
Процедура ПроверитьПредопределенныеЭлементы() Экспорт 
	
	ПапкаИзменение = Справочники.ПрограммныеРоли.Изменение;
	ПапкаОткрытие = Справочники.ПрограммныеРоли.Открытие;
	
	Наименование = "Просмотр объектов с признаком ""Ограниченный просмотр""";   
	Описание = "Определяет возможность открытия заявок/задач с признаком ""Ограниченный просмотр""";
	Сообщение = "Автор ограничил доступ к объекту. Просмотр недоступен.";
	ЗаполнитьПредопределенныйЭлемент("ОграниченныйПросмотр", Наименование, ПапкаОткрытие, Описание, Сообщение);   	
		
	Наименование = "Настройка ограниченного просмотра";   
	ЗаполнитьПредопределенныйЭлемент("НастройкаОграниченногоПросмотра", Наименование, ПапкаИзменение); 
	
	Наименование = "Отклонение заявки";   
	Описание = "Право позволяет пользователю отклонять заявку на разработку";
	ЗаполнитьПредопределенныйЭлемент("ОтклонениеЗаявки", Наименование, ПапкаОткрытие, Описание);
	
	Наименование = "Делегирование заявки";   
	Описание = "Право позволяет делегировать заявку другому пользователю";
	ЗаполнитьПредопределенныйЭлемент("ДелегированиеЗаявки", Наименование, ПапкаОткрытие, Описание);
	
	Наименование = "Установить ограниченный просмотр";   
	Описание = "Определяет доступность установки признака ""ограниченный просмотр""";
	ЗаполнитьПредопределенныйЭлемент("УстановитьОграниченныйПросмотр", Наименование, ПапкаОткрытие, Описание);
		
КонецПроцедуры     

#КонецОбласти    

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПредопределенныйЭлемент(ИмяЭлемента, Наименование, Родитель, Описание = "", СообщениеПользователю = "") 
	
	Попытка
		Объект = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ПрограммныеРоли." + ИмяЭлемента);
	Исключение
		Сообщение = НСтр("ru = 'Предопределенный элемент ""%Параметр%"" не найден.'");
		Сообщение = СтрЗаменить(Сообщение, "%Параметр%", "Справочник.ПрограммныеРоли." + ИмяЭлемента);
		ВызватьИсключение Сообщение;
	КонецПопытки;
	
	Если Объект = Неопределено Тогда 
		Объект = Справочники.ПрограммныеРоли.СоздатьЭлемент();
		Объект.Родитель = Родитель;    
		Объект.ИмяПредопределенныхДанных = ИмяЭлемента;
	Иначе
		Объект = Объект.ПолучитьОбъект();
	КонецЕсли;	
	
	Если Объект.Наименование <> Наименование
		ИЛИ Объект.СообщениеПользователю = СообщениеПользователю 
		ИЛИ Объект.Описание = Описание Тогда   
		
		Объект.Наименование = Наименование;
		Объект.СообщениеПользователю = СообщениеПользователю;
		Объект.Описание = Описание;
		Объект.Записать();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
