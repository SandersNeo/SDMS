///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Добавляет обработчики обновления
//
// Параметры:
//  Обработчики	 - ТаблицаЗначений	 - см. ПриложениеВызовСервера.ПолучитьОбработчикиДанных
//
Процедура ДобавлениеОбработчиковОбновления(Обработчики) Экспорт     
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "*";
	Обработчик.Процедура = "Справочники.КлассификаторИспользованияРабочегоВремени.ПроверитьПредопределенныеЭлементы";
	
КонецПроцедуры

Функция ПолучитьЭлементПоБуквенномуКоду(Знач БуквенныйКод) Экспорт
	
	КлассификаторСсылка = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторИспользованияРабочегоВремени.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторИспользованияРабочегоВремени КАК КлассификаторИспользованияРабочегоВремени
	|ГДЕ
	|	КлассификаторИспользованияРабочегоВремени.БуквенныйКод = &БуквенныйКод";
	
	Запрос.УстановитьПараметр("БуквенныйКод", БуквенныйКод);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		КлассификаторСсылка = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат КлассификаторСсылка;
		
КонецФункции

// Проверяет предопределенные настройки
//
Процедура ПроверитьПредопределенныеЭлементы() Экспорт 
		
	ЗаполнитьПредопределенныйЭлемент("Явка", "Я", Ложь, "Продолжительность работы в дневное время", Истина, "01");
	ЗаполнитьПредопределенныйЭлемент("Основной отпуск", "ОТ", Ложь, "Ежегодный основной оплачиваемый отпуск", Ложь, "09");
	ЗаполнитьПредопределенныйЭлемент("Дополнительный отпуск", "ОД", Ложь, "Ежегодный дополнительный оплачиваемый отпуск", Ложь, "10");
	ЗаполнитьПредопределенныйЭлемент("Выходные дни", "В", Истина, "Выходные дни", Ложь, "");
	ЗаполнитьПредопределенныйЭлемент("Командировка", "К", Ложь, "Служебная командировка", Истина, "06");
		
КонецПроцедуры

Функция ЭлементСуществует(Знач Ссылка) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторИспользованияРабочегоВремени.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторИспользованияРабочегоВремени КАК КлассификаторИспользованияРабочегоВремени
	|ГДЕ
	|	КлассификаторИспользованияРабочегоВремени.Ссылка = &Ссылка";
		
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	// Если результат запроса пустой - значит элемент еще не существует.
	Возврат (НЕ РезультатЗапроса.Пустой());
	
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПредопределенныйЭлемент(Наименование, БуквенныйКод, Выходной, ПолноеНаименование, РабочееВремя, ЦифровойКод) 
	
	Объект = Справочники.КлассификаторИспользованияРабочегоВремени.ПолучитьЭлементПоБуквенномуКоду(БуквенныйКод);
		
	Если Объект = Неопределено Тогда  
		Объект = Справочники.КлассификаторИспользованияРабочегоВремени.СоздатьЭлемент();
		Объект.Наименование = Наименование;
		Объект.БуквенныйКод = БуквенныйКод;
		Объект.Выходной = Выходной;
		Объект.ПолноеНаименование = ПолноеНаименование;     
		Объект.РабочееВремя = РабочееВремя;
		Объект.ЦифровойКод = ЦифровойКод;
		
		Объект.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
