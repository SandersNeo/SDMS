///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Элементы.ИспользоватьВидыПроцессов.Доступность = ЭтоОтветственныйЗаНаправление();
	
	ДополнительныеРеквизиты.ПодключитьДополнительныеРеквизиты(Объект.Ссылка, ЭтотОбъект, 
		"ГруппаДополнительныеРеквизиты", "ГруппаДопРеквизитыНаФорме");
	
	Если НЕ Параметры.Ключ.Пустая() Тогда
		ПараметрыОтбора = Новый Структура("Направление", Объект.Ссылка);
		СрезПоследних = РегистрыСведений.ИспользованиеЮридическихЛицНаправлений.ПолучитьПоследнее(, ПараметрыОтбора);
		ИспользоватьЮридическиеЛица = СрезПоследних.Использование;
	КонецЕсли;
	
	Администратор = УправлениеДоступомПовтИсп.ПроверитьДоступностьРоли("Администратор");
	ПолныеПрава = УправлениеДоступомПовтИсп.ПроверитьДоступностьРоли("ПолныеПрава");
	
	ОграничитьВозможностьИзмененияРуководителя(Администратор, ПолныеПрава);
	ОграничитьВозможностьИзмененияНастроекЮридическихЛицНаправлений(Администратор, ПолныеПрава);
	ОграничитьВозможностьИзмененияСпискаЗаказчиков(Администратор, ПолныеПрава);
	ИнтеграцияДополнительныхПодсистем.ОбработатьСозданныйЭлементФормы(ЭтотОбъект);
	ИнтеграцияДополнительныхПодсистем.НастроитьДоступностьИспользованияГабаритногоПланирования(Элементы.ИспользоватьГабаритноеПланирование);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	РуководительНайден = Ложь;
	
	Для Каждого Строка Из Объект.Ответственные Цикл
		Если Строка.Руководитель Тогда
			РуководительНайден = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;	
	
	Если НЕ РуководительНайден Тогда
		ТекстСообщения = "Ни у одного ответственного не установлен признак ""Руководитель""";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
	КонецЕсли;
	
	Если ИспользоватьЮридическиеЛица И НЕ ЗначениеЗаполнено(Объект.ОсновноеЮридическоеЛицо) Тогда
		ТекстСообщения = "Выберите основное юридическое лицо или отключите их использование";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ИспользоватьЮридическиеЛица", ИспользоватьЮридическиеЛица);
	
	Если НЕ ИспользоватьЮридическиеЛица Тогда
		ТекущийОбъект.ОсновноеЮридическоеЛицо = Неопределено;
	КонецЕсли;
	
	ДополнительныеРеквизиты.ПередЗаписьюОбъекта(ЭтотОбъект, ТекущийОбъект);
		
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Администратор = УправлениеДоступомПовтИсп.ПроверитьДоступностьРоли("Администратор");
	ПолныеПрава = УправлениеДоступомПовтИсп.ПроверитьДоступностьРоли("ПолныеПрава");
	
	ОграничитьВозможностьИзмененияРуководителя(Администратор, ПолныеПрава);
	ОграничитьВозможностьИзмененияНастроекЮридическихЛицНаправлений(Администратор, ПолныеПрава);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ДополнительныеРеквизитыКлиент.ПередЗакрытиемФормы(ЭтотОбъект, ЗавершениеРаботы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИспользоватьЮридическиеЛицаПриИзменении(Элемент)
	
	Элементы.ЮридическиеЛица.ТолькоПросмотр = НЕ ИспользоватьЮридическиеЛица;
	Элементы.ЮридическиеЛицаСделатьОсновнымЮрЛицом.Доступность = ИспользоватьЮридическиеЛица;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныеРуководительПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Ответственные.ТекущиеДанные;
	
	Если НЕ ТекущиеДанные.Руководитель Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из Объект.Ответственные Цикл
		Если Строка.Сотрудник <> ТекущиеДанные.Сотрудник И Строка.Руководитель Тогда
			Строка.Руководитель = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;	
						
КонецПроцедуры

&НаКлиенте
Процедура ЮридическиеЛицаПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.ЮридическиеЛица.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено И ТекущиеДанные.ЮридическоеЛицо = Объект.ОсновноеЮридическоеЛицо Тогда
		Объект.ОсновноеЮридическоеЛицо = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьОтветственного(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаПодбораПользователей", ЭтотОбъект);
	
	ПараметрыПодбора = Новый Структура;    
	ПараметрыПодбора.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыПодбора.Вставить("МножественныйВыбор", Истина);
	
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыПодбора, 
		ЭтотОбъект, УникальныйИдентификатор, , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьДополнительныеРеквизиты(Команда)

	ДополнительныеРеквизитыКлиент.ОткрытьФормуДополнительныхРеквизитов(Объект.Ссылка, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура СделатьОсновнымЮрЛицом(Команда)
	
	ТекущиеДанные = Элементы.ЮридическиеЛица.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ОсновноеЮридическоеЛицо = ТекущиеДанные.ЮридическоеЛицо;
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыФункции

&НаКлиенте
Процедура ОбработкаПодбораПользователей(Результат, ДополнительныеПараметры) Экспорт

	Если Результат <> Неопределено Тогда
		Для Каждого ВыбранныйПользователь Из Результат Цикл
			НовыйЭлемент = Объект.Ответственные.Добавить();
			НовыйЭлемент.Сотрудник = ВыбранныйПользователь;
		КонецЦикла;	
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОграничитьВозможностьИзмененияРуководителя(Администратор, ПолныеПрава)
	
	РуководительНаправления = ЭтоРуководительНаправления();
	Элементы.ОтветственныеРуководитель.ТолькоПросмотр = НЕ (Администратор ИЛИ ПолныеПрава ИЛИ РуководительНаправления);	
	
КонецПроцедуры

&НаСервере
Процедура ОграничитьВозможностьИзмененияНастроекЮридическихЛицНаправлений(Администратор, ПолныеПрава)
	
	ИзменениеНастроекЮридическихЛицНаправлений = УправлениеДоступомПовтИсп.ПроверитьДоступностьРоли("ИзменениеНастроекЮридическихЛицНаправлений");
	РуководительНаправления = ЭтоРуководительНаправления();
	
	ЕстьДоступ = (Администратор 
				ИЛИ ПолныеПрава 
				ИЛИ (ИзменениеНастроекЮридическихЛицНаправлений И РуководительНаправления));	
	
	Элементы.ИспользоватьЮридическиеЛица.Доступность = ЕстьДоступ;
	Элементы.ЮридическиеЛица.ТолькоПросмотр = НЕ ЕстьДоступ ИЛИ НЕ ИспользоватьЮридическиеЛица;
	Элементы.ЮридическиеЛицаСделатьОсновнымЮрЛицом.Доступность = ЕстьДоступ И ИспользоватьЮридическиеЛица;
	
КонецПроцедуры

&НаСервере
Процедура ОграничитьВозможностьИзмененияСпискаЗаказчиков(Администратор, ПолныеПрава)
	
	Элементы.СтраницаЗаказчики.Видимость = (Администратор ИЛИ ПолныеПрава);
	
КонецПроцедуры

&НаСервере
Функция ЭтоОтветственныйЗаНаправление()
	
	НайденныеСтроки = Объект.Ответственные.НайтиСтроки(Новый Структура("Сотрудник", ПараметрыСеанса.ТекущийПользователь));
	
	Возврат (НайденныеСтроки.Количество() > 0);
	
КонецФункции

&НаСервере
Функция ЭтоРуководительНаправления()
	
	ПараметрыОтбора = Новый Структура("Сотрудник, Руководитель", ПараметрыСеанса.ТекущийПользователь, Истина);
	
	Возврат Объект.Ответственные.НайтиСтроки(ПараметрыОтбора).Количество() > 0;
	
КонецФункции

#КонецОбласти
