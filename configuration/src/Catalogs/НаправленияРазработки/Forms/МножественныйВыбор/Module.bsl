///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьНастройкиФормы();
	УстановитьПометкуВариантаОтображенияСпискаНаправлений(ЭтотОбъект, ПоказыватьПомеченныеНаУдаление);
	
	ИнтерфейсПриложения.УстановитьУсловноеОформлениеСпискаДоступныхЗначений(
		ЭтотОбъект, "ДоступныеНаправления.Избранное", "ДоступныеНаправленияНаименование");
	
	ЗаполнитьСпискиНаправлений();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СтрокаПоискаИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	Если НЕ ПустаяСтрока(Текст) Тогда
		Элементы.ДоступныеНаправления.ОтборСтрок = Новый ФиксированнаяСтруктура("Наименование", Текст);
	Иначе
		Элементы.ДоступныеНаправления.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СброситьПоиск();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий таблицы "ВыбранныеСистемы"

&НаКлиенте
Процедура ВыбранныеНаправленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ВыбранныеНаправленияИсключить" Тогда
		НайденнаяСтрока = ВыбранныеНаправления.НайтиПоИдентификатору(ВыбраннаяСтрока);
		НайденнаяСтрока = ДоступныеНаправления.НайтиПоИдентификатору(НайденнаяСтрока.ИдентификаторСтрокиСписка);
		
		ИсключитьНаправление(НайденнаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий таблицы "ДоступныеСистемы"

&НаКлиенте
Процедура ДоступныеНаправленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ДоступныеНаправленияНаименование" Тогда
		НайденнаяСтрока = ДоступныеНаправления.НайтиПоИдентификатору(ВыбраннаяСтрока);
		НайденнаяСтрока.Пометка = НЕ НайденнаяСтрока.Пометка;
		
		ОбработатьИзменениеСтрокиДоступныхНаправлений(НайденнаяСтрока);
		
	ИначеЕсли Поле.Имя = "ДоступныеНаправленияИзбранное" Тогда
		НайденнаяСтрока = ДоступныеНаправления.НайтиПоИдентификатору(ВыбраннаяСтрока);
		НайденнаяСтрока.Избранное = НЕ НайденнаяСтрока.Избранное;
		
		ОбщегоНазначенияВызовСервера.ОбработатьПометкуИзбранного(НайденнаяСтрока.Направление, НайденнаяСтрока.Избранное, "Направления");
		
		ДоступныеНаправления.Сортировать("Избранное УБЫВ, Наименование");		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеНаправленияПометкаПриИзменении(Элемент)
	
	ОбработатьИзменениеСтрокиДоступныхНаправлений(Элементы.ДоступныеНаправления.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьВыбор(Команда)
	
	ВозвращаемыеНаправления = Новый СписокЗначений;
	
	Если ВыбранныеНаправления.Количество() > 0 Тогда
		Для Каждого СтрокаТаблицы Из ВыбранныеНаправления Цикл
			ВозвращаемыеНаправления.Добавить(СтрокаТаблицы.Направление, СтрокаТаблицы.Наименование);
		КонецЦикла;
		
		ВозвращаемыеНаправления.СортироватьПоПредставлению();
	КонецЕсли;	
	
	Закрыть(ВозвращаемыеНаправления);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВариантОтображенияСпискаДоступныхНаправлений(Команда)

	Если ВыбранныеНаправления.Количество() > 0 Тогда
		ТекстВопроса = "При изменении отображения списка доступных направлений список ""Выбранные направления"" будет очищен.
			|Продолжить?";
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикВопросаОбновленияСпискаНаправлений", ЭтотОбъект, Команда.Имя);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет,
			"Изменение отображения списка направлений");
	Иначе
		ОбновитьСписокДоступныхНаправлений(Команда.Имя);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПометкуДоступныхНаправлений(Команда)
	
	Пометка = (Команда.Имя = "ОтметитьВсеНаправления");
	
	Для Каждого СтрокаТаблицы Из ДоступныеНаправления Цикл
		Если СтрокаТаблицы.Пометка <> Пометка Тогда
			Если Пометка Тогда
				ДобавитьНаправление(СтрокаТаблицы);
			Иначе
				ИсключитьНаправление(СтрокаТаблицы);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПоиск(Команда)
	
	СброситьПоиск();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Управление пользователями в списках

&НаКлиенте
Процедура ДобавитьНаправление(СтрокаТаблицы)
	
	НоваяСтрокаВыбранных = ВыбранныеНаправления.Добавить();
	НоваяСтрокаВыбранных.Исключить = БиблиотекаКартинок.УдалитьЗначение;
	
	ЗаполнитьЗначенияСвойств(НоваяСтрокаВыбранных, СтрокаТаблицы, "Направление, Наименование");
	
	СтрокаТаблицы.Пометка = Истина;
	
	СтрокаТаблицы.ИдентификаторСтрокиСписка = НоваяСтрокаВыбранных.ПолучитьИдентификатор();
	НоваяСтрокаВыбранных.ИдентификаторСтрокиСписка = СтрокаТаблицы.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьНаправление(СтрокаТаблицы)
	
	НайденнаяСтрока = ВыбранныеНаправления.НайтиПоИдентификатору(СтрокаТаблицы.ИдентификаторСтрокиСписка);
	Если НайденнаяСтрока <> Неопределено Тогда
		ВыбранныеНаправления.Удалить(НайденнаяСтрока);
	КонецЕсли;	
	
	СтрокаТаблицы.Пометка = Ложь;
	СтрокаТаблицы.ИдентификаторСтрокиСписка = -1;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеСтрокиДоступныхНаправлений(СтрокаТаблицы)
	
	Если СтрокаТаблицы.Пометка = Истина Тогда
		ДобавитьНаправление(СтрокаТаблицы);	
	Иначе
		ИсключитьНаправление(СтрокаТаблицы);
	КонецЕсли;			
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочие процедуры и функции

&НаСервере
Процедура ЗаполнитьСпискиНаправлений()
	
	ВыбранныеНаправления.Очистить();
	ДоступныеНаправления.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ИзбранныеНаправления.Объект КАК Справочник.НаправленияРазработки) КАК Направление
	|ПОМЕСТИТЬ ИзбранныеНаправления
	|ИЗ
	|	РегистрСведений.ИзбранныеОбъекты КАК ИзбранныеНаправления
	|ГДЕ
	|	ИзбранныеНаправления.Владелец = &ТекущийПользователь
	|	И ИзбранныеНаправления.ТипОбъекта = ЗНАЧЕНИЕ(Перечисление.ТипыИзбранныхОбъектов.Направления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаправленияРазработки.Ссылка КАК Направление,
	|	НаправленияРазработки.Наименование КАК Наименование,
	|	НаправленияРазработки.ПометкаУдаления КАК ПометкаУдаления
	|ПОМЕСТИТЬ ТаблицаНаправленийРазработки
	|ИЗ
	|	Справочник.НаправленияРазработки КАК НаправленияРазработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК Пометка,
	|	ТаблицаНаправленийРазработки.Направление КАК Направление,
	|	ТаблицаНаправленийРазработки.Наименование КАК Наименование,
	|	ВЫБОР
	|		КОГДА ИзбранныеНаправления.Направление ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Избранное
	|ПОМЕСТИТЬ ПолнаяТаблицаНаправлений
	|ИЗ
	|	ТаблицаНаправленийРазработки КАК ТаблицаНаправленийРазработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИзбранныеНаправления КАК ИзбранныеНаправления
	|		ПО ТаблицаНаправленийРазработки.Направление = ИзбранныеНаправления.Направление
	|ГДЕ
	|	ТаблицаНаправленийРазработки.Направление В(&РазрабатываемыеНаправления)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЛОЖЬ,
	|	ТаблицаНаправленийРазработки.Направление,
	|	ТаблицаНаправленийРазработки.Наименование,
	|	ВЫБОР
	|		КОГДА ИзбранныеНаправления.Направление ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|ИЗ
	|	ТаблицаНаправленийРазработки КАК ТаблицаНаправленийРазработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИзбранныеНаправления КАК ИзбранныеНаправления
	|		ПО ТаблицаНаправленийРазработки.Направление = ИзбранныеНаправления.Направление
	|ГДЕ
	|	(&ПоказыватьПомеченныеНаУдаление
	|			ИЛИ ТаблицаНаправленийРазработки.ПометкаУдаления = ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ПолнаяТаблицаНаправлений.Пометка) КАК Пометка,
	|	ПолнаяТаблицаНаправлений.Направление КАК Направление,
	|	ПолнаяТаблицаНаправлений.Наименование КАК Наименование,
	|	МАКСИМУМ(ПолнаяТаблицаНаправлений.Избранное) КАК Избранное,
	|	МАКСИМУМ(-1) КАК ИдентификаторСтрокиСписка
	|ИЗ
	|	ПолнаяТаблицаНаправлений КАК ПолнаяТаблицаНаправлений
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолнаяТаблицаНаправлений.Направление,
	|	ПолнаяТаблицаНаправлений.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Избранное УБЫВ,
	|	Наименование";
	
	Запрос.УстановитьПараметр("ПоказыватьПомеченныеНаУдаление", ПоказыватьПомеченныеНаУдаление);
	Запрос.УстановитьПараметр("РазрабатываемыеНаправления", Параметры.ОтмеченныеНаправления);
	Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			// Заполнение общей таблицы систем
			НоваяСтрокаДоступных = ДоступныеНаправления.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДоступных, Выборка, "Пометка, Направление, Наименование, Избранное, ИдентификаторСтрокиСписка");
			
			// Заполнение таблицы уже выбранны систем
			Если Выборка.Пометка Тогда
				НоваяСтрокаВыбранных = ВыбранныеНаправления.Добавить();
				НоваяСтрокаВыбранных.Исключить = БиблиотекаКартинок.УдалитьЗначение;
				
				НоваяСтрокаВыбранных.ИдентификаторСтрокиСписка = НоваяСтрокаДоступных.ПолучитьИдентификатор();
				НоваяСтрокаДоступных.ИдентификаторСтрокиСписка = НоваяСтрокаВыбранных.ПолучитьИдентификатор();
				
				ЗаполнитьЗначенияСвойств(НоваяСтрокаВыбранных, Выборка, "Направление, Наименование");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВариантаОтображенияСпискаНаправлений()
	
	ЗаполнитьСпискиНаправлений();
	СохранитьНастройкиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокДоступныхНаправлений(ИмяКоманды)
	
	ПоказыватьПомеченныеНаУдаление = (ИмяКоманды = "ПоказатьВсеНаправления");
	
	УстановитьПометкуВариантаОтображенияСпискаНаправлений(ЭтотОбъект, ПоказыватьПомеченныеНаУдаление);
	ПриИзмененииВариантаОтображенияСпискаНаправлений();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбработатьПометкуИзбранного(Знач Направление, Знач Добавление)
	
	РегистрыСведений.ИзбранныеОбъекты.ИзменитьЗапись(Направление, Перечисления.ТипыИзбранныхОбъектов.Направления, Добавление);
	
	// Отслеживание использования избранного пользователями
	РегистрыСведений.ОтслеживаниеИспользованияФункциональности.Добавить("Избранное.НаправленияРазработки");	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВопросаОбновленияСпискаНаправлений(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОбновитьСписокДоступныхНаправлений(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНастройкиФормы()
	
	ЗначениеНастройки = ХранилищеНастроекДанныхФорм.Загрузить("Справочник.НаправленияРазработки.Форма.МножественныйВыбор", 
		"ПоказыватьПомеченныеНаУдаление", , ИмяПользователя());
	
	Если ЗначениеНастройки = Неопределено Тогда
		ПоказыватьПомеченныеНаУдаление = Ложь;
	Иначе
		ПоказыватьПомеченныеНаУдаление = ЗначениеНастройки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьПоиск()
	
	// Очистка отбора, очистка строки поиска и установка фокуса на строку поиска
	Элементы.ДоступныеНаправления.ОтборСтрок = Неопределено;
	
	СтрокаПоиска = "";
	
	ТекущийЭлемент = Элементы.СтрокаПоиска;	
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиФормы()
	
	ХранилищеНастроекДанныхФорм.Сохранить("Справочник.НаправленияРазработки.Форма.МножественныйВыбор", 
		"ПоказыватьПомеченныеНаУдаление", ПоказыватьПомеченныеНаУдаление, , ИмяПользователя());
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПометкуВариантаОтображенияСпискаНаправлений(Форма, ПоказыватьУдаленные)
	
	Форма.Элементы.ПоказатьВсеНаправления.Пометка = ПоказыватьУдаленные;
	Форма.Элементы.ПоказатьАктивныеНаправления.Пометка = НЕ ПоказыватьУдаленные;	
	
КонецПроцедуры

#КонецОбласти
