///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

// Использование юридических лиц Направлением до записи 
Перем СтароеЗначениеИспользованияЮридическихЛиц; 

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// ДЕЙСТВИЯ, СВЯЗАННЫЕ С ОБРАЩЕНИЕМ К "СТАРЫМ" ЗНАЧЕНИЯМ РЕКВИЗИТОВ ОБЪЕКТА
	
	// Значение использования юр лиц до записи, если изменяется 
	// добавим записи в регистр ИспользованиеЮридическихЛицНаправлений 
	СтароеЗначениеИспользованияЮридическихЛиц = РегистрыСведений.ИспользованиеЮридическихЛицНаправлений.Использует(Ссылка);
 
	// ДЕЙСТВИЯ, СВЯЗАННЫЕ С ПРОВЕРКАМИ И ЗАПОЛНЕНИЕМ ЗНАЧЕНИЙ РЕКВИЗИТОВ ОБЪЕКТА
	
	ОбщегоНазначения.ОчисткаДублейТабличнойЧасти(Ответственные, "Сотрудник", "Руководитель");
	ОбщегоНазначения.ОчисткаДублейТабличнойЧасти(ЮридическиеЛица, "ЮридическоеЛицо");
	ОбщегоНазначения.ОчисткаДублейТабличнойЧасти(Заказчики, "Заказчик");
	
	// Получение старого(текущего) руководителя направления перед записью, для 
	// установки роли "Заказчик" в регистре РолиПользователейПоНаправлениям и
	// возможного снятия этой роли в конфигураторе в момент записи.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РолиПользователейПоНаправлениям.Пользователь КАК Руководитель
	|ИЗ
	|	РегистрСведений.РолиПользователейПоНаправлениям КАК РолиПользователейПоНаправлениям
	|ГДЕ
	|	РолиПользователейПоНаправлениям.НаправлениеРазработки = &НаправлениеРазработки
	|	И РолиПользователейПоНаправлениям.Роль = ЗНАЧЕНИЕ(Справочник.РолиПользователей.РуководительНаправления)";
	
	Запрос.УстановитьПараметр("НаправлениеРазработки", Ссылка);	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ТекущийРуководитель = Выборка.Руководитель;
	Иначе
		ТекущийРуководитель = Справочники.Пользователи.ПустаяСсылка();
	КонецЕсли;	
	
	ДополнительныеСвойства.Вставить("ТекущийРуководитель", ТекущийРуководитель);
	
	ПроверитьИзменениеСоставаЮридическихЛиц();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Нужно проверить, является ли уже данный пользователь руководителем по данному направлению.
	// Если является, то не нужно делать повторную запись в регистр. В противном случае добавляем
	// в регистр сведений РолиПользователейПоНаправлениям запись, что пользователь является
	// руководителем направления.
	
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	// Поиск руководителя в ТЧ справочника 
	СтрокаРуководителя = Ответственные.Найти(Истина, "Руководитель"); 
	НовыйРуководитель = СтрокаРуководителя.Сотрудник;	
	ТекущийРуководитель = ДополнительныеСвойства.ТекущийРуководитель;
	
	Если НовыйРуководитель <> ТекущийРуководитель Тогда
		МенеджерЗаписи = РегистрыСведений.РолиПользователейПоНаправлениям.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.НаправлениеРазработки = Ссылка;
		МенеджерЗаписи.Пользователь = ТекущийРуководитель;
		МенеджерЗаписи.Прочитать();
		
		// Проверим, есть ли в регистре сведений записи по руководителю направления
		Если МенеджерЗаписи.Выбран() Тогда
			
			// При смене руководителя устанавливаем старому руководителю роль "Заказчик"
			МенеджерЗаписи.Роль = Справочники.РолиПользователей.Заказчик;
			МенеджерЗаписи.Записать();
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.РолиПользователейПоНаправлениям.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НаправлениеРазработки.Установить(Ссылка);
		НаборЗаписей.Отбор.Пользователь.Установить(НовыйРуководитель);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.НаправлениеРазработки = Ссылка;
		НоваяЗапись.Пользователь = НовыйРуководитель;
		НоваяЗапись.Роль = Справочники.РолиПользователей.РуководительНаправления;
		НоваяЗапись.АвторИзменения = ТекущийПользователь;
		НоваяЗапись.ДатаИзменения = ТекущаяДатаСеанса();	
				
		НаборЗаписей.Записать();
		
		// Снятие или установка роли РуководительНаправления в конфигураторе
		Справочники.НаправленияРазработки.ОбработатьИзменениеРуководителяНаправления(ТекущийРуководитель, 
			НовыйРуководитель, Ссылка);
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ИспользоватьЮридическиеЛица") 
		И СтароеЗначениеИспользованияЮридическихЛиц <> ДополнительныеСвойства.ИспользоватьЮридическиеЛица Тогда
		
		РегистрыСведений.ИспользованиеЮридическихЛицНаправлений.ДобавитьЗапись(Ссылка,
			ДополнительныеСвойства.ИспользоватьЮридическиеЛица);
	КонецЕсли;
	
	ОбработатьИзменениеСоставаЮридическихЛиц();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработатьИзменениеСоставаЮридическихЛиц()
	
	Перем ТаблицаЗначений;
	
	Если ДополнительныеСвойства.Свойство("ПользователиДляУдаленияНастроек", ТаблицаЗначений) 
		И ТаблицаЗначений.Количество() > 0 Тогда
		
		Для Каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
			РегистрыСведений.НастройкиПользователя.УдалитьНастройку(СтрокаТаблицы.Пользователь, СтрокаТаблицы.ВидНастройки);
		КонецЦикла;
		
		ОповеститьОбИзмененииНастройкиЮридическогоЛица(ТаблицаЗначений);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОповеститьОбИзмененииНастройкиЮридическогоЛица(Знач ТаблицаЗначений)
	
	Если ТаблицаЗначений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВнешниеДанные.Пользователь КАК Пользователь,
	|	ВнешниеДанные.ЮридическоеЛицо КАК ЮридическоеЛицо
	|ПОМЕСТИТЬ ДанныеОповещения
	|ИЗ
	|	&ВнешниеДанные КАК ВнешниеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Пользователи.Почта КАК Почта,
	|	ДанныеОповещения.ЮридическоеЛицо КАК ЮридическоеЛицо
	|ИЗ
	|	ДанныеОповещения КАК ДанныеОповещения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ДанныеОповещения.Пользователь = Пользователи.Ссылка
	|ГДЕ
	|	НЕ Пользователи.Недействителен
	|	И НЕ Пользователи.ПометкаУдаления
	|	И НЕ Пользователи.ОтключитьВсеОповещения
	|	И Пользователи.Почта <> """"
	|ИТОГИ ПО
	|	ЮридическоеЛицо";
	
	Запрос.УстановитьПараметр("ВнешниеДанные", ТаблицаЗначений);
	
	ШаблоныПисьма = РегистрыСведений.ОчередьОтправкиЭлектронныхПисем.ШаблоныЭлектронногоПисьма();
	
	НавигационнаяСсылка = СтрШаблон("<!-- sdms_link_prefix -->#e1cib/app/%1", Метаданные.Обработки.НастройкиПользователя.ПолноеИмя());
	
	СсылкаНаНастройки = СтрЗаменить(ШаблоныПисьма.АктивнаяСсылка, "<!-- link -->", НавигационнаяСсылка);
	СсылкаНаНастройки = СтрЗаменить(СсылкаНаНастройки, "<!-- title_link -->", "настройки пользователя");

	ТекстШаблона = 
	"В связи с удалением <b>&#34;%1&#34;</b> из списка юридических лиц направления <b>&#34;%2&#34;</b>,
	|значение настроек <b>&#34;Юр. лицо&#34;</b> группы <b>&#34;Заполнение документов&#34;</b> было сброшено.
	|Перейти в %3.";
	
	ДанныеДляОповещения = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого Строка Из ДанныеДляОповещения.Строки Цикл
		
		ЧастиПисьма = Новый Массив;
		
		ЮридическоеЛицо = Строка.ЮридическоеЛицо;
	
		ТекстШаблона = СтрШаблон(ТекстШаблона, ЮридическоеЛицо, Наименование, СсылкаНаНастройки);
		
		ШаблонПисьма = СтрЗаменить(ШаблоныПисьма.БлокОсновногоТекста, "<!-- content -->", ТекстШаблона);
		ШаблонПисьма = СтрЗаменить(ШаблонПисьма, "<!-- font_size -->", "14px");
		
		ЧастиПисьма.Добавить(ШаблонПисьма);
		
		ЧастиПисьма.Добавить(ШаблоныПисьма.РазделительнаяЛиния);
		
		ЧастиПисьма.Добавить(ШаблоныПисьма.ПодвалПисьма);
		
		ТекстОповещения = СтрСоединить(ЧастиПисьма, Символы.ПС);
		
		Получатели = Строка.Строки.ВыгрузитьКолонку("Почта");
		
		РегистрыСведений.ОчередьОтправкиЭлектронныхПисем.Добавить(Получатели, "Изменение настроек филиала", ТекстОповещения,
			Перечисления.ВажностьСообщения.Высокая);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьИзменениеСоставаЮридическихЛиц()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВнешниеДанные.ЮридическоеЛицо КАК ЮридическоеЛицо
	|ПОМЕСТИТЬ ТекущиеДанные
	|ИЗ
	|	&ВнешниеДанные КАК ВнешниеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыНастроекПользователя.НаправлениеДляЗаполненияЗаявки) КАК НастройкаНаправления,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыНастроекПользователя.ЮрЛицоДляЗаполненияЗаявки) КАК НастройкаЮрЛица
	|ПОМЕСТИТЬ ПроверяемыеНастройки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыНастроекПользователя.НаправлениеДляЗаполненияВЗ),
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыНастроекПользователя.ЮрЛицоДляЗаполненияВЗ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЮридическиеЛица.ЮридическоеЛицо КАК ЮридическоеЛицо
	|ПОМЕСТИТЬ ПредыдущиеДанные
	|ИЗ
	|	Справочник.НаправленияРазработки.ЮридическиеЛица КАК ЮридическиеЛица
	|ГДЕ
	|	ЮридическиеЛица.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредыдущиеДанные.ЮридическоеЛицо КАК ЮридическоеЛицо
	|ПОМЕСТИТЬ УдаленныеЮридическиеЛица
	|ИЗ
	|	ПредыдущиеДанные КАК ПредыдущиеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТекущиеДанные КАК ТекущиеДанные
	|		ПО ПредыдущиеДанные.ЮридическоеЛицо = ТекущиеДанные.ЮридическоеЛицо
	|ГДЕ
	|	ТекущиеДанные.ЮридическоеЛицо ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиПользователяНаправлениеЗаявки.Пользователь КАК Пользователь,
	|	НастройкиПользователяЮрЛицоЗаявки.Настройка КАК ВидНастройки,
	|	УдаленныеЮридическиеЛица.ЮридическоеЛицо КАК ЮридическоеЛицо
	|ИЗ
	|	ПроверяемыеНастройки КАК ПроверяемыеНастройки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПользователя КАК НастройкиПользователяНаправлениеЗаявки
	|		ПО (НастройкиПользователяНаправлениеЗаявки.Настройка = ПроверяемыеНастройки.НастройкаНаправления)
	|			И ((ВЫРАЗИТЬ(НастройкиПользователяНаправлениеЗаявки.Значение КАК Справочник.НаправленияРазработки)) = &Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПользователя КАК НастройкиПользователяЮрЛицоЗаявки
	|		ПО (НастройкиПользователяНаправлениеЗаявки.Пользователь = НастройкиПользователяЮрЛицоЗаявки.Пользователь)
	|			И (НастройкиПользователяЮрЛицоЗаявки.Настройка = ПроверяемыеНастройки.НастройкаЮрЛица)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УдаленныеЮридическиеЛица КАК УдаленныеЮридическиеЛица
	|		ПО ((ВЫРАЗИТЬ(НастройкиПользователяЮрЛицоЗаявки.Значение КАК Справочник.ЮридическиеЛица)) = УдаленныеЮридическиеЛица.ЮридическоеЛицо)";
	
	Запрос.УстановитьПараметр("ВнешниеДанные", ЮридическиеЛица.Выгрузить());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
	
	ДополнительныеСвойства.Вставить("ПользователиДляУдаленияНастроек", ТаблицаЗначений);
	
КонецПроцедуры

#КонецОбласти
