///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Ключ.Пустая() И Объект.Автор <> ПараметрыСеанса.ТекущийПользователь Тогда
		ТолькоПросмотр = НЕ РазрешеноИзменениеШаблона(Объект.Ссылка);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура АвторНажатие(Элемент, СтандартнаяОбработка)
	
	ИнтерфейсПриложенияКлиент.ОткрытьИнформациюОПользователе(ЭтотОбъект, Объект.Автор, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступРазрешенОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Для Каждого Строка Из Объект.ДоступРазрешен Цикл
		Если Строка.Объект = ВыбранноеЗначение Тогда
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	Объект.ДоступРазрешен.Добавить().Объект = ВыбранноеЗначение;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ДобавитьПользователя(Команда)
	
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", , Элементы.ДоступРазрешен);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФилиал(Команда)
	
	ВыбранныеФилиалы = ПолучитьВыбранныеФилиалы();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФилиалов", ЭтотОбъект);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ITСтруктура", Истина);
	ПараметрыОткрытия.Вставить("ВыбранныеФилиалы", ВыбранныеФилиалы);
	ПараметрыОткрытия.Вставить("ВключаяКоманды", Ложь);
	
	ОткрытьФорму("Справочник.Филиалы.Форма.МножественныйВыбор", ПараметрыОткрытия, ЭтотОбъект, , , ,
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьВыборФилиалов(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		УдаляемыеСтроки = Новый Массив;
		
		Для Каждого Строка Из Объект.ДоступРазрешен Цикл
			Если ТипЗнч(Строка.Объект) = Тип("СправочникСсылка.Филиалы") Тогда
				ЭлементСписка = Результат.НайтиПоЗначению(Строка.Объект);
				
				Если ЭлементСписка = Неопределено Тогда
					УдаляемыеСтроки.Добавить(Строка);
				Иначе
					Результат.Удалить(ЭлементСписка);
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого ЭлементСписка Из Результат Цикл
			Объект.ДоступРазрешен.Добавить().Объект = ЭлементСписка.Значение;
		КонецЦикла;
		
		Для Каждого Строка Из УдаляемыеСтроки Цикл
			Объект.ДоступРазрешен.Удалить(Строка);
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьВыбранныеФилиалы()
	
	ВыбранныеФилиалы = Новый Массив;
	
	Для Каждого Строка Из Объект.ДоступРазрешен Цикл
		Если ТипЗнч(Строка.Объект) = Тип("СправочникСсылка.Филиалы") Тогда
			ВыбранныеФилиалы.Добавить(Строка.Объект);
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат ВыбранныеФилиалы;
	
КонецФункции

&НаСервереБезКонтекста
Функция РазрешеноИзменениеШаблона(Знач Шаблон)
	
	Результат = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ШаблоныЧекЛистаДоступРазрешен.Объект КАК Объект,
	|	ШаблоныЧекЛистаДоступРазрешен.Редактирование КАК Редактирование
	|ПОМЕСТИТЬ ДоступностьШаблона
	|ИЗ
	|	Справочник.ШаблоныЧекЛиста.ДоступРазрешен КАК ШаблоныЧекЛистаДоступРазрешен
	|ГДЕ
	|	ШаблоныЧекЛистаДоступРазрешен.Ссылка = &Шаблон
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоступностьШаблона.Объект КАК Объект,
	|	ДоступностьШаблона.Редактирование КАК Редактирование,
	|	0 КАК Приоритет
	|ПОМЕСТИТЬ ПраваПользователя
	|ИЗ
	|	ДоступностьШаблона КАК ДоступностьШаблона
	|ГДЕ
	|	(ВЫРАЗИТЬ(ДоступностьШаблона.Объект КАК Справочник.Пользователи)) = &Пользователь
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Пользователи.Ссылка,
	|	ДоступностьШаблона.Редактирование,
	|	1
	|ИЗ
	|	ДоступностьШаблона КАК ДоступностьШаблона
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ((ВЫРАЗИТЬ(ДоступностьШаблона.Объект КАК Справочник.Филиалы)) = Пользователи.Филиал)
	|ГДЕ
	|	Пользователи.Ссылка = &Пользователь
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПраваПользователя.Объект КАК Объект,
	|	МИНИМУМ(ПраваПользователя.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ ПриоритетноеПраво
	|ИЗ
	|	ПраваПользователя КАК ПраваПользователя
	|
	|СГРУППИРОВАТЬ ПО
	|	ПраваПользователя.Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПраваПользователя.Редактирование КАК Редактирование
	|ИЗ
	|	ПриоритетноеПраво КАК ПриоритетноеПраво
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПраваПользователя КАК ПраваПользователя
	|		ПО ПриоритетноеПраво.Объект = ПраваПользователя.Объект
	|			И ПриоритетноеПраво.Приоритет = ПраваПользователя.Приоритет";
	
	Запрос.УстановитьПараметр("Шаблон", Шаблон);
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Результат = Выборка.Редактирование;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
