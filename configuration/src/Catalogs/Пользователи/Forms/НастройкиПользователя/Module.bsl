///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбъявлениеПеременных

&НаКлиенте
Перем НастройкиОповещенийМодифицированы;

&НаКлиенте
Перем НастройкиОбъектовОповещенияИзменены;

&НаКлиенте
Перем НастройкиОтправкиДайджестаПоПроектамМодифицированы;

&НаКлиенте
Перем НастройкиГруппировкиСообщенийИзменены;

&НаКлиенте
Перем НастройкиОтправлятьЗадачиНаТестированииИзменены;

&НаКлиенте
Перем НастройкиВремяНапоминанияОТрудозатратахИзменены; 

&НаКлиенте
Перем НастройкиСпособаОповещений;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьТаблицуНастроекНаСервере();
	ЗаполнитьДеревоНаправлениеСистема();
	ЗаполнитьЭлементыУправленияОтправкойДайджеста();
	ЗаполнитьЭлементыУправленияГруппировкойСообщений();
	ЗаполнитьЭлементыУправленияДополнительно();  
	ЗаполнитьЭлементыСпособаУведомления();   
	
	РегистрыСведений.ОтслеживаниеИспользованияФункциональности.Открытиеформы(ИмяФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИзменитьДоступностьДетальныхНастроек();
	ОбработатьИзменениеОтправкиДайджеста();
	ОбновитьЭлементыГруппировкиСообщений();
	
	НастройкиОповещенийМодифицированы = Ложь;
	НастройкиОбъектовОповещенияИзменены = Ложь;
	НастройкиОтправкиДайджестаПоПроектамМодифицированы = Ложь;
	НастройкиГруппировкиСообщенийИзменены = Ложь;
	НастройкиОтправлятьЗадачиНаТестированииИзменены = Ложь;
	НастройкиВремяНапоминанияОТрудозатратахИзменены = Ложь; 
	НастройкиСпособаОповещений = Ложь;
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ЗавершениеРаботы Тогда
		Если НастройкиОповещенийМодифицированы
			ИЛИ НастройкиОбъектовОповещенияИзменены
			ИЛИ НастройкиОтправкиДайджестаПоПроектамМодифицированы
			ИЛИ НастройкиГруппировкиСообщенийИзменены Тогда
			
			Отказ = Истина;
			СтандартнаяОбработка = Ложь;
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВопросСохраненияНастроек", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещения, "Есть несохраненные настройки, сохранить?", РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВремяНапоминанияОТрудозатратахПриИзменении(Элемент)
	
	НастройкиВремяНапоминанияОТрудозатратахИзменены = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппироватьСообщенияПриИзменении(Элемент)
	
	НастройкиГруппировкиСообщенийИзменены = Истина;
	ОбновитьЭлементыГруппировкиСообщений();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкаНаправлениеСистемаПриИзменении(Элемент)
	
	ЗаполнитьДеревоНаправлениеСистема();	
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкаСообщенийПриИзменении(Элемент)
	
	НастройкиГруппировкиСообщенийИзменены = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппироватьПоКатегориямПриИзменении(Элемент)
	
	НастройкиГруппировкиСообщенийИзменены = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНаправленийСистемОповещенияМеткаПубликацияЗадачПриИзменении(Элемент)
	
	МеткаДереваПриИзменении(Элементы.ДеревоНаправленийСистемОповещения, "МеткаПубликацияЗадач");
	НастройкиОбъектовОповещенияИзменены = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНаправленийСистемОповещенияМеткаСозданиеЗаявокПриИзменении(Элемент)
	
	МеткаДереваПриИзменении(Элементы.ДеревоНаправленийСистемОповещения, "МеткаСозданиеЗаявок");
	НастройкиОбъектовОповещенияИзменены = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПочтаПриИзменении(Элемент)
	
	ВыбратьОдинСпособОповещения("ОповещениеЧерезПочту"); 

КонецПроцедуры

&НаКлиенте
Процедура ОповещениеМессенджерПриИзменении(Элемент)
	
	ВыбратьОдинСпособОповещения("ОповещениеЧерезМессенджер");
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеSDMSПриИзменении(Элемент)
	
	ВыбратьОдинСпособОповещения("ОповещениеЧерезSDMS");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьОповещенияПриИзменении(Элемент)
	
	ИзменитьДоступностьДетальныхНастроек();
	НастройкиОповещенийМодифицированы = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправлятьЗадачиНаТестированииПриИзменении(Элемент)
	
	НастройкиОтправлятьЗадачиНаТестированииИзменены = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииНастроекОтправкиДайджеста(Элемент)
	
	НастройкиОтправкиДайджестаПоПроектамМодифицированы = Истина;
	
	Если Элемент.Имя = "ОтправлятьДайджестПоПроектам" Тогда
		ОбработатьИзменениеОтправкиДайджеста();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДетальныеНастройкиПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДетальныеНастройкиПриИзменении(Элемент)
	
	НастройкиОповещенийМодифицированы = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастройкиПоУмолчанию(Команда)
	
	НастройкиПоУмолчаниюНаСервере();
	
	ВыбратьОдинСпособОповещения(ОповещениеЧерезМессенджер);

	НастройкиОповещенийМодифицированы = Истина;
	НастройкиГруппировкиСообщенийИзменены = Истина;
	НастройкиОтправлятьЗадачиНаТестированииИзменены = Истина;
	НастройкиВремяНапоминанияОТрудозатратахИзменены = Истина; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОсновнуюСправку(Команда)
	
	ЭтотОбъект.ОткрытьСправкуФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	ИзменитьВсеМетки(1, ДеревоНаправленийСистемОповещения);
	НастройкиОбъектовОповещенияИзменены = Истина;
	 
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	
	СохранитьНастройкиНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьВсе(Команда)
	
	ИзменитьВсеМетки(0, ДеревоНаправленийСистемОповещения);
	НастройкиОбъектовОповещенияИзменены = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьОдинСпособОповещения(ВыбранноеОповещение)
	
	ОповещениеЧерезМессенджер = Ложь;
	ОповещениеЧерезSDMS = Ложь;
	ОповещениеЧерезПочту = Ложь; 
	
	ЭтотОбъект[ВыбранноеОповещение] = Истина;  
	НастройкиСпособаОповещений = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВсеМетки(НужнаяМетка, ДеревоНаправлений)
	
	ИмяКолонки = СтрЗаменить(Элементы.ДеревоНаправленийСистемОповещения.ТекущийЭлемент.Имя, "ДеревоНаправленийСистемОповещения", "");
	
	Если НЕ СтрНачинаетсяС(ИмяКолонки, "Метка") Тогда
		Возврат;
	КонецЕсли;
	
	Дерево = ДеревоНаправлений.ПолучитьЭлементы();
	Для Каждого СтрокаДерева Из Дерево Цикл
		СтрокаДерева[ИмяКолонки] = НужнаяМетка;
		Подстроки = СтрокаДерева.ПолучитьЭлементы();
		Для Каждого Подстрока Из Подстроки Цикл
			Подстрока[ИмяКолонки] = НужнаяМетка;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДоступностьДетальныхНастроек()
	
	Элементы.КатегорииНастроекПользователя.Доступность = НЕ ОтключитьОповещения;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНастроекНаСервере()
	
	ДоступныеКатегории = Перечисления.КатегорииСообщенийПользователя.КатегорииОповещенияДляФормыНастройкиОповещений();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоступныеКатегории.КатегорияОповещения КАК Категория,
	|	ДоступныеКатегории.Наименование КАК Наименование,
	|	ДоступныеКатегории.Подсказка КАК Подсказка
	|ПОМЕСТИТЬ Категории
	|ИЗ
	|	&ДоступныеКатегории КАК ДоступныеКатегории
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Категории.Категория КАК КатегорияОповещения,
	|	Категории.Наименование КАК Наименование,
	|	Категории.Подсказка КАК Подсказка,
	|	НастройкиОповещений.СистемаВзаимодействия КАК СистемаВзаимодействия,
	|	НастройкиОповещений.ЭлектроннаяПочта КАК ЭлектроннаяПочта,
	|	НастройкиОповещений.ОповещениеВРабочийСтол КАК ОповещениеВРабочийСтол,
	|	НастройкиОповещений.ПериодОтправки КАК ПериодОтправки
	|ИЗ
	|	Категории КАК Категории
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи.НастройкиОповещений КАК НастройкиОповещений
	|		ПО Категории.Категория = НастройкиОповещений.КатегорияОповещения
	|			И НастройкиОповещений.Ссылка = &Пользователь";
		
	Запрос.УстановитьПараметр("ДоступныеКатегории", ДоступныеКатегории);
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаДетальныеНастройки.Добавить(), Выборка);
	КонецЦикла;
	
	ОтключитьОповещения = ПараметрыСеанса.ТекущийПользователь.ОтключитьВсеОповещения;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоНаправлениеСистема()
	
	ПостроительОбщий = Новый ПостроительЗапроса;
	
	ПостроительОбщий.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НаправленияРазработки.Ссылка КАК Направление,
	|	СистемыУчета.Ссылка КАК Система,
	|	НаправленияРазработки.Наименование КАК НаименованиеНаправления,
	|	СистемыУчета.Наименование КАК НаименованиеСистемы
	|ПОМЕСТИТЬ СписокНаправленийИСистем
	|ИЗ
	|	Справочник.НаправленияРазработки КАК НаправленияРазработки,
	|	Справочник.СистемыУчета КАК СистемыУчета
	|ГДЕ
	|	НЕ НаправленияРазработки.ПометкаУдаления
	|	И НЕ СистемыУчета.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыЗаказчиковНаправлений.Ссылка КАК Ссылка,
	|	ГруппыЗаказчиковНаправлений.Наименование КАК Наименование,
	|	ЕСТЬNULL(ГруппыЗаказчиковНаправленийНаправления.Направление, ЗНАЧЕНИЕ(Справочник.НаправленияРазработки.ПустаяСсылка)) КАК Направление,
	|	ЕСТЬNULL(ГруппыЗаказчиковНаправленийСистемы.Система, ЗНАЧЕНИЕ(Справочник.СистемыУчета.ПустаяСсылка)) КАК Система
	|ПОМЕСТИТЬ ГруппыЗаказчиков
	|ИЗ
	|	Справочник.ГруппыЗаказчиковНаправлений КАК ГруппыЗаказчиковНаправлений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыЗаказчиковНаправлений.Направления КАК ГруппыЗаказчиковНаправленийНаправления
	|		ПО (ГруппыЗаказчиковНаправленийНаправления.Ссылка = ГруппыЗаказчиковНаправлений.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыЗаказчиковНаправлений.Системы КАК ГруппыЗаказчиковНаправленийСистемы
	|		ПО (ГруппыЗаказчиковНаправленийСистемы.Ссылка = ГруппыЗаказчиковНаправлений.Ссылка)
	|ГДЕ
	|	НЕ ГруппыЗаказчиковНаправлений.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокНаправленийИСистем.Направление КАК Направление,
	|	СписокНаправленийИСистем.НаименованиеНаправления КАК НаименованиеНаправления,
	|	СписокНаправленийИСистем.Система КАК Система,
	|	СписокНаправленийИСистем.НаименованиеСистемы КАК НаименованиеСистемы,
	|	ЕСТЬNULL(ГруппыЗаказчиков.Ссылка, ЗНАЧЕНИЕ(Справочник.ГруппыЗаказчиковНаправлений.ПустаяСсылка)) КАК ГруппаЗаказчиков,
	|	ЕСТЬNULL(ГруппыЗаказчиков.Наименование, """") КАК НаименованиеГруппыЗаказчиков
	|ПОМЕСТИТЬ НаправлениеСистемаГруппаЗаказчиков
	|ИЗ
	|	СписокНаправленийИСистем КАК СписокНаправленийИСистем
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГруппыЗаказчиков КАК ГруппыЗаказчиков
	|		ПО СписокНаправленийИСистем.Направление = ГруппыЗаказчиков.Направление
	|			И СписокНаправленийИСистем.Система = ГруппыЗаказчиков.Система
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокНаправленийИСистем.Направление,
	|	СписокНаправленийИСистем.НаименованиеНаправления,
	|	СписокНаправленийИСистем.Система,
	|	СписокНаправленийИСистем.НаименованиеСистемы,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыЗаказчиковНаправлений.ПрочиеЗаказчики),
	|	""Прочие заказчики""
	|ИЗ
	|	СписокНаправленийИСистем КАК СписокНаправленийИСистем
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ГруппыЗаказчиков КАК ГруппыЗаказчиков
	|		ПО СписокНаправленийИСистем.Направление = ГруппыЗаказчиков.Направление
	|			И СписокНаправленийИСистем.Система = ГруппыЗаказчиков.Система
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокНаправленийИСистем.Направление,
	|	СписокНаправленийИСистем.Система,
	|	СписокНаправленийИСистем.НаименованиеНаправления,
	|	СписокНаправленийИСистем.НаименованиеСистемы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиУведомленийПользователей.Направление КАК Направление,
	|	НастройкиУведомленийПользователей.Система КАК Система,
	|	НастройкиУведомленийПользователей.ГруппаЗаказчиков КАК ГруппаЗаказчиков,
	|	СУММА(ВЫБОР
	|			КОГДА НастройкиУведомленийПользователей.ВидУведомления = &ВидУведомленияПубликацияЗадач
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК МеткаПубликацияЗадач,
	|	СУММА(ВЫБОР
	|			КОГДА НастройкиУведомленийПользователей.ВидУведомления = &ВидУведомленияСозданиеЗаявок
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК МеткаСозданиеЗаявок
	|ПОМЕСТИТЬ НастройкиУведомлений
	|ИЗ
	|	РегистрСведений.НастройкиУведомленийПользователей КАК НастройкиУведомленийПользователей
	|ГДЕ
	|	НастройкиУведомленийПользователей.Пользователь = &Пользователь
	|
	|СГРУППИРОВАТЬ ПО
	|	НастройкиУведомленийПользователей.Направление,
	|	НастройкиУведомленийПользователей.Система,
	|	НастройкиУведомленийПользователей.ГруппаЗаказчиков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаправлениеСистемаГруппаЗаказчиков.Направление КАК Направление,
	|	НаправлениеСистемаГруппаЗаказчиков.Система КАК Система,
	|	НаправлениеСистемаГруппаЗаказчиков.ГруппаЗаказчиков КАК ГруппаЗаказчиков,
	|	ВЫБОР
	|		КОГДА НастройкиУведомлений.МеткаПубликацияЗадач ЕСТЬ НЕ NULL 
	|			ТОГДА НастройкиУведомлений.МеткаПубликацияЗадач
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МеткаПубликацияЗадач,
	|	ВЫБОР
	|		КОГДА НастройкиУведомлений.МеткаСозданиеЗаявок ЕСТЬ НЕ NULL 
	|			ТОГДА НастройкиУведомлений.МеткаСозданиеЗаявок
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МеткаСозданиеЗаявок,
	|	НаправлениеСистемаГруппаЗаказчиков.НаименованиеНаправления КАК НаименованиеНаправления,
	|	НаправлениеСистемаГруппаЗаказчиков.НаименованиеСистемы КАК НаименованиеСистемы,
	|	НаправлениеСистемаГруппаЗаказчиков.НаименованиеГруппыЗаказчиков КАК НаименованиеГруппыЗаказчиков
	|ИЗ
	|	НаправлениеСистемаГруппаЗаказчиков КАК НаправлениеСистемаГруппаЗаказчиков
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиУведомлений КАК НастройкиУведомлений
	|		ПО НаправлениеСистемаГруппаЗаказчиков.Направление = НастройкиУведомлений.Направление
	|			И НаправлениеСистемаГруппаЗаказчиков.Система = НастройкиУведомлений.Система
	|			И НаправлениеСистемаГруппаЗаказчиков.ГруппаЗаказчиков = НастройкиУведомлений.ГруппаЗаказчиков
	|
	|УПОРЯДОЧИТЬ ПО
	|	НаправлениеСистемаГруппаЗаказчиков.НаименованиеНаправления,
	|	НаправлениеСистемаГруппаЗаказчиков.НаименованиеСистемы,
	|	НаправлениеСистемаГруппаЗаказчиков.НаименованиеГруппыЗаказчиков";
		
	ПостроительОбщий.Параметры.Вставить("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	ПостроительОбщий.Параметры.Вставить("ВидУведомленияПубликацияЗадач", Перечисления.ВидУведомления.ПубликацияЗадач);
	ПостроительОбщий.Параметры.Вставить("ВидУведомленияСозданиеЗаявок", Перечисления.ВидУведомления.СозданиеЗаявок);

	ПостроительОбщий.Выполнить(); 
	Выборка = ПостроительОбщий.Результат.Выбрать(); 

	Источник = Новый ОписаниеИсточникаДанных(Выборка);	
	
	Источник.Колонки["Направление"].Измерение = Истина;
	Источник.Колонки["Система"].Измерение = Истина;

	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.ИсточникДанных = Источник;
    ПостроительЗапроса.ЗаполнитьНастройки();
	ПостроительЗапроса.Измерения.Очистить();

	Если ГруппировкаНаправлениеСистема = 0 Тогда 
		ПостроительЗапроса.Измерения.Добавить("Направление");
		ПостроительЗапроса.Измерения.Добавить("Система");
	Иначе
		ПостроительЗапроса.Измерения.Добавить("Система");
		ПостроительЗапроса.Измерения.Добавить("Направление");
	КонецЕсли;

	ПостроительЗапроса.Выполнить();
	ВыборкаНастроек = ПостроительЗапроса.Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ЗаполнитьДерево(ВыборкаНастроек, "ДеревоНаправленийСистемОповещения");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево(Выборка, ИмяРеквизита)
	
	Дерево = РеквизитФормыВЗначение("ДеревоНаправленийСистемОповещения");
	Дерево.Строки.Очистить();
	
	Пока Выборка.Следующий() Цикл
		СтрокаДереваВерхняя = Дерево.Строки.Добавить();
		
		ВыборкаУровень = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		СуммаУровеньМеткаПубликацияЗадач = 0;
		СуммаУровеньМеткаСозданиеЗаявок = 0;
	
		Пока ВыборкаУровень.Следующий() Цикл
			
			СтрокаДереваНижняя = СтрокаДереваВерхняя.Строки.Добавить();
			
			ВыборкаГруппЗаказчиков = ВыборкаУровень.Выбрать();
			
			СуммаМеткаПубликацияЗадач = 0;
			СуммаМеткаСозданиеЗаявок = 0;

			Пока ВыборкаГруппЗаказчиков.Следующий() Цикл				
				Если ГруппировкаНаправлениеСистема = 0 Тогда
					СтрокаДереваВерхняя.НаправлениеСсылка = Выборка.Направление;
					СтрокаДереваВерхняя.НаправлениеИСистема = ВыборкаГруппЗаказчиков.НаименованиеНаправления;
					
					СтрокаДереваНижняя.НаправлениеСсылка = Выборка.Направление;
					СтрокаДереваНижняя.СистемаСсылка = ВыборкаУровень.Система;
					СтрокаДереваНижняя.НаправлениеИСистема = ВыборкаГруппЗаказчиков.НаименованиеСистемы;
				Иначе
					СтрокаДереваВерхняя.СистемаСсылка = Выборка.Система;
					СтрокаДереваВерхняя.НаправлениеИСистема = ВыборкаГруппЗаказчиков.НаименованиеСистемы;
					
					СтрокаДереваНижняя.НаправлениеСсылка = ВыборкаУровень.Направление;
					СтрокаДереваНижняя.СистемаСсылка = Выборка.Система;
					СтрокаДереваНижняя.НаправлениеИСистема = ВыборкаГруппЗаказчиков.НаименованиеНаправления;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаГруппЗаказчиков.ГруппаЗаказчиков) Тогда
					СтрокаДерева = СтрокаДереваНижняя.Строки.Добавить();
					
					СтрокаДерева.ГруппаЗаказчиков = ВыборкаГруппЗаказчиков.ГруппаЗаказчиков;
					СтрокаДерева.НаправлениеСсылка = СтрокаДереваНижняя.НаправлениеСсылка;
					СтрокаДерева.СистемаСсылка = СтрокаДереваНижняя.СистемаСсылка;
					СтрокаДерева.НаправлениеИСистема = ВыборкаГруппЗаказчиков.НаименованиеГруппыЗаказчиков;				
					СтрокаДерева.МеткаПубликацияЗадач = ВыборкаГруппЗаказчиков.МеткаПубликацияЗадач;
					СтрокаДерева.МеткаСозданиеЗаявок = ВыборкаГруппЗаказчиков.МеткаСозданиеЗаявок;
				Иначе
					СтрокаДереваНижняя.МеткаПубликацияЗадач = ВыборкаГруппЗаказчиков.МеткаПубликацияЗадач;
					СтрокаДереваНижняя.МеткаСозданиеЗаявок = ВыборкаГруппЗаказчиков.МеткаСозданиеЗаявок;					
				КонецЕсли;
				
				СуммаМеткаПубликацияЗадач = СуммаМеткаПубликацияЗадач + ВыборкаГруппЗаказчиков.МеткаПубликацияЗадач;
				СуммаМеткаСозданиеЗаявок = СуммаМеткаСозданиеЗаявок + ВыборкаГруппЗаказчиков.МеткаСозданиеЗаявок;
			КонецЦикла;
		
			КоличествоГруппЗаказчиков = ВыборкаГруппЗаказчиков.Количество();
			
			Если КоличествоГруппЗаказчиков = СуммаМеткаПубликацияЗадач Тогда
				СтрокаДереваНижняя.МеткаПубликацияЗадач = 1;
			ИначеЕсли СуммаМеткаПубликацияЗадач > 0 Тогда
				СтрокаДереваНижняя.МеткаПубликацияЗадач = 2;
			Иначе
				СтрокаДереваНижняя.МеткаПубликацияЗадач = 0;
			КонецЕсли;
			
			Если КоличествоГруппЗаказчиков = СуммаМеткаСозданиеЗаявок Тогда
				СтрокаДереваНижняя.МеткаСозданиеЗаявок = 1;
			ИначеЕсли СуммаМеткаСозданиеЗаявок > 0 Тогда
				СтрокаДереваНижняя.МеткаСозданиеЗаявок = 2;
			Иначе
				СтрокаДереваНижняя.МеткаСозданиеЗаявок = 0;
			КонецЕсли;
			
			Если СтрокаДереваНижняя.МеткаПубликацияЗадач = 1 Тогда
				СуммаУровеньМеткаПубликацияЗадач = СуммаУровеньМеткаПубликацияЗадач + 1;
			ИначеЕсли СтрокаДереваНижняя.МеткаПубликацияЗадач = 2 Тогда
				СуммаУровеньМеткаПубликацияЗадач = 0.5;
			КонецЕсли;
			
			Если СтрокаДереваНижняя.МеткаСозданиеЗаявок = 1 Тогда
				СуммаУровеньМеткаСозданиеЗаявок = СуммаУровеньМеткаСозданиеЗаявок + 1;
			ИначеЕсли СтрокаДереваНижняя.МеткаСозданиеЗаявок = 2 Тогда
				СуммаУровеньМеткаСозданиеЗаявок = 0.5;
			КонецЕсли;	
		КонецЦикла;
		
		КоличествоСистем = ВыборкаУровень.Количество();
		
		Если КоличествоСистем = СуммаУровеньМеткаПубликацияЗадач Тогда
			СтрокаДереваВерхняя.МеткаПубликацияЗадач = 1;
		ИначеЕсли СуммаУровеньМеткаПубликацияЗадач > 0 Тогда
			СтрокаДереваВерхняя.МеткаПубликацияЗадач = 2;
		Иначе
			СтрокаДереваВерхняя.МеткаПубликацияЗадач = 0;
		КонецЕсли;
		
		Если КоличествоСистем = СуммаУровеньМеткаСозданиеЗаявок Тогда
			СтрокаДереваВерхняя.МеткаСозданиеЗаявок = 1;
		ИначеЕсли СуммаУровеньМеткаСозданиеЗаявок > 0 Тогда
			СтрокаДереваВерхняя.МеткаСозданиеЗаявок = 2;
		Иначе
			СтрокаДереваВерхняя.МеткаСозданиеЗаявок = 0;
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, ИмяРеквизита);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЭлементыУправленияГруппировкойСообщений()
	
	РеквизитыГруппировки = Новый Массив;
	РеквизитыГруппировки.Добавить(ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ВариантГруппировкиСообщений);
	РеквизитыГруппировки.Добавить(ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ИспользоватьГруппировкуСообщений);
	РеквизитыГруппировки.Добавить(ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ГруппироватьСообщенияПоКатегориям);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыДополнительныхРеквизитов.Ссылка КАК Реквизит
	|ПОМЕСТИТЬ ОтобранныеРеквизиты
	|ИЗ
	|	ПланВидовХарактеристик.ВидыДополнительныхРеквизитов КАК ВидыДополнительныхРеквизитов
	|ГДЕ
	|	ВидыДополнительныхРеквизитов.Ссылка В(&Реквизиты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтобранныеРеквизиты.Реквизит КАК Реквизит,
	|	ВЫБОР
	|		КОГДА ОтобранныеРеквизиты.Реквизит = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДополнительныхРеквизитов.ВариантГруппировкиСообщений)
	|			ТОГДА ЕСТЬNULL(ЗначенияДополнительныхРеквизитов.Значение, 0)
	|		КОГДА ОтобранныеРеквизиты.Реквизит = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДополнительныхРеквизитов.ИспользоватьГруппировкуСообщений)
	|			ТОГДА ЕСТЬNULL(ЗначенияДополнительныхРеквизитов.Значение, ЛОЖЬ)
	|		КОГДА ОтобранныеРеквизиты.Реквизит = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДополнительныхРеквизитов.ГруппироватьСообщенияПоКатегориям)
	|			ТОГДА ЕСТЬNULL(ЗначенияДополнительныхРеквизитов.Значение, ИСТИНА)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Значение
	|ИЗ
	|	ОтобранныеРеквизиты КАК ОтобранныеРеквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияДополнительныхРеквизитовОбъектов КАК ЗначенияДополнительныхРеквизитов
	|		ПО ОтобранныеРеквизиты.Реквизит = ЗначенияДополнительныхРеквизитов.Реквизит
	|			И ((ВЫРАЗИТЬ(ЗначенияДополнительныхРеквизитов.Объект КАК Справочник.Пользователи)) = &Объект)";
	
	Запрос.УстановитьПараметр("Реквизиты", РеквизитыГруппировки);
	Запрос.УстановитьПараметр("Объект", ПараметрыСеанса.ТекущийПользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.Реквизит = ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ИспользоватьГруппировкуСообщений Тогда
				ГруппироватьСообщения = Выборка.Значение;
				
			ИначеЕсли Выборка.Реквизит = ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ВариантГруппировкиСообщений Тогда
				ГруппировкаСообщений = Выборка.Значение;
				
			ИначеЕсли Выборка.Реквизит = ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ГруппироватьСообщенияПоКатегориям Тогда
				ГруппироватьПоКатегориям = Выборка.Значение;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ГруппироватьСообщения = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЭлементыСпособаУведомления()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ЗначенияДопРеквизитовСпособаОповещенияЧерезМессенджер.Значение, ЛОЖЬ) КАК ОповещениеМессенджер,
	|	ЕСТЬNULL(ЗначенияДопРеквизитовСпособаОповещенияЧерезSDMS.Значение, ЛОЖЬ) КАК ОповещениеSDMS,
	|	ЕСТЬNULL(ЗначенияДопРеквизитовСпособаОповещенияЧерезПочту.Значение, ЛОЖЬ) КАК ОповещениеПочта
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияДополнительныхРеквизитовОбъектов КАК ЗначенияДопРеквизитовСпособаОповещенияЧерезМессенджер
	|		ПО (ЗначенияДопРеквизитовСпособаОповещенияЧерезМессенджер.Объект = Пользователи.Ссылка)
	|			И (ЗначенияДопРеквизитовСпособаОповещенияЧерезМессенджер.Реквизит = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДополнительныхРеквизитов.ОповещениеМессенджер))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияДополнительныхРеквизитовОбъектов КАК ЗначенияДопРеквизитовСпособаОповещенияЧерезSDMS
	|		ПО (ЗначенияДопРеквизитовСпособаОповещенияЧерезSDMS.Объект = Пользователи.Ссылка)
	|			И (ЗначенияДопРеквизитовСпособаОповещенияЧерезSDMS.Реквизит = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДополнительныхРеквизитов.ОповещениеSDMS))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияДополнительныхРеквизитовОбъектов КАК ЗначенияДопРеквизитовСпособаОповещенияЧерезПочту
	|		ПО (ЗначенияДопРеквизитовСпособаОповещенияЧерезПочту.Объект = Пользователи.Ссылка)
	|			И (ЗначенияДопРеквизитовСпособаОповещенияЧерезПочту.Реквизит = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДополнительныхРеквизитов.ОповещениеПочта))
	|ГДЕ
	|	Пользователи.Ссылка = &Объект";
	
	Запрос.УстановитьПараметр("Объект", ПараметрыСеанса.ТекущийПользователь);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда		
		ОповещениеЧерезSDMS = Выборка.ОповещениеSDMS;
		ОповещениеЧерезПочту = Выборка.ОповещениеПочта;
		// Если ничего не включено то по умолчанию вот так
		ОповещениеЧерезМессенджер = Выборка.ОповещениеМессенджер ИЛИ НЕ (ОповещениеЧерезПочту ИЛИ ОповещениеЧерезSDMS);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЭлементыУправленияДополнительно()
	
	ДопРеквизиты = Новый Массив;
	ДопРеквизиты.Добавить(ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ОтправлятьЗадачиНаТестировании);
	ДопРеквизиты.Добавить(ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ВремяНапоминанияОТрудозатратах);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыДополнительныхРеквизитов.Ссылка КАК Ссылка,
	|	ВидыДополнительныхРеквизитов.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных
	|ПОМЕСТИТЬ ДопРеквизиты
	|ИЗ
	|	ПланВидовХарактеристик.ВидыДополнительныхРеквизитов КАК ВидыДополнительныхРеквизитов
	|ГДЕ
	|	ВидыДополнительныхРеквизитов.Ссылка В(&ДопРеквизиты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДопРеквизиты.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
	|	ЗначенияДополнительныхРеквизитовОбъектов.Значение КАК Значение
	|ИЗ
	|	ДопРеквизиты КАК ДопРеквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияДополнительныхРеквизитовОбъектов КАК ЗначенияДополнительныхРеквизитовОбъектов
	|		ПО ((ВЫРАЗИТЬ(ЗначенияДополнительныхРеквизитовОбъектов.Объект КАК Справочник.Пользователи)) = &Объект)
	|			И ДопРеквизиты.Ссылка = ЗначенияДополнительныхРеквизитовОбъектов.Реквизит";
	
	Запрос.УстановитьПараметр("Объект", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("ДопРеквизиты", ДопРеквизиты);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			ЭлементУправления = Элементы.Найти(Выборка.ИмяПредопределенныхДанных);

			Если ЭлементУправления <> Неопределено Тогда
				ЭтотОбъект[ЭлементУправления.ПутьКДанным] = Выборка.Значение;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЭлементыУправленияОтправкойДайджеста()
	
	РеквизитыДайджеста = Новый Массив;
	РеквизитыДайджеста.Добавить(ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ОтправлятьДайджестПоПроектам);
	РеквизитыДайджеста.Добавить(ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ДеньОтправкиДайджестаПоПроектам);
	РеквизитыДайджеста.Добавить(ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ОтправкаДайджестаРуководитель);
	РеквизитыДайджеста.Добавить(ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ОтправкаДайджестаЗаказчик);
	РеквизитыДайджеста.Добавить(ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ОтправкаДайджестаКУП);
	РеквизитыДайджеста.Добавить(ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ОтправкаДайджестаНаблюдатель);
	РеквизитыДайджеста.Добавить(ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ОтправкаДайджестаЗаинтересованный);
	РеквизитыДайджеста.Добавить(ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ОтправкаДайджестаВладелецПродукта);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыДополнительныхРеквизитов.Ссылка КАК Реквизит,
	|	ВидыДополнительныхРеквизитов.ИмяПредопределенныхДанных КАК Наименование
	|ПОМЕСТИТЬ РеквизитыДайджеста
	|ИЗ
	|	ПланВидовХарактеристик.ВидыДополнительныхРеквизитов КАК ВидыДополнительныхРеквизитов
	|ГДЕ
	|	ВидыДополнительныхРеквизитов.Ссылка В(&РеквизитыДайджеста)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеквизитыДайджеста.Реквизит КАК Реквизит,
	|	РеквизитыДайджеста.Наименование КАК НаименованиеРеквизита,
	|	ВЫБОР
	|		КОГДА РеквизитыДайджеста.Реквизит = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДополнительныхРеквизитов.ДеньОтправкиДайджестаПоПроектам)
	|			ТОГДА ЕСТЬNULL(ЗначенияДополнительныхРеквизитовОбъектов.Значение, 4)
	|		ИНАЧЕ ЕСТЬNULL(ЗначенияДополнительныхРеквизитовОбъектов.Значение, ИСТИНА)
	|	КОНЕЦ КАК Значение
	|ИЗ
	|	РеквизитыДайджеста КАК РеквизитыДайджеста
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияДополнительныхРеквизитовОбъектов КАК ЗначенияДополнительныхРеквизитовОбъектов
	|		ПО ((ВЫРАЗИТЬ(ЗначенияДополнительныхРеквизитовОбъектов.Объект КАК Справочник.Пользователи)) = &Объект)
	|			И РеквизитыДайджеста.Реквизит = ЗначенияДополнительныхРеквизитовОбъектов.Реквизит";
	
	Запрос.УстановитьПараметр("Объект", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("РеквизитыДайджеста", РеквизитыДайджеста);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НайденныйРеквизит = Элементы.Найти(Выборка.НаименованиеРеквизита);
		Если НайденныйРеквизит <> Неопределено Тогда
			ЭтотОбъект[НайденныйРеквизит.ПутьКДанным] = Выборка.Значение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура МеткаДереваПриИзменении(ЭлементДерево, ИмяМетки)
	
	Если ГруппировкаНаправлениеСистема = 0 Тогда
		ДаннаяСтрока = ЭлементДерево.ТекущиеДанные.СистемаСсылка;
	Иначе
		ДаннаяСтрока = ЭлементДерево.ТекущиеДанные.НаправлениеСсылка;
	КонецЕсли;
	
	Если ЭлементДерево.ТекущиеДанные <> Неопределено Тогда	
		ТекущаяМетка = ЭлементДерево.ТекущиеДанные[ИмяМетки];
		
		Если НЕ ЗначениеЗаполнено(ДаннаяСтрока) Тогда
			Если ТекущаяМетка = 2 Тогда
				ЭлементДерево.ТекущиеДанные[ИмяМетки] = 0;
				ТекущаяМетка = 0;
			КонецЕсли;
			
			УстановитьМеткиПодчиненным(ЭлементДерево.ТекущиеДанные, ИмяМетки, ТекущаяМетка);
		Иначе
			Если ТекущаяМетка = 1 Тогда
				ЭлементДерево.ТекущиеДанные[ИмяМетки] = 1;
			Иначе
				ЭлементДерево.ТекущиеДанные[ИмяМетки] = 0;
				ТекущаяМетка = 0;
			КонецЕсли;
			
			УстановитьМеткиПодчиненным(ЭлементДерево.ТекущиеДанные, ИмяМетки, ТекущаяМетка);
			УстановитьМеткиРодителям(ЭлементДерево.ТекущиеДанные, ИмяМетки, ТекущаяМетка)
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастройкиПоУмолчаниюНаСервере()
	
	ОтключитьОповещения = Ложь;
	ГруппироватьСообщения = Истина;
	ГруппироватьПоКатегориям = Истина;
	ГруппировкаСообщений = 0;
	ОтправлятьЗадачиНаТестировании = Истина;
	ВремяНапоминанияОТрудозатратах = 0; 
	
	ТаблицаДетальныеНастройки.Загрузить(Перечисления.КатегорииСообщенийПользователя.КатегорииОповещенияДляФормыНастройкиОповещений());
		
	Элементы.ГруппировкаСообщений.Доступность = Истина;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЭлементыГруппировкиСообщений()
	
	Элементы.ГруппировкаСообщений.Доступность = ГруппироватьСообщения;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВопросСохраненияНастроек(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьНастройкиНаКлиенте();
		Закрыть();
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		НастройкиОповещенийМодифицированы = Ложь;
		НастройкиОбъектовОповещенияИзменены = Ложь;
		НастройкиОтправкиДайджестаПоПроектамМодифицированы = Ложь;
		НастройкиГруппировкиСообщенийИзменены = Ложь;
		НастройкиОткрытияСсылокИзменены = Ложь;
		НастройкиВремяНапоминанияОТрудозатратахИзменены = Ложь;
		
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеОтправкиДайджеста()
	
	Элементы.ДеньОтправкиДайджестаПоПроектам.Доступность = ОтправлятьДайджестПоПроектам;
	Элементы.ОтправкаДайджестаРуководитель.Доступность = ОтправлятьДайджестПоПроектам;
	Элементы.ОтправкаДайджестаЗаказчик.Доступность = ОтправлятьДайджестПоПроектам;
	Элементы.ОтправкаДайджестаКУП.Доступность = ОтправлятьДайджестПоПроектам;
	Элементы.ОтправкаДайджестаНаблюдатель.Доступность = ОтправлятьДайджестПоПроектам;
	Элементы.ОтправкаДайджестаЗаинтересованный.Доступность = ОтправлятьДайджестПоПроектам;
	Элементы.ОтправкаДайджестаВладелецПродукта.Доступность = ОтправлятьДайджестПоПроектам;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиГруппировкиСообщений(Результат, Знач Пользователь)
	
	РегистрСведений = РегистрыСведений.ЗначенияДополнительныхРеквизитовОбъектов;
	ПВХ = ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов;
	
	Попытка
		РегистрСведений.УстановитьЗначениеДополнительногоРеквизита(Пользователь, ПВХ["ВариантГруппировкиСообщений"], ГруппировкаСообщений);
		РегистрСведений.УстановитьЗначениеДополнительногоРеквизита(Пользователь, ПВХ["ИспользоватьГруппировкуСообщений"], ГруппироватьСообщения);
		РегистрСведений.УстановитьЗначениеДополнительногоРеквизита(Пользователь, ПВХ["ГруппироватьСообщенияПоКатегориям"], ГруппироватьПоКатегориям);
	Исключение
		Результат.НастройкиСохранены = Ложь;
		Результат.ТекстОшибки = СтрШаблон("Произошла ошибка при сохранении настроек: %1", ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиНаКлиенте()
	
	РезультатВыполнения = СохранитьНастройкиНаСервере(НастройкиОповещенийМодифицированы, НастройкиОбъектовОповещенияИзменены,
		НастройкиОтправкиДайджестаПоПроектамМодифицированы, НастройкиГруппировкиСообщенийИзменены, 
		НастройкиОтправлятьЗадачиНаТестированииИзменены, НастройкиВремяНапоминанияОТрудозатратахИзменены, НастройкиСпособаОповещений);
		
	Если РезультатВыполнения.НастройкиСохранены Тогда
		ПоказатьОповещениеПользователя("Настройки сохранены.");
		НастройкиОповещенийМодифицированы = Ложь;
		НастройкиОбъектовОповещенияИзменены = Ложь;
		НастройкиОтправкиДайджестаПоПроектамМодифицированы = Ложь;
		НастройкиГруппировкиСообщенийИзменены = Ложь;
		НастройкиОтправлятьЗадачиНаТестированииИзменены = Ложь;
		НастройкиВремяНапоминанияОТрудозатратахИзменены = Ложь; 
		НастройкиСпособаОповещений = Ложь;
		Модифицированность = Ложь;
	Иначе
		ПоказатьОповещениеПользователя(РезультатВыполнения.ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиОповещений(Результат)
	
	ТаблицаНастроек = РеквизитФормыВЗначение("ТаблицаДетальныеНастройки");
	ТаблицаНастроек.Колонки.Удалить("Наименование");
	ТаблицаНастроек.Колонки.Удалить("Подсказка");
		
	ПользовательОбъект = ПараметрыСеанса.ТекущийПользователь.ПолучитьОбъект();
	ПользовательОбъект.ОтключитьВсеОповещения = ОтключитьОповещения;
	ПользовательОбъект.НастройкиОповещений.Загрузить(ТаблицаНастроек);
	ПользовательОбъект.ОбменДанными.Загрузка = Истина;
	
	Попытка
		УстановитьПривилегированныйРежим(Истина);
		ПользовательОбъект.Записать();
		УстановитьПривилегированныйРежим(Ложь);
	Исключение
		Результат.ТекстОшибки = СтрШаблон("Произошла ошибка при сохранении настроек: %1", ОписаниеОшибки());
		Результат.НастройкиСохранены = Ложь;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиОтправкиДайджеста(Результат, Знач Пользователь)
	
	РегистрСведений = РегистрыСведений.ЗначенияДополнительныхРеквизитовОбъектов;
	ПВХ = ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов;
	
	Попытка
		РегистрСведений.УстановитьЗначениеДополнительногоРеквизита(Пользователь, ПВХ.ДеньОтправкиДайджестаПоПроектам, ДеньОтправкиДайджестаПоПроектам);
		РегистрСведений.УстановитьЗначениеДополнительногоРеквизита(Пользователь, ПВХ.ОтправкаДайджестаЗаинтересованный, ОтправкаДайджестаЗаинтересованный);
		РегистрСведений.УстановитьЗначениеДополнительногоРеквизита(Пользователь, ПВХ.ОтправкаДайджестаЗаказчик, ОтправкаДайджестаЗаказчик);
		РегистрСведений.УстановитьЗначениеДополнительногоРеквизита(Пользователь, ПВХ.ОтправкаДайджестаКУП, ОтправкаДайджестаКУП);
		РегистрСведений.УстановитьЗначениеДополнительногоРеквизита(Пользователь, ПВХ.ОтправкаДайджестаНаблюдатель, ОтправкаДайджестаНаблюдатель);
		РегистрСведений.УстановитьЗначениеДополнительногоРеквизита(Пользователь, ПВХ.ОтправкаДайджестаРуководитель, ОтправкаДайджестаРуководитель);
		РегистрСведений.УстановитьЗначениеДополнительногоРеквизита(Пользователь, ПВХ.ОтправлятьДайджестПоПроектам, ОтправлятьДайджестПоПроектам);
		РегистрСведений.УстановитьЗначениеДополнительногоРеквизита(Пользователь, ПВХ.ОтправкаДайджестаВладелецПродукта, ОтправкаДайджестаВладелецПродукта);
	Исключение
		Результат.НастройкиСохранены = Ложь;
		Результат.ТекстОшибки = СтрШаблон("Произошла ошибка при сохранении настроек:%1", ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиОтправлятьЗадачиНаТестировании(Результат, Знач Пользователь)
	
	РегистрСведений = РегистрыСведений.ЗначенияДополнительныхРеквизитовОбъектов;
	ПВХ = ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов;
	
	Попытка
		РегистрСведений.УстановитьЗначениеДополнительногоРеквизита(Пользователь, ПВХ["ОтправлятьЗадачиНаТестировании"], ОтправлятьЗадачиНаТестировании);
	Исключение
		Результат.НастройкиСохранены = Ложь;
		Результат.ТекстОшибки = СтрШаблон("Произошла ошибка при сохранении настроек:%1", ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиВремениНапоминанияОТрудозатратах(Результат, Знач Пользователь)
	
	РегистрСведений = РегистрыСведений.ЗначенияДополнительныхРеквизитовОбъектов;
	ПВХ = ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов;
	
	Попытка
		РегистрСведений.УстановитьЗначениеДополнительногоРеквизита(
			Пользователь, ПВХ.ВремяНапоминанияОТрудозатратах, ВремяНапоминанияОТрудозатратах);
	Исключение
		Результат.НастройкиСохранены = Ложь;
		Результат.ТекстОшибки = СтрШаблон("Произошла ошибка при сохранении настроек:%1", ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиОбъектовОповещения(Результат, Знач Пользователь)
	
	ТаблицаИзмененийНастроек = Новый ТаблицаЗначений;
	ТаблицаИзмененийНастроек.Колонки.Добавить("ВидУведомления", Новый ОписаниеТипов("ПеречислениеСсылка.ВидУведомления"));
	ТаблицаИзмененийНастроек.Колонки.Добавить("НаправлениеСсылка", Новый ОписаниеТипов("СправочникСсылка.НаправленияРазработки"));
	ТаблицаИзмененийНастроек.Колонки.Добавить("СистемаСсылка", Новый ОписаниеТипов("СправочникСсылка.СистемыУчета"));
	ТаблицаИзмененийНастроек.Колонки.Добавить("ГруппаЗаказчиков", Новый ОписаниеТипов("СправочникСсылка.ГруппыЗаказчиковНаправлений"));
	ТаблицаИзмененийНастроек.Колонки.Добавить("ПользовательСсылка", Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	
	ВидУведомленияПубликацияЗадач = Перечисления.ВидУведомления.ПубликацияЗадач;
	ВидУведомленияСозданиеЗаявок = Перечисления.ВидУведомления.СозданиеЗаявок;
	
	МассивНаправлений = ДеревоНаправленийСистемОповещения.ПолучитьЭлементы();	
	Для Каждого ЭлементМассива Из МассивНаправлений Цикл
		МассивСистем = ЭлементМассива.ПолучитьЭлементы();
		
		Для Каждого ЭлементСистем Из МассивСистем Цикл			
			Если ЭлементСистем.МеткаПубликацияЗадач = 1 Тогда
				НоваяСтрока = ТаблицаИзмененийНастроек.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементСистем);
				НоваяСтрока.ВидУведомления = ВидУведомленияПубликацияЗадач;
				НоваяСтрока.ПользовательСсылка = Пользователь;
			КонецЕсли;

			Если ЭлементСистем.МеткаСозданиеЗаявок = 1 Тогда
				НоваяСтрока = ТаблицаИзмененийНастроек.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементСистем);
				НоваяСтрока.ВидУведомления = ВидУведомленияСозданиеЗаявок;
				НоваяСтрока.ПользовательСсылка = Пользователь;
			КонецЕсли;
			
			МассивГрупп = ЭлементСистем.ПолучитьЭлементы();
			
			Для Каждого Элемент Из МассивГрупп Цикл
				Если Элемент.МеткаПубликацияЗадач = 1 Тогда
					НоваяСтрока = ТаблицаИзмененийНастроек.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент);
					НоваяСтрока.ВидУведомления = ВидУведомленияПубликацияЗадач;
					НоваяСтрока.ПользовательСсылка = Пользователь;
				КонецЕсли;
				
				Если Элемент.МеткаСозданиеЗаявок = 1 Тогда
					НоваяСтрока = ТаблицаИзмененийНастроек.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент);
					НоваяСтрока.ВидУведомления = ВидУведомленияСозданиеЗаявок;
					НоваяСтрока.ПользовательСсылка = Пользователь;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;			
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИзмененияНастроек.НаправлениеСсылка КАК Направление,
	|	ИзмененияНастроек.СистемаСсылка КАК Система,
	|	ИзмененияНастроек.ГруппаЗаказчиков КАК ГруппаЗаказчиков,
	|	ИзмененияНастроек.ПользовательСсылка КАК Пользователь,
	|	ИзмененияНастроек.ВидУведомления КАК ВидУведомления
	|ПОМЕСТИТЬ ТаблицаНастроекУведомлений
	|ИЗ
	|	&ИзмененияНастроек КАК ИзмененияНастроек
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНастроекУведомлений.ВидУведомления КАК ВидУведомления,
	|	ТаблицаНастроекУведомлений.Направление КАК Направление,
	|	ТаблицаНастроекУведомлений.Система КАК Система,
	|	ТаблицаНастроекУведомлений.ГруппаЗаказчиков КАК ГруппаЗаказчиков,
	|	ИСТИНА КАК Добавить
	|ИЗ
	|	ТаблицаНастроекУведомлений КАК ТаблицаНастроекУведомлений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУведомленийПользователей КАК НастройкиУведомленийПользователей
	|		ПО (НастройкиУведомленийПользователей.ВидУведомления = ТаблицаНастроекУведомлений.ВидУведомления)
	|			И ТаблицаНастроекУведомлений.Направление = НастройкиУведомленийПользователей.Направление
	|			И ТаблицаНастроекУведомлений.Система = НастройкиУведомленийПользователей.Система
	|			И ТаблицаНастроекУведомлений.ГруппаЗаказчиков = НастройкиУведомленийПользователей.ГруппаЗаказчиков
	|			И ТаблицаНастроекУведомлений.Пользователь = НастройкиУведомленийПользователей.Пользователь
	|ГДЕ
	|	НастройкиУведомленийПользователей.Пользователь ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НастройкиУведомленийПользователей.ВидУведомления,
	|	НастройкиУведомленийПользователей.Направление,
	|	НастройкиУведомленийПользователей.Система,
	|	НастройкиУведомленийПользователей.ГруппаЗаказчиков,
	|	ЛОЖЬ
	|ИЗ
	|	РегистрСведений.НастройкиУведомленийПользователей КАК НастройкиУведомленийПользователей
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНастроекУведомлений КАК ТаблицаНастроекУведомлений
	|		ПО НастройкиУведомленийПользователей.ВидУведомления = ТаблицаНастроекУведомлений.ВидУведомления
	|			И НастройкиУведомленийПользователей.Направление = ТаблицаНастроекУведомлений.Направление
	|			И НастройкиУведомленийПользователей.Система = ТаблицаНастроекУведомлений.Система
	|			И (ТаблицаНастроекУведомлений.ГруппаЗаказчиков = НастройкиУведомленийПользователей.ГруппаЗаказчиков)
	|			И НастройкиУведомленийПользователей.Пользователь = ТаблицаНастроекУведомлений.Пользователь
	|ГДЕ
	|	НастройкиУведомленийПользователей.Пользователь = &Пользователь
	|	И ТаблицаНастроекУведомлений.Пользователь ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("ИзмененияНастроек", ТаблицаИзмененийНастроек);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Попытка 
		НачатьТранзакцию();
		Пока Выборка.Следующий() Цикл
			МенеджерЗаписи  = РегистрыСведений.НастройкиУведомленийПользователей.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ВидУведомления = Выборка.ВидУведомления;
			МенеджерЗаписи.Направление = Выборка.Направление;
			МенеджерЗаписи.Система = Выборка.Система;
			МенеджерЗаписи.ГруппаЗаказчиков = Выборка.ГруппаЗаказчиков;
			МенеджерЗаписи.Пользователь = Пользователь;
			
			Если Выборка.Добавить Тогда
				МенеджерЗаписи.Записать(Ложь);
			Иначе
				МенеджерЗаписи.Удалить();
			КонецЕсли;
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		Результат.НастройкиСохранены = Ложь;
		Результат.ТекстОшибки = СтрШаблон(Результат.ТекстОшибки + " Произошла ошибка при сохранении настроек: %1", ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция СохранитьНастройкиНаСервере(Знач НастройкиОповещенийИзменены, Знач НастройкиОбъектовОповещенияИзменены, 
	Знач ОтправкаДайжестаИзменена, Знач ГруппировкаСообщенийИзменена, Знач ОтправлятьЗадачиНаТестированииИзменена,
	Знач ВремяНапоминанияОТрудозатратахИзменено, Знач НастройкиСпособаОповещений)
	
	Результат = Новый Структура("НастройкиСохранены, ТекстОшибки", Истина, "");
	Пользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Если НастройкиОповещенийИзменены Тогда	
		СохранитьНастройкиОповещений(Результат);
	КонецЕсли;
	
	Если НастройкиОбъектовОповещенияИзменены И Результат.НастройкиСохранены Тогда
		СохранитьНастройкиОбъектовОповещения(Результат, Пользователь);
	КонецЕсли;
	
	Если ОтправкаДайжестаИзменена И Результат.НастройкиСохранены Тогда
		СохранитьНастройкиОтправкиДайджеста(Результат, Пользователь);
	КонецЕсли;
	
	Если ГруппировкаСообщенийИзменена И Результат.НастройкиСохранены Тогда
		СохранитьНастройкиГруппировкиСообщений(Результат, Пользователь);
	КонецЕсли;
	
	Если ОтправлятьЗадачиНаТестированииИзменена И Результат.НастройкиСохранены Тогда
		СохранитьНастройкиОтправлятьЗадачиНаТестировании(Результат, Пользователь);
	КонецЕсли;
	
	Если ВремяНапоминанияОТрудозатратахИзменено И Результат.НастройкиСохранены Тогда
		СохранитьНастройкиВремениНапоминанияОТрудозатратах(Результат, Пользователь);
	КонецЕсли;
	
	Если НастройкиСпособаОповещений И Результат.НастройкиСохранены Тогда
		СохранитьНастройкиСпособаОповещений(Результат, Пользователь);	
	КонецЕсли;
	
	Если НЕ Результат.НастройкиСохранены Тогда
		ЗаписьЖурналаРегистрации("НастройкиПользователя", УровеньЖурналаРегистрации.Ошибка,,, Результат.ТекстОшибки);
	КонецЕсли; 
	
	Возврат Результат;
			
КонецФункции

&НаСервере
Процедура СохранитьНастройкиСпособаОповещений(Результат, Пользователь)  

  	РегистрСведений = РегистрыСведений.ЗначенияДополнительныхРеквизитовОбъектов;
	ПВХ = ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов;  
	
	Попытка 
		РегистрСведений.УстановитьЗначениеДополнительногоРеквизита(Пользователь, ПВХ.ОповещениеМессенджер, ОповещениеЧерезМессенджер);
		РегистрСведений.УстановитьЗначениеДополнительногоРеквизита(Пользователь, ПВХ.ОповещениеSDMS, ОповещениеЧерезSDMS);
		РегистрСведений.УстановитьЗначениеДополнительногоРеквизита(Пользователь, ПВХ.ОповещениеПочта, ОповещениеЧерезПочту);
	Исключение
		Результат.НастройкиСохранены = Ложь;
		Результат.ТекстОшибки = СтрШаблон("Произошла ошибка при сохранении настроек:%1", ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьМеткиПодчиненным(Родитель, ИмяМетки, ТекущаяМетка)
	
	Дерево = Родитель.ПолучитьЭлементы();		
	
	Для Каждого СтрокиНаправления Из Дерево Цикл 
		СтрокиНаправления[ИмяМетки] = ТекущаяМетка;
		УстановитьМеткиПодчиненным(СтрокиНаправления, ИмяМетки, ТекущаяМетка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьМеткиРодителям(Строка, ИмяМетки, ТекущаяМетка)
	
	Родитель = Строка.ПолучитьРодителя();
	
	Если Родитель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСистемВНаправлении = Родитель.ПолучитьЭлементы();
	Счетчик = 0;
	
	Для Каждого ЭлементМассива Из СписокСистемВНаправлении Цикл
		Если ЭлементМассива[ИмяМетки] = 1 Тогда
			Счетчик = Счетчик + 1;
		КонецЕсли;
	КонецЦикла;        
	
	Если СписокСистемВНаправлении.Количество() = Счетчик Тогда
		Родитель[ИмяМетки] = 1;
		УстановитьМеткиРодителям(Родитель, ИмяМетки, ТекущаяМетка);
	ИначеЕсли Счетчик > 0 Тогда
		Родитель[ИмяМетки] = 2;
	Иначе
		Родитель[ИмяМетки] = 0;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
