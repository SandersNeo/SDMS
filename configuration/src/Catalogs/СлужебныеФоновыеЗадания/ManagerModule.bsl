///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Добавляет обработчики обновления
//
// Параметры:
//  Обработчики	 - ТаблицаЗначений	 - см. ПриложениеВызовСервера.ПолучитьОбработчикиДанных
//
Процедура ДобавлениеОбработчиковОбновления(Обработчики) Экспорт     
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "*";
	Обработчик.Процедура = "Справочники.СлужебныеФоновыеЗадания.ПроверитьПредопределенныеЭлементы";
	
КонецПроцедуры

// Проверяет предопределенные настройки
//
Процедура ПроверитьПредопределенныеЭлементы() Экспорт 
	
	ЗаполнитьПредопределенныйЭлемент("ВыполнениеСемантическогоАнализа", "Выполнение семантического анализа", 
		"РегламентныеЗаданияСервер.ВыполнитьСемантическийАнализ", 300);
	
	ЗаполнитьПредопределенныйЭлемент("ОбработкаОчередиСобытий", "Обработка очереди событий",
		"РегламентныеЗаданияСервер.ОбработкаОчередиСобытий", 60);
	
	ЗаполнитьПредопределенныйЭлемент("ОтправкаУведомленийОСозданныхЗаявках", "Отправка уведомлений о созданных заявках",
		"РегламентныеЗаданияСервер.ОтправкаУведомленийОСозданныхЗаявках", 600);
	
	ЗаполнитьПредопределенныйЭлемент("ОчисткаОчередиКанбан", "Очистка очереди канбан",
		"РегламентныеЗаданияСервер.УдалениеЗавершенныхЗадачИзОчереди", 86400);
	
	ЗаполнитьПредопределенныйЭлемент("ПересчетОчередиЗаявок", "Пересчет очереди заявок",
		"РегламентныеЗаданияСервер.ПересчетОчередиЗаявок", 120);
	
	ЗаполнитьПредопределенныйЭлемент("ПересчетОчередиКанбан", "Пересчет очереди канбан",
		"РегламентныеЗаданияСервер.ПересчетОчередиЗадач", 120);
	
	ЗаполнитьПредопределенныйЭлемент("СравнениеИзмененийОписанийОбъектов", "Сравнение изменений описаний объектов",
		"РегламентныеЗаданияСервер.СравнениеИзмененийОписанийОбъектов", 600);
	
	ИнтеграцияДополнительныхПодсистем.ЗаполнитьСлужебныеФоновыеЗадания();
	
КонецПроцедуры

// Возвращает время, на которое служебные фоновые задания приостанавливаются до
// начала следующего цикла выполнения.
//
// Возвращаемое значение:
//  Число. Время в секундах.
//
Функция ВремяПриостановкиЗадания() Экспорт
	
	ВремяПриостановки = Константы.ВремяПриостановкиСлужебныхФоновыхЗаданий.Получить();
	
	// Если значение константы не задано, по умолчанию устанавливается период в 30 сек.
	Если ВремяПриостановки = 0 Тогда
		ВремяПриостановки = 30;
		Константы.ВремяПриостановкиСлужебныхФоновыхЗаданий.Установить(ВремяПриостановки);
	КонецЕсли;
	
	Возврат ВремяПриостановки;
	
КонецФункции

Процедура УстановитьИспользование(Знач ФоновоеЗадание, Знач Использование) Экспорт
	
	ТекущееЗначение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФоновоеЗадание, "Использование");
	Если ТекущееЗначение <> Использование Тогда
		ФоновоеЗаданиеОбъект = ФоновоеЗадание.ПолучитьОбъект();
		ФоновоеЗаданиеОбъект.Использование = Использование;
		ФоновоеЗаданиеОбъект.Записать();
	КонецЕсли;		
	
КонецПроцедуры

Функция ФоновоеЗаданиеИспользуется(Знач Ключ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	(СлужебныеФоновыеЗадания.Использование
	|		И СлужебныеФоновыеЗадания.ПериодичностьЗапуска > 0) КАК Использование
	|ИЗ
	|	Справочник.СлужебныеФоновыеЗадания КАК СлужебныеФоновыеЗадания
	|ГДЕ
	|	СлужебныеФоновыеЗадания.Код = &Ключ";
	
	Запрос.УстановитьПараметр("Ключ", Ключ);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Используется = Выборка.Использование;
	Иначе
		Используется = Ложь;
	КонецЕсли;
	
	Возврат Используется;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПредопределенныйЭлемент(ИмяЭлемента, Наименование, ИмяМетода, ПериодичностьЗапуска) Экспорт
	
	Попытка
		Объект = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.СлужебныеФоновыеЗадания." + ИмяЭлемента);
	Исключение
		Сообщение = НСтр("ru = 'Предопределенный элемент ""%Параметр%"" не найден.'");
		Сообщение = СтрЗаменить(Сообщение, "%Параметр%", "Справочник.СлужебныеФоновыеЗадания." + ИмяЭлемента);
		ВызватьИсключение Сообщение;
	КонецПопытки;
	
	НужнаЗапись = Ложь;
		
	Если Объект = Неопределено Тогда  
		Объект = Справочники.СлужебныеФоновыеЗадания.СоздатьЭлемент();
		Объект.ИмяПредопределенныхДанных = ИмяЭлемента;
		Объект.Наименование = Наименование;
		Объект.ИмяМетода = ИмяМетода;     
		Объект.Использование = Истина;
		Объект.ПериодичностьЗапуска = ПериодичностьЗапуска;
		НужнаЗапись = Истина;
	Иначе
		Объект = Объект.ПолучитьОбъект();  
		
		Если Объект.ИмяМетода = "" Тогда
			Объект.ИмяМетода = ИмяМетода;     
			Объект.Использование = Истина;
			Объект.ПериодичностьЗапуска = ПериодичностьЗапуска;
			НужнаЗапись = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если НужнаЗапись Тогда
		Объект.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#КонецЕсли
