///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

&НаКлиенте
Перем СвойстваФоновогоЗадания;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Если значение данного параметра установлено в Истина, при закрытии окно возвращает
	// свойства элемента справочника в виде структуры.
	ОповеститьПриИзмененииСвойств = Параметры.ОповеститьПриИзмененииСвойств;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СвойстваФоновогоЗадания = Новый Структура;
	СвойстваФоновогоЗадания.Вставить("Использование");
	СвойстваФоновогоЗадания.Вставить("Код");
	СвойстваФоновогоЗадания.Вставить("Наименование");
	СвойстваФоновогоЗадания.Вставить("Предопределенное");
	СвойстваФоновогоЗадания.Вставить("ИмяМетода");
	СвойстваФоновогоЗадания.Вставить("СлужебноеЗадание");	
	
	СформироватьПредставлениеПериодичности();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ОповеститьПриИзмененииСвойств Тогда
		СвойстваФоновогоЗадания.Использование = Объект.Использование;
		СвойстваФоновогоЗадания.Код = Объект.Код;
		СвойстваФоновогоЗадания.Наименование = Объект.Наименование;
		СвойстваФоновогоЗадания.Предопределенное = Объект.Предопределенный;
		СвойстваФоновогоЗадания.ИмяМетода = Объект.ИмяМетода;
		СвойстваФоновогоЗадания.СлужебноеЗадание = Объект.Ссылка;
		
		Оповестить("ЗаписьЭлементаСправочникаСлужебныеФоновыеЗадания",
			СвойстваФоновогоЗадания, 
			"Справочник.СлужебныеФоновыеЗадания.ФормаЭлемента");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПериодичностьЗапускаПриИзменении(Элемент)
	
	СформироватьПредставлениеПериодичности();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СформироватьПредставлениеПериодичности()
	
	Если Объект.ПериодичностьЗапуска = 0 Тогда
		Элементы.НадписьПериодичностьЗапуска.Заголовок = "Периодичность запуска не задана";
		Возврат;
	КонецЕсли;
	
	ПериодичностьЗапуска = Объект.ПериодичностьЗапуска;
	
	КоличествоДней = Цел(ПериодичностьЗапуска / 86400);
	ПериодичностьЗапуска = ПериодичностьЗапуска - (КоличествоДней * 86400);
	
	КоличествоЧасов = Цел(ПериодичностьЗапуска / 3600);
	ПериодичностьЗапуска = ПериодичностьЗапуска - (КоличествоЧасов * 3600);
	
	КоличествоМинут = Цел(ПериодичностьЗапуска / 60);
	КоличествоСекунд = ПериодичностьЗапуска - (КоличествоМинут * 60);
	
	ПредставленияПериодов = Новый Массив;
	ПредставленияПериодов.Добавить("Запуск каждые");
	
	Если КоличествоДней > 0 Тогда
		ПредставленияПериодов.Добавить(СтрШаблон("%1 дн.", Формат(КоличествоДней, "ЧГ=0")));
	КонецЕсли;
	
	Если КоличествоЧасов > 0 Тогда
		ПредставленияПериодов.Добавить(СтрШаблон("%1 час.", Формат(КоличествоЧасов, "ЧГ=0")));
	КонецЕсли;
	
	Если КоличествоМинут > 0 Тогда
		ПредставленияПериодов.Добавить(СтрШаблон("%1 мин.", Формат(КоличествоМинут, "ЧГ=0")));
	КонецЕсли;
	
	Если КоличествоСекунд > 0 Тогда
		ПредставленияПериодов.Добавить(СтрШаблон("%1 сек.", Формат(КоличествоСекунд, "ЧГ=0")));
	КонецЕсли;	
	
	Элементы.НадписьПериодичностьЗапуска.Заголовок = СтрСоединить(ПредставленияПериодов, " ");
	
КонецПроцедуры

#КонецОбласти
