///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытий

// Добавляет обработчики обновления
//
// Параметры:
//  Обработчики	 - ТаблицаЗначений	 - см. ПриложениеВызовСервера.ПолучитьОбработчикиДанных
//
Процедура ДобавлениеОбработчиковОбновления(Обработчики) Экспорт     
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "*";
	Обработчик.Процедура = "Справочники.ВидыДеятельности.ПроверитьПредопределенныеЭлементы";
	
КонецПроцедуры

// Проверяет предопределенные настройки
//
Процедура ПроверитьПредопределенныеЭлементы() Экспорт 
	
	ЗаполнитьПредопределенныйЭлемент("CodeReview", Перечисления.НазначенияВидовДеятельности.ITПодразделение, Ложь);
	ЗаполнитьПредопределенныйЭлемент("АдминистративныеВопросыОбщее", Перечисления.НазначенияВидовДеятельности.Общее, Истина); 
	ЗаполнитьПредопределенныйЭлемент("АнализТребованийОбщее", Перечисления.НазначенияВидовДеятельности.Общее, Ложь);
	ЗаполнитьПредопределенныйЭлемент("АнализТребованийЗаказчика", Перечисления.НазначенияВидовДеятельности.ITПодразделение, Ложь);
	ЗаполнитьПредопределенныйЭлемент("ИзучениеОбщее", Перечисления.НазначенияВидовДеятельности.Общее, Ложь);
	ЗаполнитьПредопределенныйЭлемент("ИзучениеТехническойЗадачи", Перечисления.НазначенияВидовДеятельности.ITПодразделение, Ложь);
	ЗаполнитьПредопределенныйЭлемент("КонсультацияПользователей", Перечисления.НазначенияВидовДеятельности.ITПодразделение, Ложь);
	ЗаполнитьПредопределенныйЭлемент("КонсультацияПользователейОбщее", Перечисления.НазначенияВидовДеятельности.Общее, Ложь);
	ЗаполнитьПредопределенныйЭлемент("ОбсуждениеИзменений", Перечисления.НазначенияВидовДеятельности.ITПодразделение, Истина);
	ЗаполнитьПредопределенныйЭлемент("ПодготовкаАрхитектуры", Перечисления.НазначенияВидовДеятельности.ITПодразделение, Ложь);
	ЗаполнитьПредопределенныйЭлемент("ПодготовкаДокументацииОбщее", Перечисления.НазначенияВидовДеятельности.Общее, Ложь);
	ЗаполнитьПредопределенныйЭлемент("ПодготовкаДокументации", Перечисления.НазначенияВидовДеятельности.ITПодразделение, Ложь);
	ЗаполнитьПредопределенныйЭлемент("ПодготовкаТехническогоЗаданияОбщее", Перечисления.НазначенияВидовДеятельности.Общее, Ложь);
	ЗаполнитьПредопределенныйЭлемент("ПроектированиеОбщее", Перечисления.НазначенияВидовДеятельности.Общее, Ложь);
	ЗаполнитьПредопределенныйЭлемент("РеализацияИзменений", Перечисления.НазначенияВидовДеятельности.ITПодразделение, Ложь);
	ЗаполнитьПредопределенныйЭлемент("Тестирование", Перечисления.НазначенияВидовДеятельности.ITПодразделение, Ложь);
	ЗаполнитьПредопределенныйЭлемент("ТестированиеОбщее", Перечисления.НазначенияВидовДеятельности.Общее, Ложь);
	ЗаполнитьПредопределенныйЭлемент("ТехническиеРаботы", Перечисления.НазначенияВидовДеятельности.ITПодразделение, Ложь);	
		
КонецПроцедуры     

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПредопределенныйЭлемент(ИмяЭлемента, Назначение, ПрименяетсяДляСобрания) 
	
	Попытка
		Объект = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыДеятельности." + ИмяЭлемента);
	Исключение
		Сообщение = НСтр("ru = 'Предопределенный элемент ""%Параметр%"" не найден.'");
		Сообщение = СтрЗаменить(Сообщение, "%Параметр%", "Справочник.ВидыДеятельности." + ИмяЭлемента);
		ВызватьИсключение Сообщение;
	КонецПопытки;
	
	Если Объект = Неопределено Тогда  
		Сообщение = НСтр("ru = 'Предопределенный элемент ""%Параметр%"" не найден.'");
		Сообщение = СтрЗаменить(Сообщение, "%Параметр%", "ПланыВидовХарактеристик.ВидыДеятельности." + ИмяЭлемента);
		ВызватьИсключение Сообщение;
	КонецЕсли;
	
	Объект = Объект.ПолучитьОбъект();  
	
	Если НЕ ЗначениеЗаполнено(Объект.Назначение) Тогда
		Объект.Назначение = Назначение;
		Объект.ПрименяетсяДляСобрания = ПрименяетсяДляСобрания;
		Объект.Записать();
	КонецЕсли;   
	
КонецПроцедуры
 
#КонецОбласти
