///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДополнительныеРеквизиты.ПодключитьДополнительныеРеквизиты(Объект.Ссылка, ЭтотОбъект, "ГруппаДополнительныеРеквизиты");
	
	ЗаполнитьСписокВыбораАвтоматическогоПереводаЗадачи(Элементы.АвтоматическоеИзменениеСтатусаПослеОбновления.СписокВыбора);
	ЗаполнитьДополнительныеРеквизиты();
	
	Если НЕ УправлениеДоступомПовтИсп.ПроверитьДоступностьРоли("Администратор") Тогда
		Элементы.СтраницаТестировщики.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Удалим в таблице направлений дублирующиеся записи и пустые строки
	КоличествоЗаписей = ТекущийОбъект.НаправленияРазработкиВСистеме.Количество();
	
	Если КоличествоЗаписей > 0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВнешниеДанные.НаправлениеРазработки КАК НаправлениеРазработки
		|ПОМЕСТИТЬ ТаблицаНаправленийРазработки
		|ИЗ
		|	&ВнешниеДанные КАК ВнешниеДанные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаНаправленийРазработки.НаправлениеРазработки КАК НаправлениеРазработки
		|ИЗ
		|	ТаблицаНаправленийРазработки КАК ТаблицаНаправленийРазработки
		|ГДЕ
		|	ТаблицаНаправленийРазработки.НаправлениеРазработки <> ЗНАЧЕНИЕ(Справочник.НаправленияРазработки.ПустаяСсылка)";
		
		ВнешниеДанные = ТекущийОбъект.НаправленияРазработкиВСистеме.Выгрузить(, "НаправлениеРазработки");
		
		Запрос.УстановитьПараметр("ВнешниеДанные", ВнешниеДанные);
		
		ТекущийОбъект.НаправленияРазработкиВСистеме.Загрузить(Запрос.Выполнить().Выгрузить());
		
		Если КоличествоЗаписей > ТекущийОбъект.НаправленияРазработкиВСистеме.Количество() Тогда
			ПараметрыЗаписи.Вставить("УдаленыДублиНаправлений", Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьТаблицуДополнительныхРеквизитов();
	
	ДополнительныеРеквизиты.ПередЗаписьюОбъекта(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("УдаленыДублиНаправлений") Тогда
		ПоказатьОповещениеПользователя("Дубли направлений разработки", ,
		"Перед записью данных из списка направлений разработки были удалены повторяющиеся направления.",
		БиблиотекаКартинок.Информация32, СтатусОповещенияПользователя.Важное);
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ДополнительныеРеквизитыКлиент.ПередЗакрытиемФормы(ЭтотОбъект, ЗавершениеРаботы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ОткрытьДополнительныеРеквизиты(Команда)
	
	ДополнительныеРеквизитыКлиент.ОткрытьФормуДополнительныхРеквизитов(Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДополнительныеРеквизиты()
	
	ИмяРеквизита = ДополнительныеРеквизитыКлиентСервер.ИмяРеквизитаАдреса();
	АдресДополнительныхРеквизитов = ЭтотОбъект[ИмяРеквизита];
	
	ТаблицаДополнительныхРеквизитов = ПолучитьИзВременногоХранилища(АдресДополнительныхРеквизитов);
	Если ТаблицаДополнительныхРеквизитов <> Неопределено Тогда
		ИскомыйРеквизит = ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.АвтоматическоеИзменениеСтатусаПослеОбновления;
		
		НайденнаяСтрока = ТаблицаДополнительныхРеквизитов.Найти(ИскомыйРеквизит, "ВидРеквизита");
		Если НайденнаяСтрока <> Неопределено И ЗначениеЗаполнено(НайденнаяСтрока.Значение) Тогда
			АвтоматическоеИзменениеСтатусаПослеОбновления = НайденнаяСтрока.Значение;
		Иначе
			АвтоматическоеИзменениеСтатусаПослеОбновления = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСписокВыбораАвтоматическогоПереводаЗадачи(СписокЗначений)
	
	// Длинная строковая константа
	
	// BSLLS:LineLength-off
	Строка = "Переводить задачи из любого статуса в ""Тестирование"" (исключая статусы ""Протестирован"", ""Решен"", ""Приостановлен"")";
	// BSLLS:LineLength-on
	
	СписокЗначений.Очистить();
	СписокЗначений.Добавить(0, "Не использовать");
	СписокЗначений.Добавить(1, "Переводить задачи из статуса ""Публикация"" в ""Тестирование""");
	СписокЗначений.Добавить(2, Строка);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуДополнительныхРеквизитов()
	
	ИмяРеквизита = ДополнительныеРеквизитыКлиентСервер.ИмяРеквизитаАдреса();
	АдресДополнительныхРеквизитов = ЭтотОбъект[ИмяРеквизита];
	
	ТаблицаДополнительныхРеквизитов = ПолучитьИзВременногоХранилища(АдресДополнительныхРеквизитов);
	Если ТаблицаДополнительныхРеквизитов <> Неопределено Тогда
		ИскомыйРеквизит = ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.АвтоматическоеИзменениеСтатусаПослеОбновления;
		
		НайденнаяСтрока = ТаблицаДополнительныхРеквизитов.Найти(ИскомыйРеквизит, "ВидРеквизита");
		Если НайденнаяСтрока <> Неопределено Тогда
			НайденнаяСтрока.Значение = АвтоматическоеИзменениеСтатусаПослеОбновления;
		КонецЕсли;
	КонецЕсли;
	
	АдресДополнительныхРеквизитов = ПоместитьВоВременноеХранилище(ТаблицаДополнительныхРеквизитов,
		АдресДополнительныхРеквизитов);
	
КонецПроцедуры
	
#КонецОбласти
