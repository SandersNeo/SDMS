///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Добавляет обработчики обновления
//
// Параметры:
//  Обработчики	 - ТаблицаЗначений	 - см. ПриложениеВызовСервера.ПолучитьОбработчикиДанных
//
Процедура ДобавлениеОбработчиковОбновления(Обработчики) Экспорт     
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "*";
	Обработчик.Процедура = "Справочники.НазначенияЗадач.ПроверитьПредопределенныеЭлементы";
	
КонецПроцедуры

// Проверяет предопределенные настройки
//
Процедура ПроверитьПредопределенныеЭлементы() Экспорт 
	
	ЗаполнитьПредопределенныйЭлемент("Новая задача", "НоваяЗадача", "НоваяЗаявка", 0);
	ЗаполнитьПредопределенныйЭлемент("Улучшение", "Улучшение", "Улучшение", 1);
	ЗаполнитьПредопределенныйЭлемент("Улучшение ""Junior""", "УлучшениеJunior", "РазработчикУченик", 2);
	ЗаполнитьПредопределенныйЭлемент("Ошибка", "Ошибка", "Ошибка", 3);
	ЗаполнитьПредопределенныйЭлемент("Исследование", "Исследование", "Исследование", 4);
	ЗаполнитьПредопределенныйЭлемент("Техническая задача", "ТехническаяЗадача", "ТехническаяЗадача", 5);
	ЗаполнитьПредопределенныйЭлемент("Консультация", "Консультация", "НазначениеКонсультация", 6);	
	
КонецПроцедуры    

// Возвращает исходное описание Назначений задач
// 
// Возвращаемое значение:
// Таблица значений с колонками Ссылка, ИмяКартинки, Порядок, Наименование
//
Функция СтандартныеОписанияНазначений()
	
	МетаданныеСправочника = Метаданные.Справочники.НазначенияЗадач;
	
	ТаблицаСвойствНазначений = Новый ТаблицаЗначений;
	ТаблицаСвойствНазначений.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("СправочникСсылка.НазначенияЗадач"));
	ТаблицаСвойствНазначений.Колонки.Добавить("ИмяКартинки", МетаданныеСправочника.Реквизиты.ИмяКартинки.Тип);
	ТаблицаСвойствНазначений.Колонки.Добавить("Порядок", МетаданныеСправочника.Реквизиты.Порядок.Тип);
	ТаблицаСвойствНазначений.Колонки.Добавить("Наименование", ОбщегоНазначенияКлиентСервер.ОписаниеТипаСтрока(0));
	
	НоваяСтрока = ТаблицаСвойствНазначений.Добавить();
	НоваяСтрока.Ссылка = Справочники.НазначенияЗадач.НоваяЗадача;
	НоваяСтрока.ИмяКартинки = "НоваяЗаявка";
	НоваяСтрока.Порядок = 0;
	НоваяСтрока.Наименование = "Новая задача";
	
	НоваяСтрока = ТаблицаСвойствНазначений.Добавить();
	НоваяСтрока.Ссылка = Справочники.НазначенияЗадач.Улучшение;
	НоваяСтрока.ИмяКартинки = "Улучшение";
	НоваяСтрока.Порядок = 1;
	НоваяСтрока.Наименование = "Улучшение";
	
	НоваяСтрока = ТаблицаСвойствНазначений.Добавить();
	НоваяСтрока.Ссылка = Справочники.НазначенияЗадач.УлучшениеJunior;
	НоваяСтрока.ИмяКартинки = "РазработчикУченик";
	НоваяСтрока.Порядок = 2;
	НоваяСтрока.Наименование = "Улучшение ""Junior""";
	
	НоваяСтрока = ТаблицаСвойствНазначений.Добавить();
	НоваяСтрока.Ссылка = Справочники.НазначенияЗадач.Ошибка;
	НоваяСтрока.ИмяКартинки = "Ошибка";
	НоваяСтрока.Порядок = 3;
	НоваяСтрока.Наименование = "Ошибка";
	
	НоваяСтрока = ТаблицаСвойствНазначений.Добавить();
	НоваяСтрока.Ссылка = Справочники.НазначенияЗадач.Исследование;
	НоваяСтрока.ИмяКартинки = "Исследование";
	НоваяСтрока.Порядок = 4;
	НоваяСтрока.Наименование = "Исследование";
	
	НоваяСтрока = ТаблицаСвойствНазначений.Добавить();
	НоваяСтрока.Ссылка = Справочники.НазначенияЗадач.ТехническаяЗадача;
	НоваяСтрока.ИмяКартинки = "ТехническаяЗадача";
	НоваяСтрока.Порядок = 5;
	НоваяСтрока.Наименование = "Техническая задача";
	
	Возврат ТаблицаСвойствНазначений;
	
КонецФункции

// Выполняет заполнение предопределенных элементов справочника НазначенияЗадач стандартными настройками
//
Процедура УстановитьСтандартныеНазначения() Экспорт
	
	ТаблицаНазначенийЗадач = СтандартныеОписанияНазначений();
	
	НачатьТранзакцию();
	
	БлокировкаДанных = Новый БлокировкаДанных;
	ЭлементБлокировки = БлокировкаДанных.Добавить("Справочник.НазначенияЗадач");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	БлокировкаДанных.Заблокировать();
	
	Попытка
		Для Каждого Строка Из ТаблицаНазначенийЗадач Цикл
			СправочникОбъект = Строка.Ссылка.ПолучитьОбъект();
			ЗаполнитьЗначенияСвойств(СправочникОбъект, Строка);
			СправочникОбъект.Записать();
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации("Заполнение справочника Назначения задач", УровеньЖурналаРегистрации.Ошибка, , , "При заполнении справочника произошла ошибка: " + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПредопределенныйЭлемент(Наименование, ИмяЭлемента, ИмяКартинки, Порядок) 
	
	Попытка
		Объект = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.НазначенияЗадач." + ИмяЭлемента);
	Исключение
		Сообщение = НСтр("ru = 'Предопределенный элемент ""%Параметр%"" не найден.'");
		Сообщение = СтрЗаменить(Сообщение, "%Параметр%", "Справочник.НазначенияЗадач." + ИмяЭлемента);
		ВызватьИсключение Сообщение;
	КонецПопытки;
	
	НужнаЗапись = Ложь;
		
	Если Объект = Неопределено Тогда  
		Объект = Справочники.НазначенияЗадач.СоздатьЭлемент();
		Объект.ИмяПредопределенныхДанных = ИмяЭлемента;     
		Объект.ИмяКартинки = ИмяКартинки;     
		Объект.Наименование = Наименование;     
		Объект.Порядок = Порядок;     
		НужнаЗапись = Истина;
	Иначе
		Объект = Объект.ПолучитьОбъект();  
		
		Если Объект.ИмяКартинки = "" Тогда
			Объект.ИмяКартинки = ИмяКартинки;
			Объект.Порядок = Порядок;
			НужнаЗапись = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если НужнаЗапись Тогда
		Объект.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти            

#КонецЕсли
