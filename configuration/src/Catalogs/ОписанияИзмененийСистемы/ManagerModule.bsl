///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Проверяет необходимость открытия для пользователя окна с описанием изменений
// системы.
//
// Возвращаемое значение:
//  Булево. Истина - необходиимо открыть окно с описанием изменений. В противном 
//  случае Ложь.
//
Функция НеобходимоПоказатьОкноОписанияИзмененийСистемы() Экспорт

	// Нужно проверить, есть ли новые описания.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(ПросмотренныеОписанияИзмененийСистемы.ДатаСозданияОписания), ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаСоздания
	|ПОМЕСТИТЬ ДатаСозданияПоследнегоПросмотренногоОписания
	|ИЗ
	|	РегистрСведений.ПросмотренныеОписанияИзмененийСистемы КАК ПросмотренныеОписанияИзмененийСистемы
	|ГДЕ
	|	ПросмотренныеОписанияИзмененийСистемы.Пользователь = &Пользователь
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Поле1
	|ИЗ
	|	Справочник.ОписанияИзмененийСистемы КАК ОписанияИзмененийСистемы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДатаСозданияПоследнегоПросмотренногоОписания КАК ДатаСозданияПоследнегоПросмотренногоОписания
	|		ПО ОписанияИзмененийСистемы.ДатаСоздания > ДатаСозданияПоследнегоПросмотренногоОписания.ДатаСоздания
	|			И (НЕ ОписанияИзмененийСистемы.ПометкаУдаления)
	|			И (ОписанияИзмененийСистемы.ДатаПубликации <= &ТекущаяДата)";
	
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("ТекущаяДата",  ТекущаяДатаСеанса());
	
	ПоказатьОписаниеИзменений = НЕ Запрос.Выполнить().Пустой();
	
	Возврат ПоказатьОписаниеИзменений;
	
КонецФункции

// Точка входа для формирования дайджеста изменений.
// Создает новый элемент справочника и собирает дайждест из описаний изменений к задачам
//
Процедура ПодготовитьДайджест() Экспорт
	
	Данные = ПолучитьТекстВнеплановогоДайджеста(Справочники.СистемыУчета.ПолучитьСистемуУчетаSDMS());
	
	Если Данные.Описание <> "" Тогда 
		Добавить(Данные.Описание);
		РегистрыСведений.ОписаниеИзмененийКЗадачам.ОтметитьОпубликованым(Данные.МассивЗадач);
	КонецЕсли;
	
КонецПроцедуры

// Возвращает текст дайджеста
//
// Параметры:
//  СистемыУчета - Массив, СписокЗначений	 - массив систем учетов
// 
// Возвращаемое значение:
//  Данные - Структура данных дайджеста
//
Функция ПолучитьТекстВнеплановогоДайджеста(Знач СистемыУчета) Экспорт
	
	Результат = Новый Структура("МассивЗадач, Описание", Новый Массив, "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОписаниеИзменений.Задача КАК Задача,
	|	ОписаниеИзменений.ДатаДобавления КАК ДатаДобавления,
	|	ОписаниеИзменений.Описание КАК Описание,
	|	ОписаниеИзменений.ТипИзменения КАК ТипИзменения,
	|	ПРЕДСТАВЛЕНИЕ(ОписаниеИзменений.ТипИзменения) КАК ПредставлениеТипаИзменения,
	|	ОписаниеИзменений.ДатаПубликации КАК ДатаПубликации
	|ПОМЕСТИТЬ ОписанияДайджестов
	|ИЗ
	|	РегистрСведений.ОписаниеИзмененийКЗадачам КАК ОписаниеИзменений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Задача КАК ДокументЗадача
	|		ПО ОписаниеИзменений.Задача = ДокументЗадача.Ссылка
	|ГДЕ
	|	НЕ ОписаниеИзменений.Опубликовано
	|	И ОписаниеИзменений.ВидДайджеста = ЗНАЧЕНИЕ(Перечисление.ВидыДайджестов.Внеплановый)
	|	И ДокументЗадача.СистемаУчета В(&СистемаУчета)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Файлы.Наименование КАК Наименование,
	|	Файлы.Высота КАК Высота,
	|	Файлы.Ширина КАК Ширина
	|ИЗ
	|	ОписанияДайджестов КАК ОписанияДайджестов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПрикрепленныеФайлы КАК ПрикрепленныеФайлы
	|		ПО (ОписанияДайджестов.Задача = (ВЫРАЗИТЬ(ПрикрепленныеФайлы.Объект КАК Документ.Задача)))
	|			И (ПрикрепленныеФайлы.Назначение = ЗНАЧЕНИЕ(Перечисление.НазначенияФайлов.ОписаниеИзмененийКЗадаче))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Файлы КАК Файлы
	|		ПО (ПрикрепленныеФайлы.Файл = Файлы.Ссылка)
	|ГДЕ
	|	НЕ Файлы.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОписанияДайджестов.Задача КАК Задача,
	|	ОписанияДайджестов.ДатаДобавления КАК ДатаДобавления,
	|	ОписанияДайджестов.Описание КАК Описание,
	|	ОписанияДайджестов.ТипИзменения КАК ТипИзменения,
	|	ОписанияДайджестов.ПредставлениеТипаИзменения КАК ПредставлениеТипаИзменения
	|ИЗ
	|	ОписанияДайджестов КАК ОписанияДайджестов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Перечисление.ТипыИзмененийСистемы КАК ТипыИзмененийСистемы
	|		ПО ОписанияДайджестов.ТипИзменения = ТипыИзмененийСистемы.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипыИзмененийСистемы.Порядок,
	|	ОписанияДайджестов.ДатаПубликации
	|ИТОГИ ПО
	|	ТипИзменения,
	|	Задача";
	
	Запрос.УстановитьПараметр("СистемаУчета", СистемыУчета); 
	Пакеты = Запрос.ВыполнитьПакет();
	ДанныеКартинок = Пакеты.Получить(1).Выгрузить();
	РезультатЗапроса = Пакеты.Получить(2);
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ЧастиОписания = Новый Массив;
		
		ЗаголовокДайджеста = СтрШаблон("<h1>Изменения системы от %1</h1>", Формат(ТекущаяДатаСеанса(), "ДФ=dd.MM.yyyy"));
		ЧастиОписания.Добавить(ЗаголовокДайджеста);
		
		ВыборкаТипИзменения = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ТипИзменения");
		
		Пока ВыборкаТипИзменения.Следующий() Цикл
			ТипИзмененияДайджеста = СтрШаблон("<h2>%1</h2>", ВыборкаТипИзменения.ТипИзменения);
			ЧастиОписания.Добавить(ТипИзмененияДайджеста);
			
			ВыборкаЗадача = ВыборкаТипИзменения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаЗадача.Следующий() Цикл
				ВыборкаОписание = ВыборкаЗадача.Выбрать();
				
				Пока ВыборкаОписание.Следующий() Цикл
					ЧастиОписания.Добавить(ВыборкаОписание.Описание.Получить());
					
					ДанныеЗадачи = Новый Структура("Задача, ДатаДобавления");
					ЗаполнитьЗначенияСвойств(ДанныеЗадачи, ВыборкаОписание);
					
					Результат.МассивЗадач.Добавить(ДанныеЗадачи);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		Результат.Описание = СтрСоединить(ЧастиОписания, Символы.ПС);
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

// Создать HTMLДайджеста
//
// Параметры:
//  ИсходныйТекст	 - Строка	 - текст дайджеста в Markdown
// 
// Возвращаемое значение:
//  Строка - текст дайджеств в html
//
Функция СоздатьHTMLДайджеста(Знач ИсходныйТекст) Экспорт
	
	Шаблон = 
	"<!doctype html>
	|<html>
	|<head>
	|	<meta charset=""utf-8""/>
	|	<meta http-equiv=""X-UA-Compatible"" content=""IE=9""/>
	|	<link href=""%1/css/redmine.min.css"" rel=""stylesheet"" charset=""utf-8"">
	|	<style>
	|		.incorrect {
	|			border-bottom: 2px solid red
	|		}
	|		.correct {
	|			border-bottom: 2px solid #90EE90
	|		}
	|		.current {
	|			background:#FFA07A
	|		}
	|		.mistakesLink {
	|			text-decoration:none;color:black;
	|		}
	|		.markdown-body {
	|			box-sizing: border-box;
	|			min-width: 200px;
	|			margin: 0 auto;
	|			padding: 45px;
	|		}
	|	</style>
	|</head>
	|<body>
	|	<div id=""content"" class=""markdown-body"">%2</div>
	|</body>
	|</html>";
	
	Возврат СтрШаблон(Шаблон, WebОкружениеВызовСервера.АдресПубликацииСлужебныхДанных(), ИсходныйТекст);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Создает новый элемент справочника
//
// Параметры:
//  Описание - Строка	 - текст дайджеста в формате HTML
//
Процедура Добавить(Знач Описание)
	
	НовыйЭлемент = СоздатьЭлемент();
	НовыйЭлемент.ДатаСоздания = ТекущаяДатаСеанса();
	НовыйЭлемент.ДатаПубликации = ТекущаяДатаСеанса();
	НовыйЭлемент.Описание = Новый ХранилищеЗначения(Описание, Новый СжатиеДанных(9));
	
	НовыйЭлемент.Записать();
	
КонецПроцедуры

#КонецОбласти
