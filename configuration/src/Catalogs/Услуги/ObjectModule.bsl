///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер ИЛИ ТолстыйКлиент ИЛИ ВнешнееСоединение Тогда

#Область ОбъявлениеПеременных

Перем АктуализироватьВидыДеятельностиУслуг;

// Хранит состояние объекта до записи
Перем ДанныеДоЗаписи;

// Хранит признак, указывающий, что объект еще не записан в БД
Перем ЭтоНовыйОбъект;

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоНовыйОбъект = ЭтоНовый();
	
	// Заполнение служебных реквизитов новых групп и элементов
	Если ЭтоНовыйОбъект Тогда
		ЗаполнитьСлужебныеРеквизитыНовогоОбъекта();
		ДанныеДоЗаписи = Новый Структура("УровеньКвалификации, Должности", Перечисления.УровниКвалификацииITДолжностей.ПустаяСсылка()); 
	ИначеЕсли НЕ ЭтоГруппа Тогда 
		ДанныеДоЗаписи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "УровеньКвалификации, Должности");
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда
		ОбщегоНазначения.ОчисткаДублейТабличнойЧасти(Должности, "Должность");
		ОбщегоНазначения.ОчисткаДублейТабличнойЧасти(ВидыДеятельности, "ВидДеятельности");
	КонецЕсли;
	
	АктуализироватьВидыДеятельностиУслуг = (ИзменилисьКлючевыеРеквизиты() 
		ИЛИ ИзменилсяСоставВидовДеятельности());
			
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если АктуализироватьВидыДеятельностиУслуг Тогда
		Справочники.ВидыДеятельностиУслуг.ОбработатьИзменениеУслуги(Ссылка);
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда 
		
		ОбновитьУровеньКвалификацииДолжностей = ЗначениеЗаполнено(УровеньКвалификации);
		
		Если НЕ ЭтоНовыйОбъект Тогда
			ДолжностиДоЗаписи = ДанныеДоЗаписи.Должности.Выгрузить();
		Иначе
			ДолжностиДоЗаписи = Должности.Выгрузить();
			ДолжностиДоЗаписи.Очистить();
		КонецЕсли;
		
		ПересчитыватьДоступныеУслугиФилиала(ДолжностиДоЗаписи); 
		
		Если ОбновитьУровеньКвалификацииДолжностей Тогда
			ОбновитьУровеньКвалификацииДолжностей(ДолжностиДоЗаписи);
		КонецЕсли;		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИзменилисьКлючевыеРеквизиты()
	
	СтарыеЗначения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "КраткоеНаименование, Используется, ПометкаУдаления");
	
	Возврат (СтарыеЗначения.КраткоеНаименование <> КраткоеНаименование 
		ИЛИ СтарыеЗначения.ПометкаУдаления <> ПометкаУдаления
		ИЛИ СтарыеЗначения.Используется <> Используется);
	
КонецФункции

Функция ИзменилсяСоставВидовДеятельности()
	
	ВидыДеятельностиУслуги = ВидыДеятельности.Выгрузить(, "ВидДеятельности");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаЗначений.ВидДеятельности КАК ВидДеятельности
	|ПОМЕСТИТЬ НовыеВидыДеятельности
	|ИЗ
	|	&ТаблицаЗначений КАК ТаблицаЗначений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВложенныйЗапрос.ВидДеятельности КАК ВидДеятельности,
	|	СУММА(ВложенныйЗапрос.Счетчик) КАК Счетчик
	|ИЗ
	|	(ВЫБРАТЬ
	|		УслугиВидыДеятельности.ВидДеятельности КАК ВидДеятельности,
	|		1 КАК Счетчик
	|	ИЗ
	|		Справочник.Услуги.ВидыДеятельности КАК УслугиВидыДеятельности
	|	ГДЕ
	|		УслугиВидыДеятельности.Ссылка = &Услуга
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НовыеВидыДеятельности.ВидДеятельности,
	|		1
	|	ИЗ
	|		НовыеВидыДеятельности КАК НовыеВидыДеятельности) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ВидДеятельности
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Счетчик) = 1";
	
	Запрос.УстановитьПараметр("ТаблицаЗначений", ВидыДеятельностиУслуги);
	Запрос.УстановитьПараметр("Услуга", Ссылка);
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

Процедура ЗаполнитьСлужебныеРеквизитыНовогоОбъекта()
	
	Автор = ПараметрыСеанса.ТекущийПользователь;
	ДатаСоздания = ТекущаяДатаСеанса();
	
КонецПроцедуры

Процедура ОбновитьУровеньКвалификацииДолжностей(ДолжностиДоЗаписи)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДолжностиДоЗаписи.Должность КАК Должность
	|ПОМЕСТИТЬ ДолжностиДоЗаписи
	|ИЗ
	|	&ДолжностиДоЗаписи КАК ДолжностиДоЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УслугиДолжности.Должность КАК Должность
	|ПОМЕСТИТЬ ДолжностиУслуги
	|ИЗ
	|	Справочник.Услуги.Должности КАК УслугиДолжности
	|ГДЕ
	|	УслугиДолжности.Ссылка = &Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ДолжностиУслуги.Должность, ДолжностиДоЗаписи.Должность) КАК Должность,
	|	ВЫБОР
	|		КОГДА ДолжностиУслуги.Должность ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.УровниКвалификацииITДолжностей.ПустаяСсылка)
	|		ИНАЧЕ &УровеньКвалификации
	|	КОНЕЦ КАК НовыйУровеньКвалификации
	|ПОМЕСТИТЬ Должности
	|ИЗ
	|	ДолжностиДоЗаписи КАК ДолжностиДоЗаписи
	|		ПОЛНОЕ СОЕДИНЕНИЕ ДолжностиУслуги КАК ДолжностиУслуги
	|		ПО (ДолжностиУслуги.Должность = ДолжностиДоЗаписи.Должность)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Должности.Должность КАК Должность,
	|	Должности.НовыйУровеньКвалификации КАК НовыйУровеньКвалификации
	|ИЗ
	|	Должности КАК Должности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Должности КАК СправочникДолжности
	|		ПО Должности.Должность = СправочникДолжности.Ссылка
	|ГДЕ
	|	Должности.НовыйУровеньКвалификации <> СправочникДолжности.УровеньКвалификации";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Услуга", Ссылка);
	Запрос.УстановитьПараметр("ДолжностиДоЗаписи", ДолжностиДоЗаписи);
	Запрос.УстановитьПараметр("УровеньКвалификации", УровеньКвалификации);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		
		НачатьТранзакцию();
		Попытка
			Пока Выборка.Следующий() Цикл
				ДолжностьОбъект = Выборка.Должность.ПолучитьОбъект();
				ДолжностьОбъект.УровеньКвалификации = Выборка.НовыйУровеньКвалификации;
				ДолжностьОбъект.Записать();
			КонецЦикла;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ЗаписьЖурналаРегистрации("Обновление уровеней квалификации должностей", УровеньЖурналаРегистрации.Ошибка, , 
				Ссылка, ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПересчитыватьДоступныеУслугиФилиала(ДолжностиДоЗаписи)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДолжностиДоЗаписи.Должность КАК Должность
	|ПОМЕСТИТЬ ДолжностиДоЗаписи
	|ИЗ
	|	&ДолжностиДоЗаписи КАК ДолжностиДоЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УслугиДолжности.Должность КАК Должность
	|ПОМЕСТИТЬ ДолжностиУслуги
	|ИЗ
	|	Справочник.Услуги.Должности КАК УслугиДолжности
	|ГДЕ
	|	УслугиДолжности.Ссылка = &Услуга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ДолжностиУслуги.Должность, ДолжностиДоЗаписи.Должность) КАК Должность
	|ИЗ
	|	ДолжностиДоЗаписи КАК ДолжностиДоЗаписи
	|		ПОЛНОЕ СОЕДИНЕНИЕ ДолжностиУслуги КАК ДолжностиУслуги
	|		ПО (ДолжностиУслуги.Должность = ДолжностиДоЗаписи.Должность)
	|ГДЕ
	|	(ДолжностиУслуги.Должность ЕСТЬ NULL
	|			ИЛИ ДолжностиДоЗаписи.Должность ЕСТЬ NULL)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Услуга", Ссылка);
	Запрос.УстановитьПараметр("ДолжностиДоЗаписи", ДолжностиДоЗаписи);
	
	ТекущаяДата = ТекущаяДатаСеанса();
	РезультатЗапроса = Запрос.Выполнить(); 
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			РегистрыСведений.ОчередьСобытийНаОбработку.ДобавитьПроверкуДоступныхУслугФилиала(Выборка.Должность, ТекущаяДата);			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
