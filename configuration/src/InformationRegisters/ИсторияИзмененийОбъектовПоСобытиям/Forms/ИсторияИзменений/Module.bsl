///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Источник = Параметры.Источник;
//	Параметры.Свойство("ПоказыватьПрочиеСобытия", ПрочиеИзменения);	
	ПанельНавигации.Скопировать(ЭтотОбъект, Параметры);
	
	ЛентаИзменений = ОбновитьЛентуИсторииИзмененийНаСервере(Источник, СвязанныеОбъекты);
	
	Если КлиентскоеПриложение.ТипПриложения() = ТипКлиентскогоПриложения.ВебКлиент Тогда
		Элементы.Изменения.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)    
	
	ПанельНавигацииКлиент.ПриОткрытии(Элементы, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ПанельНавигацииКлиент.ОбработкаОповещения(ЭтотОбъект, ЭтотОбъект.Источник, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИзмененияПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	Если ДанныеСобытия.Button <> Неопределено И ДанныеСобытия.Button.id = "refresh" Тогда
		ЛентаИзменений = ОбновитьЛентуИсторииИзмененийНаСервере(Источник, СвязанныеОбъекты);

	ИначеЕсли СтрНайти(ДанныеСобытия.Href, "sdms_user_") > 0 Тогда
		ИдентификаторПользователя = Новый УникальныйИдентификатор(Сред(ДанныеСобытия.Href, СтрНайти(ДанныеСобытия.Href, "sdms_user_") + 10));
		ИнтерфейсПриложенияКлиент.ОткрытьИнформациюОПользователе(ЭтотОбъект, ИдентификаторПользователя, СтандартнаяОбработка);

	ИначеЕсли СтрНайти(ДанныеСобытия.Href, "changelog_") > 0 Тогда
		СтандартнаяОбработка = Ложь;
		ЧастиСсылки = СтрРазделить(ДанныеСобытия.Href, "_");
		ИндексПоследнейЧасти = ЧастиСсылки.ВГраница();
		
		// Получаем строковое представление даты из навигационной ссылки
		// и конвертируем его в дату
		Попытка
			ДатаИзменения = Дата(ЧастиСсылки[ИндексПоследнейЧасти]); 
		Исключение
			ЗаписьВЖурналРегистрации(ЭтотОбъект.Источник, ОписаниеОшибки(), ДанныеСобытия.Href);
			Возврат;
		КонецПопытки;			
		
		ИсточникИзменения = ПолучитьИсточникПоИдентификатору(ЧастиСсылки[ИндексПоследнейЧасти - 1]);
		
		Если ИсточникИзменения <> Неопределено Тогда
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("ДатаИзменения", ДатаИзменения);
			ПараметрыОткрытия.Вставить("ИзмененныйОбъект", ИсточникИзменения);
			
			ОткрытьФорму("РегистрСведений.ИсторияИзмененийОписанийОбъектов.Форма.ПросмотрИсторииИзменений", ПараметрыОткрытия,
				ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры   

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ПанельНавигацииНажатие(Команда)
	
	ПанельНавигацииКлиент.Нажатие(ЭтотОбъект, Команда, Истина);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ЗаписьВЖурналРегистрации(Знач СсылкаНаИсточник, Знач  ОписаниеОшибки, Знач НавигационнаяСсылка)
	
	ШаблонКомментария = "Ошибка просмотра истории описания по причиние: %1. Навигационная ссылка: %2";
	
	ЗаписьЖурналаРегистрации("Ошибка просмотра истории описания", УровеньЖурналаРегистрации.Ошибка, , СсылкаНаИсточник, 
			СтрШаблон(ШаблонКомментария, ОписаниеОшибки, НавигационнаяСсылка));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбновитьЛентуИсторииИзмененийНаСервере(Знач Ссылка, Знач СвязанныеОбъекты, ОбщееКоличествоВажныхСобытий = Неопределено)
		
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СвязьОбъектовСЗаявкамиНаРазработку.Объект КАК Ссылка
	|ПОМЕСТИТЬ СвязанныеОбъекты
	|ИЗ
	|	РегистрСведений.СвязьОбъектовСЗаявкамиНаРазработку КАК СвязьОбъектовСЗаявкамиНаРазработку
	|ГДЕ
	|	СвязьОбъектовСЗаявкамиНаРазработку.Заявка = &Источник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Источник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Задача.Ссылка КАК Ссылка,
	|	Задача.Статус КАК Статус
	|ПОМЕСТИТЬ ОбъектыСтатусы
	|ИЗ
	|	СвязанныеОбъекты КАК СвязанныеОбъекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Задача КАК Задача
	|		ПО СвязанныеОбъекты.Ссылка = Задача.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявкаНаРазработку.Ссылка,
	|	ЕСТЬNULL(МинимальныеСтатусыЗаявок.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.Новый))
	|ИЗ
	|	СвязанныеОбъекты КАК СвязанныеОбъекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку КАК ЗаявкаНаРазработку
	|		ПО СвязанныеОбъекты.Ссылка = ЗаявкаНаРазработку.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальныеСтатусыЗаявок КАК МинимальныеСтатусыЗаявок
	|		ПО (ЗаявкаНаРазработку.Ссылка = МинимальныеСтатусыЗаявок.Заявка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВнутреннееЗадание.Ссылка,
	|	ВнутреннееЗадание.Статус
	|ИЗ
	|	СвязанныеОбъекты КАК СвязанныеОбъекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееЗадание КАК ВнутреннееЗадание
	|		ПО СвязанныеОбъекты.Ссылка = ВнутреннееЗадание.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Проекты.Ссылка,
	|	Проекты.Статус
	|ИЗ
	|	СвязанныеОбъекты КАК СвязанныеОбъекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Проекты КАК Проекты
	|		ПО СвязанныеОбъекты.Ссылка = Проекты.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СвязанныеОбъекты.Ссылка,
	|	NULL
	|ИЗ
	|	СвязанныеОбъекты КАК СвязанныеОбъекты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыСтатусы.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ОбъектыСтатусы.Статус) КАК Статус
	|ПОМЕСТИТЬ СтатусыОбъектов
	|ИЗ
	|	ОбъектыСтатусы КАК ОбъектыСтатусы
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбъектыСтатусы.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыСтатусы.Ссылка КАК Ссылка,
	|	ОбъектыСтатусы.Ссылка КАК ОбъектОписание,
	|	ОбъектыСтатусы.Статус КАК Статус,
	|	"""" КАК ТипОбъекта,
	|	СтатусыОбъектов.Наименование КАК СтатусПредставление,
	|	СтатусыОбъектов.ИмяКартинкиВБиблиотеке КАК ИмяКартинки
	|ПОМЕСТИТЬ ОтобранныеОбъекты
	|ИЗ
	|	СтатусыОбъектов КАК ОбъектыСтатусы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО ОбъектыСтатусы.Статус = СтатусыОбъектов.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбъектыСтатусы.Ссылка,
	|	ОбъектыСтатусы.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ПустаяСсылка),
	|	"""",
	|	"""",
	|	""""
	|ИЗ
	|	СтатусыОбъектов КАК ОбъектыСтатусы
	|ГДЕ
	|	ОбъектыСтатусы.Статус ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияИзмененийОбъектовПоСобытиям.Объект КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ИсторияИзмененийОбъектовПоСобытиям.Объект) КАК ПредставлениеСсылки,
	|	ИсторияИзмененийОбъектовПоСобытиям.Период КАК Дата,
	|	ИсторияИзмененийОбъектовПоСобытиям.Автор КАК Пользователь,
	|	ИсторияИзмененийОбъектовПоСобытиям.Данные КАК Описание,
	|	ИсторияИзмененийОбъектовПоСобытиям.КатегорияСобытия КАК КатегорияСобытия,
	|	ОтобранныеОбъекты.ТипОбъекта КАК ТипОбъекта,
	|	ОтобранныеОбъекты.Статус КАК Статус,
	|	ОтобранныеОбъекты.СтатусПредставление КАК СтатусПредставление,
	|	ОтобранныеОбъекты.ИмяКартинки КАК ИмяКартинки
	|ПОМЕСТИТЬ ИсторияИзмененияОбъектов
	|ИЗ
	|	ОтобранныеОбъекты КАК ОтобранныеОбъекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияИзмененийОбъектовПоСобытиям КАК ИсторияИзмененийОбъектовПоСобытиям
	|		ПО ОтобранныеОбъекты.ОбъектОписание = ИсторияИзмененийОбъектовПоСобытиям.Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияИзмененияОбъектов.Ссылка КАК Ссылка,
	|	ИсторияИзмененияОбъектов.ПредставлениеСсылки КАК ПредставлениеСсылки,
	|	ИсторияИзмененияОбъектов.Дата КАК Дата,
	|	ИсторияИзмененияОбъектов.Пользователь КАК Пользователь,
	|	"""" КАК ВидОписания,
	|	ИсторияИзмененияОбъектов.Описание КАК Описание,
	|	ИсторияИзмененияОбъектов.КатегорияСобытия КАК КатегорияСобытия,
	|	ИсторияИзмененияОбъектов.Статус КАК Статус,
	|	ИсторияИзмененияОбъектов.СтатусПредставление КАК СтатусПредставление,
	|	ИсторияИзмененияОбъектов.ИмяКартинки КАК ИмяКартинки
	|ПОМЕСТИТЬ ПолнаяИсторияИзмененийОбъектов
	|ИЗ
	|	ИсторияИзмененияОбъектов КАК ИсторияИзмененияОбъектов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтобранныеОбъекты.Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ОтобранныеОбъекты.Ссылка),
	|	ИсторияИзмененийОписанийОбъектов.Дата,
	|	ИсторияИзмененийОписанийОбъектов.Автор,
	|	ИсторияИзмененийОписанийОбъектов.ВидОписания,
	|	"""",
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииСобытийИсторияИзменений.Главное),
	|	ОтобранныеОбъекты.Статус,
	|	ОтобранныеОбъекты.СтатусПредставление,
	|	ОтобранныеОбъекты.ИмяКартинки
	|ИЗ
	|	ОтобранныеОбъекты КАК ОтобранныеОбъекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияИзмененийОписанийОбъектов КАК ИсторияИзмененийОписанийОбъектов
	|		ПО ОтобранныеОбъекты.ОбъектОписание = ИсторияИзмененийОписанийОбъектов.Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПолнаяИсторияИзмененийОбъектов.Ссылка КАК Ссылка,
	|	ПолнаяИсторияИзмененийОбъектов.ВидОписания КАК ВидОписания,
	|	ПолнаяИсторияИзмененийОбъектов.Дата КАК Дата,
	|	ПолнаяИсторияИзмененийОбъектов.ПредставлениеСсылки КАК ПредставлениеСсылки,
	|	ДОБАВИТЬКДАТЕ(ПолнаяИсторияИзмененийОбъектов.Дата, ЧАС, &Смещение) КАК ДатаСеанса,
	|	ПолнаяИсторияИзмененийОбъектов.Пользователь КАК Пользователь,
	|	Пользователи.ФИО КАК ПользовательПредставление,
	|	ПолнаяИсторияИзмененийОбъектов.Описание КАК Описание,
	|	ПолнаяИсторияИзмененийОбъектов.КатегорияСобытия КАК КатегорияСобытия,
	|	ПолнаяИсторияИзмененийОбъектов.Статус КАК Статус,
	|	ПолнаяИсторияИзмененийОбъектов.СтатусПредставление КАК СтатусПредставление,
	|	ПолнаяИсторияИзмененийОбъектов.ИмяКартинки КАК ИмяКартинки
	|ИЗ
	|	ПолнаяИсторияИзмененийОбъектов КАК ПолнаяИсторияИзмененийОбъектов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО (Пользователи.Ссылка = ПолнаяИсторияИзмененийОбъектов.Пользователь)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ
	|ИТОГИ
	|	МАКСИМУМ(ПредставлениеСсылки),
	|	МАКСИМУМ(Пользователь),
	|	МАКСИМУМ(ПользовательПредставление),
	|	МАКСИМУМ(Статус),
	|	МАКСИМУМ(СтатусПредставление),
	|	МАКСИМУМ(ИмяКартинки)
	|ПО
	|	Ссылка,
	|	Дата";
	
	Смещение = ПовторноеИспользованиеВызовСервера.ПолучитьСдвигЧасовогоПояса();
	ПостроительЗапроса.Параметры.Вставить("Источник", Ссылка);
	ПостроительЗапроса.Параметры.Вставить("Смещение", Смещение);
	ПостроительЗапроса.Выполнить();
	
	ШаблоныЛентыИстории = РегистрыСведений.ИсторияИзмененийОбъектовПоСобытиям.ШаблоныЛентыИсторииИзменений();
	КорневойURL = Константы.КорневойURL.Получить();
	Стили = РегистрыСведений.ИсторияИзмененийОбъектовПоСобытиям.ПолучитьМакет("Стили").ПолучитьТекст();
	
	РезультатЗапроса = ПостроительЗапроса.Результат;	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
				
		Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ОбъектыИстории = Новый Массив;
		ДополнительныеСтилиОбъекта = "";
		
		Пока Выборка.Следующий() Цикл
			ТипЗнчСсылка = ТипЗнч(Выборка.Ссылка);
			
			Если СвязанныеОбъекты.НайтиПоЗначению(Выборка.Ссылка) = Неопределено Тогда
				СвязанныеОбъекты.Добавить(Выборка.Ссылка, XMLСтрока(Выборка.Ссылка));
			КонецЕсли;
			
			СобытияОбъекта = Новый Массив;
			ВыборкаДата = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаДата.Следующий() Цикл
				ВыборкаСобытие = ВыборкаДата.Выбрать();
				СобытияПериода = Новый Массив;
				
				ВсегоСобытий = 0;
				НомерСобытияПрочее = 0;
				
				Пока ВыборкаСобытие.Следующий() Цикл
					Если ВыборкаСобытие.ВидОписания = Перечисления.ВидыОписания.ПримечаниеТестировщика Тогда
						СтруктураДанные = Новый Структура("Событие", "ИзмененоПримечаниеТестировщика");
						
						Если СвязанныеОбъекты.НайтиПоЗначению(ВыборкаСобытие.Ссылка) = Неопределено Тогда
							СвязанныеОбъекты.Добавить(ВыборкаСобытие.Ссылка, XMLСтрока(ВыборкаСобытие.Ссылка));
						КонецЕсли;
						
                    ИначеЕсли ВыборкаСобытие.ВидОписания = Перечисления.ВидыОписания.ПримечаниеРазработчика Тогда
						СтруктураДанные = Новый Структура("Событие", "ИзмененоПримечаниеРазработчика");
						
						Если СвязанныеОбъекты.НайтиПоЗначению(ВыборкаСобытие.Ссылка) = Неопределено Тогда
							СвязанныеОбъекты.Добавить(ВыборкаСобытие.Ссылка, XMLСтрока(ВыборкаСобытие.Ссылка));
						КонецЕсли;
						
					ИначеЕсли НЕ ЗначениеЗаполнено(ВыборкаСобытие.Описание) Тогда
						СтруктураДанные = Новый Структура("Событие", "ИзмененоОписание");					
					Иначе
						СтруктураДанные = ОбщегоНазначения.ПрочитатьСодержимоеJSON(ВыборкаСобытие.Описание);
					КонецЕсли;

					Если ВыборкаСобытие.КатегорияСобытия <> Перечисления.КатегорииСобытийИсторияИзменений.Главное Тогда
						СтильСобытия = " additional-change";
						НомерСобытияПрочее = НомерСобытияПрочее +1;
					Иначе
						СтильСобытия = "";
					КонецЕсли;
						
					Если СтруктураДанные.Событие = "ИзмененоОписание" Тогда
						ШаблонОписанияИзменений = "Изменено описание. <a href='changelog_%1_%2'>Показать различия</a>";	
						
						ТекстСобытия = СтрШаблон(ШаблонОписанияИзменений, XMLСтрока(ВыборкаСобытие.Ссылка),
							Формат(ВыборкаСобытие.Дата, "ДФ='yyyyMMddHHmmss'"));
						СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.Событие, СтильСобытия, ТекстСобытия);
						
					ИначеЕсли СтруктураДанные.Событие = "ИзмененоПримечаниеТестировщика" Тогда
						ШаблонОписанияИзменений = "Изменено примечание тестировщика. <a href='changelog_%1_%2'>Показать различия</a>";	
						
						ТекстСобытия = СтрШаблон(ШаблонОписанияИзменений, XMLСтрока(ВыборкаСобытие.Ссылка),
							Формат(ВыборкаСобытие.Дата, "ДФ='yyyyMMddHHmmss'"));
						СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.Событие, СтильСобытия, ТекстСобытия);
						
					ИначеЕсли СтруктураДанные.Событие = "ИзмененоПримечаниеРазработчика" Тогда
						ШаблонОписанияИзменений = "Изменено примечание разработчика. <a href='changelog_%1_%2'>Показать различия</a>";	
						
						ТекстСобытия = СтрШаблон(ШаблонОписанияИзменений, XMLСтрока(ВыборкаСобытие.Ссылка),
							Формат(ВыборкаСобытие.Дата, "ДФ='yyyyMMddHHmmss'"));
						СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.Событие, СтильСобытия, ТекстСобытия);
						
					ИначеЕсли СтруктураДанные.Событие = "СозданиеОбъекта" Тогда
						ТекстСобытия = "Объект создан и записан в базу данных";
						СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.Событие, СтильСобытия, ТекстСобытия);

					ИначеЕсли СтруктураДанные.Событие = "ИзменениеРеквизита" Тогда
						Если СтрНайти(СтруктураДанные.Реквизит, " ") = 0 И СтрДлина(СтруктураДанные.Реквизит) > 6 Тогда
							Реквизит = Сред(СтруктураДанные.Реквизит, 1, 1);
							
							Для НомерСимвола = 2 По СтрДлина(СтруктураДанные.Реквизит) Цикл
								ПроверяемыйСимвол = Сред(СтруктураДанные.Реквизит, НомерСимвола, 1);
								Если ПроверяемыйСимвол = ВРег(ПроверяемыйСимвол) Тогда
									ПроверяемыйСимвол = " " + НРег(ПроверяемыйСимвол);
								КонецЕсли;
								Реквизит = Реквизит + ПроверяемыйСимвол;
							КонецЦикла;
						Иначе
						   Реквизит = СтруктураДанные.Реквизит;
						КонецЕсли;

						Если СтруктураДанные.Свойство("СтароеЗначение") И СтруктураДанные.Свойство("НовоеЗначение") Тогда
							НовоеЗначение = Строка(СтруктураДанные.НовоеЗначение);
							СтароеЗначение = Строка(СтруктураДанные.СтароеЗначение);
							
							Группы = СтрНайтиПоРегулярномуВыражению(СтароеЗначение, "([\d.]*?) 0:00:00").ПолучитьГруппы();
							ГруппыНовое = СтрНайтиПоРегулярномуВыражению(НовоеЗначение, "([\d.]*?) 0:00:00").ПолучитьГруппы();
							
							Если Группы.Количество() > 0 И ГруппыНовое.Количество() > 0 Тогда
								СтароеЗначение = Группы[0].Значение;
								НовоеЗначение = ГруппыНовое[0].Значение;
							КонецЕсли;
							
							СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.РеквизитСтароеНовое, СтильСобытия, Реквизит, СтароеЗначение, НовоеЗначение);
							
						ИначеЕсли СтруктураДанные.Свойство("НовоеЗначение") Тогда
							НовоеЗначение = Строка(СтруктураДанные.НовоеЗначение);
							
							Группы = СтрНайтиПоРегулярномуВыражению(НовоеЗначение, "([\d.]*?) 0:00:00").ПолучитьГруппы();
							Если Группы.Количество() > 0  Тогда
								НовоеЗначение = Группы[0].Значение;
							КонецЕсли;
							
							Если СтруктураДанные.Свойство("Причина") Тогда
								Причина = СтрШаблон(" <b>по причине:</b> %1", СтруктураДанные.Причина);
							Иначе
								Причина = "";
							КонецЕсли;
							
							СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.РеквизитНовое, СтильСобытия, Реквизит, НовоеЗначение, Причина);
							
						ИначеЕсли СтруктураДанные.Свойство("СтароеЗначение") Тогда
							СтароеЗначение = Строка(СтруктураДанные.СтароеЗначение);
							Группы = СтрНайтиПоРегулярномуВыражению(СтароеЗначение, "([\d.]*?) 0:00:00").ПолучитьГруппы();
							
							Если Группы.Количество() > 0  Тогда
								СтароеЗначение = Группы[0].Значение;
							КонецЕсли;
										
							СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.РеквизитСтарое, СтильСобытия, Реквизит, СтароеЗначение);
						КонецЕсли;
											
					ИначеЕсли СтруктураДанные.Событие = "ИзменениеСоставаТЧ" Тогда
						ДанныеТабличнойЧасти = Новый Массив;
						
						Для Каждого Строка Из СтруктураДанные.Строки Цикл								
							Если ТипЗнчСсылка = Тип("ДокументСсылка.ПланированиеЗанятостиРесурсов")
								ИЛИ ТипЗнчСсылка = Тип("ДокументСсылка.УстановкаДоступныхРесурсов") Тогда
								
								Если Строка.СтрокаДобавлена = 1 Тогда
									ТекстСобытия = "добавлен";
								ИначеЕсли Строка.СтрокаДобавлена = 2 Тогда
									ТекстСобытия = "изменен";
								Иначе
									ТекстСобытия = "удален";
								КонецЕсли;
								ТекстСобытия = СтрШаблон("Для %1 <b>%2</b> %3", Строка.КлючевоеПоле, Строка.ЗначениеКлючевогоПоля, ТекстСобытия);

							ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Процессы") И Строка.КлючевоеПоле = "текущий статус" Тогда
								Если Строка.СтрокаДобавлена = 1 Тогда
									ТекстСобытия = "Добавлен";
								ИначеЕсли Строка.СтрокаДобавлена = 2 Тогда
									ТекстСобытия = "Изменен";
								Иначе
									ТекстСобытия = "Удален";
								КонецЕсли;
								
								ТекстСобытия = СтрШаблон("%1 переход %2 <b>%3</b>", ТекстСобытия, Строка.КлючевоеПоле, Строка.ЗначениеКлючевогоПоля);
	
							Иначе
								Если Строка.СтрокаДобавлена = 1 Тогда
									ТекстСобытия = "Добавлена";
								ИначеЕсли Строка.СтрокаДобавлена = 2 Тогда
									ТекстСобытия = "Изменения по";
								Иначе
									ТекстСобытия = "Удалена";
								КонецЕсли;
								ТекстСобытия = СтрШаблон("%1 %2 <b>%3</b>", ТекстСобытия, Строка.КлючевоеПоле, Строка.ЗначениеКлючевогоПоля);
							КонецЕсли;
							
							Если Строка.Свойство("ИзмененныеДанные") Тогда
								Счетчик = 0;
								
								Для Каждого Данные Из Строка.ИзмененныеДанные Цикл
									Если Данные.Поле = "" Тогда
										Продолжить;
									КонецЕсли;
									
									Счетчик = Счетчик + 1;
									
									СтароеЗначение = "";
									Если Данные.Свойство("СтароеЗначение") Тогда
										СтароеЗначение = Данные.СтароеЗначение;
									КонецЕсли;
									
									НовоеЗначение = "";
									Если Данные.Свойство("НовоеЗначение") Тогда
										НовоеЗначение = Данные.НовоеЗначение;
									КонецЕсли;
									
									Комментарий = "";
									Если Данные.Свойство("Комментарий") Тогда
										Комментарий = СтрШаблон(" <b>Комментарий:</b> %1", Данные.Комментарий);
									КонецЕсли;
									
									ДанныеHTML = СтрШаблон(ШаблоныЛентыИстории.ТЧСтароеНовое, Данные.Поле, СтароеЗначение, НовоеЗначение);
									
									Если Счетчик = 1 Тогда
										ТекстСобытия = СтрШаблон("%1: %2%3", ТекстСобытия, ДанныеHTML, Комментарий);
									Иначе
										ТекстСобытия = СтрШаблон("%1;<br> %2%3", ТекстСобытия, ДанныеHTML, Комментарий);
									КонецЕсли;									
								КонецЦикла;
							КонецЕсли;
							
							СтрокаHTML = СтрШаблон(ШаблоныЛентыИстории.ИзмененияТЧ, ТекстСобытия);
							ДанныеТабличнойЧасти.Добавить(СтрокаHTML);
						КонецЦикла;
						
						СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.ТабличнаяЧасть, СтильСобытия,
							СтруктураДанные.ТабличнаяЧасть, СтрСоединить(ДанныеТабличнойЧасти, Символы.ПС));
						
					ИначеЕсли СтруктураДанные.Событие = "Делегирование" Тогда
						СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.РеквизитСтароеНовое, СтильСобытия, "Заявка была делегирована",
							СтруктураДанные.СтароеЗначение, СтруктураДанные.НовоеЗначение);
						
					ИначеЕсли СтруктураДанные.Событие = "ДоступЧерновика" Тогда
						Если СтруктураДанные.Добавлен Тогда
							ТекстСобытия = "открыт";
						Иначе
							ТекстСобытия = "закрыт";
						КонецЕсли;
						ТекстСобытия = СтрШаблон("Пользователю <b>%1</b> %2 доступ к черновику заявки на разработку", 
							СтруктураДанные.Пользователь, ТекстСобытия);
						СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.Событие, СтильСобытия, ТекстСобытия);
						
					ИначеЕсли СтруктураДанные.Событие = "ИзменениеПорядка" Тогда
						Если СтруктураДанные.Свойство("КлючОчереди") Тогда
							ТекстСобытия = СтрШаблон("Изменен порядок в очереди по ключу <b>%1</b>", СтруктураДанные.КлючОчереди);
						Иначе
							ТекстСобытия = "Изменен порядок в очереди";
						КонецЕсли;
					
						СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.РеквизитСтароеНовое, СтильСобытия, ТекстСобытия,
							СтруктураДанные.СтарыйПорядок, СтруктураДанные.НовыйПорядок);
							
					ИначеЕсли СтруктураДанные.Событие = "ФиксацияПорядка" Тогда	
						Если СтруктураДанные.Добавлен Тогда
							ТекстСобытия = "Зафиксирован порядок";
						Иначе
							ТекстСобытия = "Убрана фиксация порядка";
						КонецЕсли;
						
						ТекстСобытия = СтрШаблон("%1 в очереди по ключу <b>%2</b>", ТекстСобытия, СтруктураДанные.КлючОчереди);
						СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.Событие, СтильСобытия, ТекстСобытия);
						
					ИначеЕсли СтруктураДанные.Событие = "ИзменениеСтатусаПоСистеме" Тогда						
						ТекстСобытия = СтрШаблон("Заявка на разработку переведена в статус <b>%1</b> по системе <b>%2</b>", 
							СтруктураДанные.Статус, СтруктураДанные.Система);
							
						Если СтруктураДанные.Свойство("Причина") Тогда
							ТекстСобытия = СтрШаблон("%1 по причине: <b>%2</b>", ТекстСобытия, СтруктураДанные.Причина);
						КонецЕсли;
						
						Если СтруктураДанные.Свойство("Комментарий") Тогда
							ТекстСобытия = СтрШаблон("%1<br> с комментарием: <i>%2</i>", ТекстСобытия, СтруктураДанные.Комментарий);
						КонецЕсли;
						
						СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.Событие, СтильСобытия, ТекстСобытия);
						
					ИначеЕсли СтруктураДанные.Событие = "ИзменениеНазначенногоПоСистеме" Тогда						
						Если СтруктураДанные.Добавлен Тогда
							ТекстСобытия = "Заявка по системе <b>%1</b> назначена на <b>%2</b>";
						Иначе
							ТекстСобытия = "По системе <b>%1</b> был удален назначенный <b>%2</b>";
						КонецЕсли;
						
						ТекстСобытия = СтрШаблон(ТекстСобытия, СтруктураДанные.Система, СтруктураДанные.Назначенный);
						СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.Событие, СтильСобытия, ТекстСобытия);
						
					ИначеЕсли СтруктураДанные.Событие = "ИзменениеУчастников" Тогда
						Если СтруктураДанные.Добавлен Тогда
							ТекстСобытия = "<b>%1</b> добавлен в участники";
						Иначе
							ТекстСобытия = "<b>%1</b> удален из учатников";
						КонецЕсли;
						
						ТекстСобытия = СтрШаблон(ТекстСобытия, СтруктураДанные.Участник);
						СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.Событие, СтильСобытия, ТекстСобытия);

					ИначеЕсли СтруктураДанные.Событие = "ИзменениеФайла" Тогда
						Если СтруктураДанные.Добавлен = 1 Тогда
							ТекстСобытия = "Добавлен файл: <b>%1</b>";
						ИначеЕсли СтруктураДанные.Добавлен = 2 Тогда
							ТекстСобытия = "Изменен файл: <b>%1</b>";
						Иначе
							ТекстСобытия = "Удален файл: <b>%1</b>";
						КонецЕсли;
						
						ТекстСобытия = СтрШаблон(ТекстСобытия, СтруктураДанные.ИмяФайла);
						СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.Событие, СтильСобытия, ТекстСобытия);
						
					ИначеЕсли СтруктураДанные.Событие = "ИзменениеЭкспертов" Тогда
						Если СтруктураДанные.Добавлен Тогда
							ТекстСобытия = "Добавлен эксперт";
							ШаблонСобытия = ШаблоныЛентыИстории.РеквизитНовоеЗначение;
						Иначе
							ТекстСобытия = "Удален эксперт";
							ШаблонСобытия = ШаблоныЛентыИстории.РеквизитСтароеБезЛинии;
						КонецЕсли;
						
						СобытиеHTML = СтрШаблон(ШаблонСобытия, СтильСобытия, ТекстСобытия, СтруктураДанные.Эксперт);
						
					ИначеЕсли СтруктураДанные.Событие = "ИзменениеВопросовАттестации" Тогда
						
						СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.Событие, СтильСобытия, "Внесены изменения в вопросах для аттестации.");
						
					ИначеЕсли СтруктураДанные.Событие = "ИзменениеТега" Тогда
						Если СтруктураДанные.Добавлен Тогда
							ТекстСобытия = "Добавлен тег: <b>%1</b>";
						Иначе
							ТекстСобытия = "Удален тег: <b>%1</b>";
						КонецЕсли;
						
						ТекстСобытия = СтрШаблон(ТекстСобытия, СтруктураДанные.Тег);
						СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.Событие, СтильСобытия, ТекстСобытия);
						
					ИначеЕсли СтруктураДанные.Событие = "АвтоматическоеЗакрытиеЗадач" Тогда
						ТекстСобытия = "Автоматическое закрытие задач, находящихся в статусах <b>Тестирование</b> и <b>Протестирована</b> более 10 рабочих дней";
						СобытиеHTML = СтрШаблон(ШаблоныЛентыИстории.Событие, СтильСобытия, ТекстСобытия);
					Иначе
						ЗаписьЖурналаРегистрации("История объекта.Неизвестное событие", УровеньЖурналаРегистрации.Ошибка, , Ссылка, СтруктураДанные.Событие);
						Продолжить;
					КонецЕсли;
					
					ВсегоСобытий = ВсегоСобытий + 1;
					СобытияПериода.Добавить(СобытиеHTML);
				КонецЦикла;
				
				ДополнительныеИзменения = ?(ВсегоСобытий = НомерСобытияПрочее, " additional-change", "");
				
				ПериодыСобытийОбъекта = СтрШаблон(ШаблоныЛентыИстории.ИзмененияОбъектаЗаПериод, ДополнительныеИзменения,
					Формат(ВыборкаДата.Дата, "ДФ='dd.MM.yyyy'"), Формат(ВыборкаДата.Дата, "ДФ='HH:mm'"), XMLСтрока(ВыборкаДата.Пользователь),
					ВыборкаДата.ПользовательПредставление, СтрСоединить(СобытияПериода, Символы.ПС));
				
				СобытияОбъекта.Добавить(ПериодыСобытийОбъекта);
			КонецЦикла;
			
			Если Выборка.Статус = Справочники.СтатусыОбъектов.Решен ИЛИ Выборка.Статус = Справочники.СтатусыОбъектов.Отклонен Тогда
				ДополнительныеСтилиОбъекта = ДополнительныеСтилиОбъекта + " closed-object";
			КонецЕсли;
			
			Если ПустаяСтрока(Выборка.ИмяКартинки) Тогда
				АдресКартинки = "";
			Иначе
				АдресКартинки = СтрШаблон("<img alt='%2' src='%1/assets/status_ico/%3.png'></img>",
				КорневойURL, Выборка.СтатусПредставление, Выборка.ИмяКартинки);
			КонецЕсли;
			
			ОбъектИстории = СтрШаблон(ШаблоныЛентыИстории.Объект, Выборка.ПредставлениеСсылки, СтрСоединить(СобытияОбъекта, Символы.ПС),
				АдресКартинки, ДополнительныеСтилиОбъекта);
			
			ОбъектыИстории.Добавить(ОбъектИстории);
			
			ДополнительныеСтилиОбъекта = " collapsed";
			
		КонецЦикла;
		
		ТекстЛентыHTML = СтрШаблон(ШаблоныЛентыИстории.Страница, КорневойURL, Стили, СтрСоединить(ОбъектыИстории, Символы.ПС));
	КонецЕсли;
	
	Возврат ТекстЛентыHTML;
	
КонецФункции

&НаКлиенте
Функция ПолучитьИсточникПоИдентификатору(Знач Идентификатор)
	
	Результат = Неопределено;
	
	Для Каждого ЭлементСписка Из СвязанныеОбъекты Цикл
		Если ЭлементСписка.Представление = Идентификатор Тогда
			Результат = ЭлементСписка.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
