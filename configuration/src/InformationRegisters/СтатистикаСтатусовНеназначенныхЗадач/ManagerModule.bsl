///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер ИЛИ ВнешнееСоединение ИЛИ ТолстыйКлиентОбычноеПриложение Тогда

#Область ПрограммныйИнтерфейс

// Закрывает последнюю незакрытую запись и созадет новую
//
// Параметры:
//  Задача		 - ДокументСсылка.Задача			 - задача которую необходимо обработать
//  Статус		 - СправочникСсылка.СтатусыОбъектов	 - новый статус задачи
//  Пользователь - СправочникСсылка.Пользователи	 - текущий исполнитель задачи
//  ДатаЗаписи	 - Дата (дата и время)				 - дата, которой будут добавлены записи
//
Процедура ОбработатьИзменениеСтатусаЗадачи(Знач Задача, Знач Статус, Знач Пользователь, Знач ДатаЗаписи = Неопределено) Экспорт
	
	ИмяСобытия = ИмяСобытияЖурналаРегистрации();
	
	ТекущаяДата = ТекущаяДатаСеанса();
	
	Если ДатаЗаписи <> Неопределено Тогда
		ТекущаяДата = ДатаЗаписи;
	КонецЕсли;
	
	// Получим последнюю запись из регистра в разрезе задачи
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	МАКСИМУМ(СтатистикаСтатусовНеназначенныхЗадачСрезПоследних.Период) КАК Период,
	|	СтатистикаСтатусовНеназначенныхЗадачСрезПоследних.Задача КАК Задача,
	|	СтатистикаСтатусовНеназначенныхЗадачСрезПоследних.Статус КАК Статус,
	|	СтатистикаСтатусовНеназначенныхЗадачСрезПоследних.ДатаОкончания КАК ДатаОкончания,
	|	СтатистикаСтатусовНеназначенныхЗадачСрезПоследних.Время КАК Время
	|ИЗ
	|	РегистрСведений.СтатистикаСтатусовНеназначенныхЗадач.СрезПоследних(&ТекущаяДата, Задача = &Задача) КАК СтатистикаСтатусовНеназначенныхЗадачСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатистикаСтатусовНеназначенныхЗадачСрезПоследних.Задача,
	|	СтатистикаСтатусовНеназначенныхЗадачСрезПоследних.Статус,
	|	СтатистикаСтатусовНеназначенныхЗадачСрезПоследних.ДатаОкончания,
	|	СтатистикаСтатусовНеназначенныхЗадачСрезПоследних.Время
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	
	Запрос.УстановитьПараметр("Задача", Задача);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		// Если была получена запись, то нужно её закрыть.
		// Время будет рассчитано регламентным заданием.
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Если НЕ ЗначениеЗаполнено(Выборка.ДатаОкончания) Тогда
			НаборЗаписей = СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
			НаборЗаписей.Отбор.Задача.Установить(Выборка.Задача);
			НаборЗаписей.Отбор.Статус.Установить(Выборка.Статус);
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			НоваяЗапись.Время = 0;
			НоваяЗапись.ДатаОкончания = ТекущаяДата;
			
			Попытка
				НаборЗаписей.Записать();
			Исключение
				Информация = ИнформацияОбОшибке();
				ПодробнаяИнформация = ПодробноеПредставлениеОшибки(Информация);
				
				ТекстОшибки = СтрШаблон("Не удалось закрыть период задачи по причине: %1", ПодробнаяИнформация);
				
				ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, 
					РегистрыСведений.СтатистикаСтатусовНазначенныхЗадач, , ТекстОшибки);
				Возврат;
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	// В случае, если пользователь заполнен и задача не переведена в статус
	// Решен или Отклонен, то нужно добавить новую запись.
	Если НЕ ЗначениеЗаполнено(Пользователь)
		И Статус <> Справочники.СтатусыОбъектов.Решен
		И Статус <> Справочники.СтатусыОбъектов.Отклонен Тогда
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(ТекущаяДата);
		НаборЗаписей.Отбор.Задача.Установить(Задача);
		НаборЗаписей.Отбор.Статус.Установить(Статус);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Период = ТекущаяДата;
		НоваяЗапись.Задача = Задача;
		НоваяЗапись.Статус = Статус;
		
		Попытка
			НаборЗаписей.Записать();
		Исключение
			Информация = ИнформацияОбОшибке();
			ПодробнаяИнформация = ПодробноеПредставлениеОшибки(Информация);
			
			ТекстОшибки = СтрШаблон("Не удалось открыть период задачи по причине: %1", ПодробнаяИнформация);
			
			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, 
				РегистрыСведений.СтатистикаСтатусовНазначенныхЗадач, , ТекстОшибки);
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИмяСобытияЖурналаРегистрации()
	
	Возврат "РегистрСведений.СтатистикаСтатусовНеНазначенныхЗадач.ОбработатьИзменениеСтатусаЗадачи";
	
КонецФункции

#КонецОбласти

#КонецЕсли
