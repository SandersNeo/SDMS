///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер ИЛИ ВнешнееСоединение ИЛИ ТолстыйКлиентОбычноеПриложение Тогда
	
#Область ПрограммныйИнтерфейс

// Пересчитывает статус заявки по филиалам с учетом статусов подчиненных задач первого уровня иерархии.
//
// Параметры:
//  Заявка - ДокументСсылка.ЗаявкаНаРазработку - ссылка на заявку, у которой необходимо пересчитать статусы.
//
Процедура РассчитатьСтатусыПоФилиалам(Знач Заявка) Экспорт
		
	// Запрос учитывает следующие условия:
	// - если у заявки заполнен реквизит ФинальныйСтатус, то расчет статуса идет исключиельно по финальному статусу
	// - во всех остальных случаях статус считается как минимальный по всем задачам связанным с заявкой
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокументЗадача.Филиал КАК Филиал,
	|	ВЫБОР
	|		КОГДА ДокументЗаявка.ФинальныйСтатус <> ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(СтатусыОбъектовЗаявка.Порядок, 0)
	|		ИНАЧЕ СтатусыОбъектов.Порядок
	|	КОНЕЦ КАК Порядок,
	|	ВЫБОР
	|		КОГДА ДокументЗаявка.ФинальныйСтатус <> ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ПустаяСсылка)
	|			ТОГДА ДокументЗаявка.ФинальныйСтатус
	|		ИНАЧЕ ДокументЗадача.Статус
	|	КОНЕЦ КАК Статус
	|ПОМЕСТИТЬ СтатусыПодчиненныхЗадачПоГруппам
	|ИЗ
	|	Документ.Задача КАК ДокументЗадача
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку КАК ДокументЗаявка
	|		ПО ((ВЫРАЗИТЬ(ДокументЗадача.ОбъектОснование КАК Документ.ЗаявкаНаРазработку)) = ДокументЗаявка.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектовЗаявка
	|		ПО (ДокументЗаявка.ФинальныйСтатус = СтатусыОбъектовЗаявка.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО ДокументЗадача.Статус = СтатусыОбъектов.Ссылка
	|ГДЕ
	|	НЕ ДокументЗадача.ПометкаУдаления
	|	И (ВЫРАЗИТЬ(ДокументЗадача.ОбъектОснование КАК Документ.ЗаявкаНаРазработку)) = &Заявка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДокументЗадача.КомандаРазработчиков,
	|	ВЫБОР
	|		КОГДА ДокументЗаявка.ФинальныйСтатус <> ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(СтатусыОбъектовЗаявка.Порядок, 0)
	|		ИНАЧЕ СтатусыОбъектов.Порядок
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументЗаявка.ФинальныйСтатус <> ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ПустаяСсылка)
	|			ТОГДА ДокументЗаявка.ФинальныйСтатус
	|		ИНАЧЕ ДокументЗадача.Статус
	|	КОНЕЦ
	|ИЗ
	|	Документ.Задача КАК ДокументЗадача
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку КАК ДокументЗаявка
	|		ПО ((ВЫРАЗИТЬ(ДокументЗадача.ОбъектОснование КАК Документ.ЗаявкаНаРазработку)) = ДокументЗаявка.Ссылка)
	|			И (ДокументЗаявка.Ссылка = &Заявка)
	|			И (НЕ ДокументЗадача.ПометкаУдаления)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК Филиалы
	|		ПО ДокументЗадача.КомандаРазработчиков = Филиалы.Ссылка
	|			И (Филиалы.Родитель <> ЗНАЧЕНИЕ(Справочник.Филиалы.Пустаяссылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектовЗаявка
	|		ПО (ДокументЗаявка.ФинальныйСтатус = СтатусыОбъектовЗаявка.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО ДокументЗадача.Статус = СтатусыОбъектов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Заявка КАК Заявка,
	|	СтатусыПодчиненныхЗадачПоГруппам.Филиал КАК Филиал,
	|	МИНИМУМ(СтатусыПодчиненныхЗадачПоГруппам.Статус) КАК Статус,
	|	&Пользователь КАК Пользователь
	|ИЗ
	|	СтатусыПодчиненныхЗадачПоГруппам КАК СтатусыПодчиненныхЗадачПоГруппам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СтатусыПодчиненныхЗадачПоГруппам.Филиал КАК Филиал,
	|			МИНИМУМ(СтатусыПодчиненныхЗадачПоГруппам.Порядок) КАК Порядок
	|		ИЗ
	|			СтатусыПодчиненныхЗадачПоГруппам КАК СтатусыПодчиненныхЗадачПоГруппам
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СтатусыПодчиненныхЗадачПоГруппам.Филиал) КАК МинимальныйпорядокПодчиненныхЗадачПоГруппам
	|		ПО (МинимальныйпорядокПодчиненныхЗадачПоГруппам.Порядок = СтатусыПодчиненныхЗадачПоГруппам.Порядок)
	|			И (МинимальныйпорядокПодчиненныхЗадачПоГруппам.Филиал = СтатусыПодчиненныхЗадачПоГруппам.Филиал)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатусыПодчиненныхЗадачПоГруппам.Филиал";
	
	Запрос.УстановитьПараметр("Заявка", Заявка);
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
		
	// Перед обработкой данных необходимо заблокировать нужные нам элементы регистра
	БлокировкаДанных = Новый БлокировкаДанных;
	ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрСведений.СтатусыЗаявокПоГруппамРазработки");
	ЭлементБлокировки.УстановитьЗначение("Заявка", Заявка);	
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	БлокировкаДанных.Заблокировать();
	
	ТаблицаЗаписейДляРегистра = Запрос.Выполнить().Выгрузить();
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Заявка.Установить(Заявка);
	НаборЗаписей.Загрузить(ТаблицаЗаписейДляРегистра);
	НаборЗаписей.Записать();		
	
КонецПроцедуры

#КонецОбласти
	
#КонецЕсли
