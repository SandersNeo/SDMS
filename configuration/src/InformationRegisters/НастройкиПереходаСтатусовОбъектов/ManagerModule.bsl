///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер ИЛИ ВнешнееСоединение ИЛИ ТолстыйКлиентОбычноеПриложение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет обработчики обновления
//
// Параметры:
//  Обработчики	 - ТаблицаЗначений	 - см. ПриложениеВызовСервера.ПолучитьОбработчикиДанных
//
Процедура ДобавлениеОбработчиковОбновления(Обработчики) Экспорт     
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "*";
	Обработчик.Процедура = "РегистрыСведений.НастройкиПереходаСтатусовОбъектов.ПроверитьПредопределенныеНастройки";
	
КонецПроцедуры

// Формирует список статусов для типа объекта, в которые возможен переход согласно настройке по-умолчанию
//
// Параметры:
//  ТипОбъекта	 - СправочникСсылка.ТипыОбъектовВладельцев	 - тип объекта, к которому относится статус
//  ВернутьСписокЗначений	 - Булево	 - если Истина - вернет список значений, если Ложь - массив ссылок
// 
// Возвращаемое значение:
//  СписокЗначений, Массив - набор статусов процесса филиала
//
Функция ПолучитьСтатусыПоУмолчанию(Знач ТипОбъекта, Знач ВернутьСписокЗначений = Истина) Экспорт
	
	Если ВернутьСписокЗначений Тогда
		Результат = Новый СписокЗначений;
	Иначе
		Результат = Новый Массив;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтатусыОбъектов.Ссылка КАК Ссылка,
	|	СтатусыОбъектов.Наименование КАК Наименование,
	|	СтатусыОбъектов.ИмяКартинкиВБиблиотеке КАК ИмяКартинки,
	|	СтатусыОбъектов.Порядок КАК Порядок
	|ИЗ
	|	РегистрСведений.НастройкиПереходаСтатусовОбъектов КАК НастройкиПереходаСтатусовОбъектов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО НастройкиПереходаСтатусовОбъектов.ТекущийСтатус = СтатусыОбъектов.Ссылка
	|ГДЕ
	|	НастройкиПереходаСтатусовОбъектов.Объект = &Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтатусыОбъектов.Ссылка,
	|	СтатусыОбъектов.Наименование,
	|	СтатусыОбъектов.ИмяКартинкиВБиблиотеке,
	|	СтатусыОбъектов.Порядок
	|ИЗ
	|	Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|ГДЕ
	|	СтатусыОбъектов.Ссылка = ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.Решен)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	Запрос.УстановитьПараметр("Объект", ТипОбъекта);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ВернутьСписокЗначений Тогда
				ИмяКартинки = СтрШаблон("Статус%1", Выборка.ИмяКартинки);
				
				НовыйЭлемент = Результат.Добавить();
				НовыйЭлемент.Значение = Выборка.Ссылка;
				НовыйЭлемент.Представление = Выборка.Наименование;
				НовыйЭлемент.Картинка = БиблиотекаКартинок[ИмяКартинки];
			Иначе
				Результат.Добавить(Выборка.Ссылка);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Проверяет предопределенные настройки
//
Процедура ПроверитьПредопределенныеНастройки() Экспорт
	
	ТипОбъекта = "Справочник_Проекты";
	РольПользователя = "ВсеРоли";
	
	ЗаполнитьНастройку(ТипОбъекта, РольПользователя, "Новый", "Рассмотрение", 1);
	ЗаполнитьНастройку(ТипОбъекта, РольПользователя, "Новый", "Отклонен", 2);
	ЗаполнитьНастройку(ТипОбъекта, РольПользователя, "Рассмотрение", "ВРаботе", 1);
	ЗаполнитьНастройку(ТипОбъекта, РольПользователя, "Рассмотрение", "Отклонен", 2);
	ЗаполнитьНастройку(ТипОбъекта, РольПользователя, "ВРаботе", "Тестирование", 1);
	ЗаполнитьНастройку(ТипОбъекта, РольПользователя, "ВРаботе", "Приостановлен", 1);
	ЗаполнитьНастройку(ТипОбъекта, РольПользователя, "ВРаботе", "Отклонен", 3);
	ЗаполнитьНастройку(ТипОбъекта, РольПользователя, "Приостановлен", "ВРаботе", 1);
	ЗаполнитьНастройку(ТипОбъекта, РольПользователя, "Тестирование", "ВРаботе", 1);
	ЗаполнитьНастройку(ТипОбъекта, РольПользователя, "Тестирование", "Масштабирование", 2);
	ЗаполнитьНастройку(ТипОбъекта, РольПользователя, "Тестирование", "Решен", 3);
	ЗаполнитьНастройку(ТипОбъекта, РольПользователя, "Масштабирование", "Решен", 1);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции  

Процедура ЗаполнитьНастройку(ИмяЭлемента, Знач РольПользователя, Знач ТекущийСтатус, Знач НовыйСтатус, Знач Порядок);
	
	Попытка
		Объект = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ТипыОбъектовВладельцев." + ИмяЭлемента);
	Исключение
		Сообщение = НСтр("ru = 'Предопределенный элемент ""%Параметр%"" не найден.'");
		Сообщение = СтрЗаменить(Сообщение, "%Параметр%", "Справочник.ТипыОбъектовВладельцев." + ИмяЭлемента);
		ВызватьИсключение Сообщение;
	КонецПопытки;
	
	Попытка
		ТекущийСтатус = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.СтатусыОбъектов." + ТекущийСтатус);
	Исключение
		Сообщение = НСтр("ru = 'Предопределенный элемент ""%Параметр%"" не найден.'");
		Сообщение = СтрЗаменить(Сообщение, "%Параметр%", "Справочник.СтатусыОбъектов." + ТекущийСтатус);
		ВызватьИсключение Сообщение;
	КонецПопытки; 
	
	Попытка
		НовыйСтатус = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.СтатусыОбъектов." + НовыйСтатус);
	Исключение
		Сообщение = НСтр("ru = 'Предопределенный элемент ""%Параметр%"" не найден.'");
		Сообщение = СтрЗаменить(Сообщение, "%Параметр%", "Справочник.СтатусыОбъектов." + НовыйСтатус);
		ВызватьИсключение Сообщение;
	КонецПопытки;
	
	Попытка
		РольПользователя = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.РолиПользователей." + РольПользователя);
	Исключение
		Сообщение = НСтр("ru = 'Предопределенный элемент ""%Параметр%"" не найден.'");
		Сообщение = СтрЗаменить(Сообщение, "%Параметр%", "Справочник.РолиПользователей." + РольПользователя);
		ВызватьИсключение Сообщение;
	КонецПопытки;
		
	Набор = СоздатьНаборЗаписей();
	Набор.Отбор.Объект.Установить(Объект);
	Набор.Отбор.ТекущийСтатус.Установить(ТекущийСтатус);
	Набор.Отбор.РольПользователя.Установить(РольПользователя);
	Набор.Отбор.НовыйСтатус.Установить(НовыйСтатус);
	Набор.Прочитать();
	
	Если Набор.Количество() = 0 Тогда	
		Запись = Набор.Добавить();
		Запись.Объект = Объект;
		Запись.ТекущийСтатус = ТекущийСтатус;
		Запись.РольПользователя = РольПользователя;
		Запись.НовыйСтатус = НовыйСтатус;
		Запись.Порядок = Порядок;
		Набор.Записать();               
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
