///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура - Добавить
//
// Параметры:
//  Объект			 - ОбъектИсторииИзменений - Ссылка на объект, описание которого нужно добавить
//  СтароеОписание	 - ХранилищеЗначения - Хранилище с текстом описания до записи 
//  НовоеОписание	 - ХранилищеЗначения - Хранилище с текстом описания после записи 
//
Процедура Добавить(Знач Объект, Знач СтароеОписание, Знач НовоеОписание, Знач ВидОписания) Экспорт
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.Обработано = Ложь;
	Запись.Объект = Объект;
	Запись.Дата = ТекущаяДатаСеанса();
	Запись.Автор = ПараметрыСеанса.ТекущийПользователь;
	
	Если ВидОписания = ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ПримечаниеРазработчиков Тогда
		Запись.ВидОписания = Перечисления.ВидыОписания.ПримечаниеРазработчика;
	ИначеЕсли ВидОписания = ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ПримечаниеТестировщиков Тогда
		Запись.ВидОписания = Перечисления.ВидыОписания.ПримечаниеТестировщика;	
	Иначе	
		Запись.ВидОписания = Перечисления.ВидыОписания.Описание;
	КонецЕсли;
	
	СжатиеДанных = Новый СжатиеДанных(9);	
	ХранилищеОписания = Новый ХранилищеЗначения(СтароеОписание, СжатиеДанных);
	Запись.СтароеОписание = ХранилищеОписания;	
	ХранилищеОписания = Новый ХранилищеЗначения(НовоеОписание, СжатиеДанных);                        
	Запись.НовоеОписание = ХранилищеОписания;
	
	Запись.Записать();
	
КонецПроцедуры

// Обрабатывает записи в регистре сведений ОчередьСравненияИзмененийОписанийОбъектов
// и записывает результат в регистр сведений ИсторияИзмененийОписанийОбъектов
//
Процедура ОбработатьОчередь() Экспорт
	
	Запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 250
	|	ОчередьСравненияИзмененийОписанийОбъектов.Объект КАК Объект,
	|	ОчередьСравненияИзмененийОписанийОбъектов.Дата КАК Дата,
	|	ОчередьСравненияИзмененийОписанийОбъектов.Автор КАК Автор,
	|	ОчередьСравненияИзмененийОписанийОбъектов.ВидОписания КАК ВидОписания
	|ИЗ
	|	РегистрСведений.ОчередьСравненияИзмененийОписанийОбъектов КАК ОчередьСравненияИзмененийОписанийОбъектов
	|ГДЕ
	|	НЕ ОчередьСравненияИзмененийОписанийОбъектов.Обработано";
	#КонецОбласти
	
	КэшДополнительныхДаннных = Новый ТаблицаЗначений;	
	КэшДополнительныхДаннных.Колонки.Добавить("Объект");
	КэшДополнительныхДаннных.Колонки.Добавить("Дата");
	КэшДополнительныхДаннных.Колонки.Добавить("ИмяФайла");
	КэшДополнительныхДаннных.Колонки.Добавить("Автор");
	КэшДополнительныхДаннных.Колонки.Добавить("ВидОписания");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;    
	
	ИмяСобытия = "Регламентные и фоновые задания.Сравнение изменений описаний объектов";
		
	Каталоги = СоздатьКаталоги();
	КомандаЗапускаWinMerge = СформироватьКомандуЗапускаWinMerge(Каталоги);	
	АдресПубликации = WebОкружениеВызовСервера.АдресПубликацииИнформационнойБазы();
	ШаблоныПисьма = РегистрыСведений.ОчередьОтправкиЭлектронныхПисем.ШаблоныЭлектронногоПисьма();
	
	Запись = СоздатьМенеджерЗаписи();
	Таблицы = РегистрыСведений.ПрикрепленныеФайлы.ПолучитьТаблицыФайлов();
	
	Пока НЕ РезультатЗапроса.Пустой() Цикл  
		ТекущаяДата = Формат((ТекущаяДатаСеанса()), "ДФ=yyyyMMdd_HH-mm_");
		Выборка = РезультатЗапроса.Выбрать(); 
	
		Пока Выборка.Следующий() Цикл	
			Запись.Обработано = Ложь;
			Запись.Объект = Выборка.Объект;
			Запись.Дата = Выборка.Дата;
			Запись.ВидОписания = Выборка.ВидОписания;
			Запись.Прочитать();
			
			Если НЕ Запись.Выбран() Тогда
				Продолжить;
			КонецЕсли;   
			
			СтароеОписание = Запись.СтароеОписание.Получить();
			НовоеОписание = Запись.НовоеОписание.Получить();
			
			СтароеОписание = КонвертацияОписания.ОчиститьHTMLОтТегов(СтароеОписание);
			НовоеОписание = КонвертацияОписания.ОчиститьHTMLОтТегов(НовоеОписание);
			
			СравнениеЗначений = Новый СравнениеЗначений;
			ОписаниеИзменилось = (СравнениеЗначений.Сравнить(СтароеОписание, НовоеОписание) <> 0);
			
			Если ОписаниеИзменилось Тогда
				Результат = ЗаписатьФайлыСравнения(ТекущаяДата, Каталоги, СтароеОписание, НовоеОписание);  
				РегистрыСведений.ПрикрепленныеФайлы.ЗаполнитьИспользуемыеФайлыОписаний(Выборка.Объект, 
				Таблицы.ТаблицаИспользуемыхФайлов, НовоеОписание); 
				Таблицы.ТаблицаОбъектов.Добавить().Объект = Выборка.Объект;
				
				Если Результат.Успешно Тогда
					НоваяСтрока = КэшДополнительныхДаннных.Добавить();
					НоваяСтрока.Объект = Выборка.Объект; 
					НоваяСтрока.Дата = Выборка.Дата;			
					НоваяСтрока.ИмяФайла = Результат.ИмяФайлаОтчета;
					НоваяСтрока.Автор = Выборка.Автор;
					НоваяСтрока.ВидОписания = Выборка.ВидОписания;
				Иначе
					ШаблонОшибки = "Ошибка записи описаний в отдельные папки. Объект: %1, Дата: %2. Описание ошибки: %3.";
					ТекстОшибки = СтрШаблон(ШаблонОшибки, Выборка.Объект, Выборка.Дата, Результат.ТекстОшибки);
					ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , ТекстОшибки); 
					УстановитьПризнакОбработаноЗаписиОчереди(Запись, ИмяСобытия);
				КонецЕсли;
			Иначе
				УстановитьПризнакОбработаноЗаписиОчереди(Запись, ИмяСобытия);
			КонецЕсли;	
		КонецЦикла;
		
		Успешно = ЗапуститьПриложениеWinMerge(КомандаЗапускаWinMerge, ИмяСобытия); 
		
		Если НЕ Успешно Тогда
			УдалитьФайлы(Каталоги.КаталогВременныхФайлов);
			Возврат;
		КонецЕсли;		
										
		НаборЗаписей = РегистрыСведений.ИсторияИзмененийОписанийОбъектов.СоздатьНаборЗаписей();
		Сжатие = Новый СжатиеДанных(9);
		
		Для Каждого Файл Из КэшДополнительныхДаннных Цикл	
			Если ПустаяСтрока(Файл.ИмяФайла) Тогда
				Возврат;
			КонецЕсли;	
			
			НастройкаРассылки = ПолучитьНастройкуРассылки(Файл.Объект, Файл.Автор);			
			
			// Добавляем запись в ИсторияИзмененийОписанийОбъектов
			НаборЗаписей.Отбор.Объект.Установить(Файл.Объект);
			НаборЗаписей.Отбор.Дата.Установить(Файл.Дата);	
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Дата = Файл.Дата;
			НоваяЗапись.Объект = Файл.Объект;
			НоваяЗапись.Автор = Файл.Автор;
			НоваяЗапись.ВидОписания = Файл.ВидОписания;
			
			// Устанавливаем флаг того, что запись регистра ОчередьСравненияИзмененийОписанийОбъектов
			// обработана
			Запись.Обработано = Ложь;
			Запись.Объект = Файл.Объект;
			Запись.Дата = Файл.Дата;
			Запись.ВидОписания = Файл.ВидОписания;
			Запись.Прочитать();
			Запись.Обработано = Истина;
			
			Результат = ПрочитатьОтчетWinMerge(Файл.ИмяФайла, "До изменения", "После изменения", 
			Каталоги.КаталогВременныхФайлов);		
			
			Если НЕ Результат.Успешно Тогда
				ШаблонОшибки = "Ошибка чтения отчета сравнения для записи с измерениями Объект: %1, Дата: %2. Описание ошибки: %3.";
				ТекстОшибки = СтрШаблон(ШаблонОшибки, Файл.Объект, Файл.Дата, Результат.ТекстОшибки);	
				ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , ТекстОшибки);
				НаборЗаписей.Очистить();
				УстановитьПризнакОбработаноЗаписиОчереди(Запись, ИмяСобытия);
				Продолжить;
			КонецЕсли;
			
			НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(Файл.Объект, "Объект", 
			Новый Структура("ИмяОткрываемойСтраницы", "История"));
			
			НавигационнаяСсылка = СтрШаблон("%1#%2", АдресПубликации, НавигационнаяСсылка);
			
			НачатьТранзакцию();
			Попытка								
				// Запись изменений в ИсторияИзмененийОписанийОбъектов
				НоваяЗапись.ОписаниеИзменений = Новый ХранилищеЗначения(Результат.ТекстОтчета, Сжатие);
				НаборЗаписей.Записать();	
				
				// Запись изменений в ОчередьСравненияИзмененийОписанийОбъектов
				Запись.Записать();
				
				Если ТипЗнч(Файл.Объект) = Тип("ДокументСсылка.ЗаявкаНаРазработку") Тогда
					РегистрыСведений.ДатыАктуальностиЗаявокНаРазработку.ПодтвердитьАктуальность(Файл.Объект);
				КонецЕсли;
				
				Если НастройкаРассылки.Записывать Тогда
					
					ВидОписанияСтрока = НРег(Строка(Файл.ВидОписания));
					
					СсылкаНаОбъект = СтрЗаменить(ШаблоныПисьма.АктивнаяСсылка, "<!-- link -->", НавигационнаяСсылка);
					СсылкаНаОбъект = СтрЗаменить(СсылкаНаОбъект, "<!-- title_link -->", "Просмотр изменений");
					
					ТекстШаблона = СтрШаблон("Было изменено %1 %2", ВидОписанияСтрока, СсылкаНаОбъект);
					
					ШаблонПисьма = СтрЗаменить(ШаблоныПисьма.БлокДвеТаблицы, "<!-- left_table_1 -->", ТекстШаблона);
					
					СтруктураСообщенияПользователю = Новый Структура;
					СтруктураСообщенияПользователю.Вставить("ТекстСообщения", ШаблонПисьма);
					СтруктураСообщенияПользователю.Вставить("СообщениеSDMS", СтрШаблон(" изменил(-а) %1", ВидОписанияСтрока));	
					СтруктураСообщенияПользователю.Вставить("КатегорияСообщения", НастройкаРассылки.Категория);
					
					РегистрыСведений.ПодготовленныеСообщенияПользователяПоКатегориям.Добавить(НастройкаРассылки.Получатели, 
						Файл.Объект, СтруктураСообщенияПользователю, Файл.Автор);
				КонецЕсли;
				
				ЗафиксироватьТранзакцию();
			Исключение
				ОтменитьТранзакцию();
				ШаблонОшибки = "Ошибка обработки записи с измерениями Объект: %1, Дата: %2. Описание ошибки: %3.";
				ТекстОшибки = СтрШаблон(ШаблонОшибки, Файл.Объект, Файл.Дата, ОписаниеОшибки());
				ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , ТекстОшибки);
			КонецПопытки;
			
			НаборЗаписей.Очистить();
		КонецЦикла;
		
		КэшДополнительныхДаннных.Очистить();	
		ОчиститьКаталоги(Каталоги.КаталогОтчета, Каталоги.КаталогСтарыхОписаний, Каталоги.КаталогНовыхОписаний);
		
		РезультатЗапроса = Запрос.Выполнить();
	КонецЦикла;
	
	УдалитьФайлы(Каталоги.КаталогВременныхФайлов);
	
КонецПроцедуры

// Сравнивает с помощью утилиты WinMerge два строковых описания и возвращает отчет о сравнении
// 
// Параметры:
//  Ссылка - ЛюбаяСсылка - Ссылка на документ для записи информации в журнал регистрации в случае ошибки в сравнении
//  СтароеОписание - Строка - "Левое" описание для сравнения
//  НовоеОписание - Строка - "Правое" описание для сравнения
//  ЗаголовокСтарое - Строка - Заголовок левой колонки в отчете о сравнении
//  ЗаголовокНовое - Строка - Заголовок правой колонки в отчете о сравнении
//  НовыйФорматОписания - Булево - описание формата HTML
// 
// Возвращаемое значение:
//  Строка - отчет о сравнении двух описаний
Функция СравнитьОписания(Знач Ссылка, Знач СтароеОписание, Знач НовоеОписание,
	Знач ЗаголовокСтарое, Знач ЗаголовокНовое, Знач НовыйФорматОписания) Экспорт
	
	Текст = "";
	ИмяСобытия = "СравнитьОписания";
	
	Каталоги = СоздатьКаталоги();
	КомандаЗапускаWinMerge = СформироватьКомандуЗапускаWinMerge(Каталоги);
	
	ТекущаяДата = Формат(ТекущаяДатаСеанса(), "ДФ=yyyyMMdd_HH-mm_");
	
	Если НовыйФорматОписания Тогда
		СтароеОписание = КонвертацияОписания.ОчиститьHTMLОтТегов(СтароеОписание);
		НовоеОписание = КонвертацияОписания.ОчиститьHTMLОтТегов(НовоеОписание);
	КонецЕсли;
	
	Результат = ЗаписатьФайлыСравнения(ТекущаяДата, Каталоги, СтароеОписание, НовоеОписание);  
	
	Если НЕ Результат.Успешно Тогда
		ШаблонОшибки = "Ошибка записи описаний в отдельные папки. Объект: %1. Описание ошибки: %2.";
		ТекстОшибки = СтрШаблон(ШаблонОшибки, Ссылка, Результат.ТекстОшибки);
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , ТекстОшибки);
		Возврат Текст;
	КонецЕсли;  
	
	Успешно = ЗапуститьПриложениеWinMerge(КомандаЗапускаWinMerge, "Сравнение описаний"); 
	
	Если НЕ Успешно Тогда
		УдалитьФайлы(Каталоги.КаталогВременныхФайлов);
		Возврат Текст;
	КонецЕсли;
					
	Результат = ПрочитатьОтчетWinMerge(Результат.ИмяФайлаОтчета, ЗаголовокСтарое, ЗаголовокНовое, Каталоги.КаталогВременныхФайлов);		
	
	Если Результат.Успешно Тогда
		Текст = Результат.ТекстОтчета;
	Иначе   
		ШаблонОшибки = "Ошибка чтения отчета сравнения для объекта: %1. Описание ошибки: %2.";
		ТекстОшибки = СтрШаблон(ШаблонОшибки, Ссылка, Результат.ТекстОшибки);
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , ТекстОшибки);
	КонецЕсли;
		
	УдалитьФайлы(Каталоги.КаталогВременныхФайлов);
	
	Возврат Текст;
	
КонецФункции  

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗаписатьФайлыСравнения(Знач ТекущаяДата, Знач Каталоги, Знач СтароеОписание, Знач НовоеОписание) 
	
	Результат = Новый Структура("Успешно, ТекстОшибки, ИмяФайлаОтчета", Истина, "", ""); 
	
	ИмяФайла = ТекущаяДата + ОбщегоНазначенияКлиентСервер.СтрУникальныйИдентификатор(Новый УникальныйИдентификатор);
	
	ЗаписьТекста = Новый ЗаписьТекста;
	
	Попытка	
		//Запись "левого" файла
		ЗаписьТекста.Открыть(РаботаСФайламиКлиентСервер.ДобавитьРазделительПути(Каталоги.КаталогСтарыхОписаний) + ИмяФайла);
		ЗаписьТекста.Записать(СтароеОписание);
		ЗаписьТекста.Закрыть();
		
		//Запись "правого" файла
		ЗаписьТекста.Открыть(РаботаСФайламиКлиентСервер.ДобавитьРазделительПути(Каталоги.КаталогНовыхОписаний) + ИмяФайла);
		ЗаписьТекста.Записать(НовоеОписание);
		ЗаписьТекста.Закрыть();  
		
		Результат.ИмяФайлаОтчета = СтрШаблон("%1%2Report.files%2%3.html", 
			Каталоги.КаталогОтчета, ПолучитьРазделительПути(), ИмяФайла);
	Исключение 
		Результат.Успешно = Ложь;
		Результат.ТекстОшибки = ОписаниеОшибки();
	КонецПопытки; 
	
	Возврат Результат; 

КонецФункции

Функция ЗапуститьПриложениеWinMerge(Знач КомандаЗапуска, Знач ИмяСобытия) 
	
	Успешно = Истина;

	Попытка
		ЗапуститьПриложение(КомандаЗапуска, , Истина);
	Исключение
		Успешно = Ложь;
		ТекстОшибки = СтрШаблон("Ошибка запуска WinMerge: %1", ОписаниеОшибки()); 
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , ТекстОшибки);
	КонецПопытки;
	
	Возврат Успешно;

КонецФункции 

Процедура ОчиститьКаталоги(Знач КаталогОтчета, Знач КаталогСтарыхОписаний, Знач КаталогНовыхОписаний)
		
	УдалитьФайлы(КаталогОтчета, "*");
	УдалитьФайлы(КаталогСтарыхОписаний, "*");
	УдалитьФайлы(КаталогНовыхОписаний, "*");
	
КонецПроцедуры	

Функция ПолучитьНастройкуРассылки(Объект, Автор)
	
	Категория = Неопределено;	
	РезультатЗапроса = РегистрыСведений.Участники.ПолучателиОповещения(Объект, Истина, Автор);	
	Получатели = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Пользователь");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиОповещений.КатегорияСообщения КАК Категория
	|ИЗ
	|	РегистрСведений.НастройкиОповещенияПриИзмененииРеквизитов КАК НастройкиОповещений
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(НастройкиОповещений.ТипОбъекта) = ТИПЗНАЧЕНИЯ(&Ссылка)
	|	И НастройкиОповещений.Реквизит = ""Описание""";
	
	Запрос.УстановитьПараметр("Ссылка", Объект);
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Категория = Выборка.Категория;
	КонецЕсли;                        
	
	Результат = Новый Структура;
	Результат.Вставить("Получатели", Получатели);
	Результат.Вставить("Категория", Категория);
	Результат.Вставить("Записывать", НЕ (Категория = Неопределено ИЛИ Получатели.Количество() = 0)); 
					
	Возврат Результат;	

КонецФункции

Функция ПрочитатьОтчетWinMerge(Знач ИмяФайла, Знач ЗаголовокСтарое, Знач ЗаголовокНовое, Знач КаталогВременныхФайлов)
	
	Результат = Новый Структура("Успешно, ТекстОшибки, ТекстОтчета", Истина, "", "");
	
	ЧтениеТекста = Новый ЧтениеТекста;

	Попытка
		ЧтениеТекста.Открыть(ИмяФайла, КодировкаТекста.UTF8, Символы.ПС);
	Исключение
		Результат.Успешно = Ложь;
		Результат.ТекстОшибки = ОписаниеОшибки();
		Возврат Результат;
	КонецПопытки; 
	
	Текст = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();
	
	// Удаление CSS 
	НачальныйНомер = СтрНайти(Текст, "<style type=""text/css"">");
	КонечныйНомер = СтрНайти(Текст, "</style>") + 8;
	ЧислоСимволовCSS = КонечныйНомер - НачальныйНомер; 
	
	УдаляемыйCSS = Сред(Текст, НачальныйНомер, КонечныйНомер - НачальныйНомер);								
	Текст = СтрЗаменить(Текст, УдаляемыйCSS, "<link href=""<АдресПубликацииСтиля>"" rel=""stylesheet"" type=""text/css"" />");				
	
	// Замена путей к временным файлам
	// Замена "левого" пути
	НачальныйНомер = СтрНайти(Текст, КаталогВременныхФайлов);
	КонечныйНомер  = СтрНайти(Текст, "</th>", , НачальныйНомер);
	ЧислоСимволов  = КонечныйНомер - НачальныйНомер;
	
	ЗаменяемыйТекст = Сред(Текст, НачальныйНомер, ЧислоСимволов);
	Текст = СтрЗаменить(Текст, ЗаменяемыйТекст, СтрШаблон("<b>%1</b>", ЗаголовокСтарое));
	
	// Замена "правого" пути
	НачальныйНомер = СтрНайти(Текст, КаталогВременныхФайлов);
	КонечныйНомер  = СтрНайти(Текст, "</th>", , НачальныйНомер);
	ЧислоСимволов  = КонечныйНомер - НачальныйНомер;
	
	ЗаменяемыйТекст = Сред(Текст, НачальныйНомер, ЧислоСимволов);
	
	Текст = СтрЗаменить(Текст, ЗаменяемыйТекст, СтрШаблон("<b>%1</b>", ЗаголовокНовое));	
	
	Текст = СтрЗаменить(Текст, "<АдресПубликацииСтиля>", ОбщегоНазначенияКлиентСервер.ДобавитьСлэш(WebОкружениеВызовСервера.АдресПубликацииСлужебныхДанных()) + "changelog.css""  charset=""utf-8");
	
    Результат.ТекстОтчета = Текст;
				
	Возврат Результат;
	
КонецФункции 

Функция СоздатьКаталоги()   
	
	РазделительПути = ПолучитьРазделительПути();	
	ПредставлениеДаты = Формат((ТекущаяДатаСеанса()), "ДФ=yyyyMMdd_HH-mm-ss_");
			
	// Подготовка временного каталога
	КаталогВременныхФайлов = ПовторноеИспользованиеВызовСервера.ПолучитьКаталогВременныхФайлов();
	Если СтрЗаканчиваетсяНа(КаталогВременныхФайлов, "/") Тогда
		КаталогВременныхФайлов = Лев(КаталогВременныхФайлов, СтрДлина(КаталогВременныхФайлов) - 1);
	КонецЕсли;
		
	КаталогВременныхФайлов = РаботаСФайламиКлиентСервер.ДобавитьРазделительПути(КаталогВременныхФайлов) + "WinMerge_" 
		+ ПредставлениеДаты + ОбщегоНазначенияКлиентСервер.СтрУникальныйИдентификатор(Новый УникальныйИдентификатор);
	
	КаталогВременныхФайлов = РаботаСФайламиКлиентСервер.ДобавитьРазделительПути(КаталогВременныхФайлов);
	
	// Формирование путей временных каталогов
	// 1. Каталог для "левых" файлов
	// 2. Каталог для "правых" файлов
	// 3. Каталог для генерации отчета  
	КаталогСтарыхОписаний  = КаталогВременныхФайлов + "OldDesc_" + ОбщегоНазначенияКлиентСервер.СтрУникальныйИдентификатор(Новый УникальныйИдентификатор);
	КаталогНовыхОписаний   = КаталогВременныхФайлов + "NewDesc_" + ОбщегоНазначенияКлиентСервер.СтрУникальныйИдентификатор(Новый УникальныйИдентификатор);
	КаталогОтчета          = КаталогВременныхФайлов + "Report_"  + ОбщегоНазначенияКлиентСервер.СтрУникальныйИдентификатор(Новый УникальныйИдентификатор);
	
	СоздатьКаталог(КаталогОтчета);
	СоздатьКаталог(КаталогСтарыхОписаний);
	СоздатьКаталог(КаталогНовыхОписаний);
	
	Каталоги = Новый Структура; 
	Каталоги.Вставить("КаталогВременныхФайлов", КаталогВременныхФайлов);
	Каталоги.Вставить("КаталогСтарыхОписаний", КаталогСтарыхОписаний);
	Каталоги.Вставить("КаталогНовыхОписаний", КаталогНовыхОписаний);
	Каталоги.Вставить("КаталогОтчета", КаталогОтчета);
	
	Возврат Каталоги;
	
КонецФункции

Функция СформироватьКомандуЗапускаWinMerge(Знач Каталоги)
		
	ШаблонЗапускаWinMerge = Константы.ПараметрыЗапускаУтилитыWinMerge.Получить(); 
	
	ПутьКОтчету = СтрШаблон("%1%2Report.html", Каталоги.КаталогОтчета, ПолучитьРазделительПути());

	Возврат СтрШаблон(ШаблонЗапускаWinMerge, Каталоги.КаталогСтарыхОписаний, Каталоги.КаталогНовыхОписаний, ПутьКОтчету); 

КонецФункции

Процедура УстановитьПризнакОбработаноЗаписиОчереди(Запись, ИмяСобытия)
	
	Попытка
		Запись.Обработано = Истина;
		Запись.Записать();	
	Исключение
		ШаблонОшибки = "Ошибка сохранения записи очереди с измерениями Объект: %1, Дата: %2. 
		|Запись не помечена как обработанная. Описание ошибки: %3.";
		ТекстОшибки = СтрШаблон(ШаблонОшибки, Запись.Объект, Запись.Дата, ОписаниеОшибки());	
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , ТекстОшибки);
	КонецПопытки;	
	
КонецПроцедуры
#КонецОбласти

#КонецЕсли
