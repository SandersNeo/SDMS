///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Записывает плановые трудозатраты по объекту в регистр сведений ПланируемыеТрудозатратыПоСпринтам.
//
// Параметры:
//  Объект       - ДокументСсылка.Задача - объект-владелец плановых трудозатрат.
//  Спринт       - ДокументСсылка.Спринты - Спринт плановых трудозатрат.
//  Трудозатраты - Число - величина трудозатрат.   
//  ДобавитьКСуществующему - Булево - флаг того, что трудозатраты нужно сложить с предыдущими
//
Процедура Добавить(Знач Объект, Знач Спринт, Знач ТипТрудозатрат, Знач Трудозатраты = 0, ДобавитьКСуществующему = Ложь) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Спринт) Тогда
		Возврат;
	КонецЕсли;
	
	Набор = РегистрыСведений.ПланируемыеТрудозатратыПоСпринтам.СоздатьНаборЗаписей();
	Набор.Отбор.Объект.Установить(Объект);
	Набор.Отбор.Спринт.Установить(Спринт);  
	Набор.Отбор.ТипТрудозатрат.Установить(ТипТрудозатрат);  

	Набор.Прочитать();
	
	Если Набор.Количество() = 0 Тогда
		Запись = Набор.Добавить(); 	
		Запись.Объект = Объект;
		Запись.Спринт = Спринт;
		Запись.ТипТрудозатрат = ТипТрудозатрат;
	Иначе
		Запись = Набор[0];
	КонецЕсли;
	
	Запись.Трудозатраты = ?(ДобавитьКСуществующему, Запись.Трудозатраты + Трудозатраты, Трудозатраты);
	Запись.Автор = ПараметрыСеанса.ТекущийПользователь;
	Запись.ДатаДобавления = ТекущаяДатаСеанса();
	Набор.Записать();
	
КонецПроцедуры   

// Получить подсказку для пока в плановом времени у обекта спринта
//
// Параметры:
//  Объект	 - ДокументСсылка.Задача, ДокументСсылка.ЗаявкаНаРазработку	 - Объект Спринта
//	ТипТрудозатрат - ПеречислениеСсылка.ТипыТрудозатрат
// 
// Возвращаемое значение:
//  Структура - Структура	 -  Структура ответа
//  	* <Подсказка>	 - Строка	 - Описание распределенных трудозатрат
//  	* <Трудозатраты>	 - Число	 - Количество распределенных трудозатрат
//
Функция ПолучитьПодсказкуПлановогоВремени(Знач Объект) Экспорт
	
	Результат = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланируемыеТрудозатратыПоСпринтам.Спринт КАК Спринт,
	|	ПланируемыеТрудозатратыПоСпринтам.Трудозатраты КАК Трудозатраты,
	|	ПланируемыеТрудозатратыПоСпринтам.ТипТрудозатрат КАК ТипТрудозатрат
	|ПОМЕСТИТЬ Спринты
	|ИЗ
	|	РегистрСведений.ПланируемыеТрудозатратыПоСпринтам КАК ПланируемыеТрудозатратыПоСпринтам
	|ГДЕ
	|	ПланируемыеТрудозатратыПоСпринтам.Объект = &Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланируемыеТрудозатраты.Трудозатраты - ЕСТЬNULL(ВложенныйЗапрос.Трудозатраты, 0) КАК Трудозатраты,
	|	НЕОПРЕДЕЛЕНО КАК Спринт,
	|	ПланируемыеТрудозатраты.ТипТрудозатрат КАК ТипТрудозатрат
	|ИЗ
	|	РегистрСведений.ПланируемыеТрудозатраты КАК ПланируемыеТрудозатраты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(Спринты.Трудозатраты) КАК Трудозатраты,
	|			Спринты.ТипТрудозатрат КАК ТипТирудозатрат
	|		ИЗ
	|			Спринты КАК Спринты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Спринты.ТипТрудозатрат) КАК ВложенныйЗапрос
	|		ПО ПланируемыеТрудозатраты.ТипТрудозатрат = ВложенныйЗапрос.ТипТирудозатрат
	|ГДЕ
	|	ПланируемыеТрудозатраты.Объект = &Объект
	|	И ПланируемыеТрудозатраты.Трудозатраты > ЕСТЬNULL(ВложенныйЗапрос.Трудозатраты, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Спринты.Трудозатраты,
	|	Спринты.Спринт,
	|	Спринты.ТипТрудозатрат
	|ИЗ
	|	Спринты КАК Спринты
	|ИТОГИ ПО
	|	ТипТрудозатрат";  
		
	Запрос.УстановитьПараметр("Объект", Объект);
	
	ВыборкаТип = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Результат = Новый Структура("Подсказка, Трудозатраты", "", 0);
	
	Пока ВыборкаТип.Следующий() Цикл
		Выборка = ВыборкаТип.Выбрать();
		Подсказка = Новый Массив;
		РаспределенныеТрудозатраты = 0;
	
		Пока Выборка.Следующий() Цикл 
			Текст = СтрШаблон("%1 - %2", Выборка.Трудозатраты, ?(Выборка.Спринт = Неопределено, "<не распределено>", Выборка.Спринт));
			Подсказка.Добавить(Текст);
			Если Выборка.Спринт <> Неопределено Тогда
				РаспределенныеТрудозатраты = РаспределенныеТрудозатраты + Выборка.Трудозатраты;
			КонецЕсли;
		КонецЦикла;       
		
		Если ВыборкаТип.ТипТрудозатрат = Перечисления.ТипыТрудозатрат.Разработка Тогда
			Результат.Подсказка = СтрСоединить(Подсказка, Символы.ПС);
			Результат.Трудозатраты = РаспределенныеТрудозатраты;
		ИначеЕсли ВыборкаТип.ТипТрудозатрат = Перечисления.ТипыТрудозатрат.Тестирование Тогда
			Результат.Вставить("ПодсказкаТестирование", СтрСоединить(Подсказка, Символы.ПС));
			Результат.Вставить("ТрудозатратыТестирование", РаспределенныеТрудозатраты);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

// Удаление плановых трудозатрат. Общие плановые трудозатраты также должны уменьшится.
//
// Параметры:
//  Объект	 - ДокументСсылка		 - Объект спринта
//  Спринт	 - ДокументСсылка.Спринт - Спринт
//  НовыйСпринт - ДокументСсылка.Спринт - если нужно перенести время в новый спринт
//
Процедура Удалить(Знач Объект, Знач Спринт, Знач НовыйСпринт = Неопределено) Экспорт
	
	Трудозатраты = 0;
	
	Набор = РегистрыСведений.ПланируемыеТрудозатратыПоСпринтам.СоздатьНаборЗаписей();
	Набор.Отбор.Объект.Установить(Объект);
	Набор.Отбор.Спринт.Установить(Спринт);  
	Набор.Прочитать(); 
	
	Если Набор.Количество() > 0 Тогда
		Если НовыйСпринт <> Неопределено Тогда
			Для Каждого Запись Из Набор Цикл
				Добавить(Объект, НовыйСпринт, Запись.ТипТрудозатрат, Запись.Трудозатраты);
			КонецЦикла;
		КонецЕсли;
		
		Набор.Очистить();
		Набор.Записать();
	КонецЕсли; 
			
КонецПроцедуры  

#КонецОбласти
