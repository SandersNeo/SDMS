///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер ИЛИ ВнешнееСоединение ИЛИ ТолстыйКлиентОбычноеПриложение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет записи о статусах заявки по системам в регистр сведений
//
// Параметры:
//  Заявка			 - ДокументСсылка.ЗаявкаНаРазработку	 - ссылка на заявку
//  ТаблицаЗначений	 - ТаблицаЗначений	 - таблица статусов заявки по системам
//		* Система	 - СправочникСсылка.СтатусыОбъектов	 - система заявки
//		* Заявка	 - ДокументСсылка.ЗаявкаНаРазработику	 - ссылка на заявку
//		* Статус	 - СправочникСсылка.СтатусыОбъектов	 - статус заявки по системе
//	ДатаЗаписи		 - Дата (дата и время)	 - дата, на которую будут созданы записи
//
Процедура Добавить(Знач Заявка, Знач ТаблицаЗначений, Знач ДатаЗаписи = Неопределено) Экспорт
	
	ТекущаяДата  = ТекущаяДатаСеанса();
	
	Если ДатаЗаписи <> Неопределено Тогда
		ТекущаяДата = ДатаЗаписи;
	КонецЕсли;
	
	Пользователь = ПараметрыСеанса.ТекущийПользователь;	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	тзВходныеДанные.Система КАК Система,
	|	тзВходныеДанные.Заявка КАК Заявка,
	|	тзВходныеДанные.Статус КАК Статус
	|ПОМЕСТИТЬ ВходныеДанные
	|ИЗ
	|	&ВнешниеДанные КАК тзВходныеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсторияСтатусовЗаявок.Система КАК Система,
	|	ИсторияСтатусовЗаявок.Заявка КАК Заявка,
	|	ИсторияСтатусовЗаявок.Статус КАК Статус,
	|	ИсторияСтатусовЗаявок.Пользователь КАК Пользователь
	|ПОМЕСТИТЬ ДанныеРегистра
	|ИЗ
	|	РегистрСведений.ИсторияСтатусовЗаявокПоСистемам.СрезПоследних(&Период, Заявка = &Заявка) КАК ИсторияСтатусовЗаявок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период КАК Период,
	|	ВходныеДанные.Заявка КАК Заявка,
	|	ВходныеДанные.Система КАК Система,
	|	ВходныеДанные.Статус КАК Статус,
	|	&Пользователь КАК Пользователь
	|ИЗ
	|	ВходныеДанные КАК ВходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеРегистра КАК ДанныеРегистра
	|		ПО ВходныеДанные.Система = ДанныеРегистра.Система
	|ГДЕ
	|	(ВходныеДанные.Статус <> ДанныеРегистра.Статус
	|			ИЛИ ДанныеРегистра.Статус ЕСТЬ NULL)";
	
	Запрос.УстановитьПараметр("ВнешниеДанные", ТаблицаЗначений);
	Запрос.УстановитьПараметр("Заявка", Заявка);
	Запрос.УстановитьПараметр("Период", ТекущаяДата);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	ТаблицаЗаписейДляРегистра = Запрос.Выполнить().Выгрузить();
	Если ТаблицаЗаписейДляРегистра.Количество() > 0 Тогда
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(ТекущаяДата);
		НаборЗаписей.Отбор.Заявка.Установить(Заявка);
		
		НаборЗаписей.Загрузить(ТаблицаЗаписейДляРегистра);
		НаборЗаписей.Записать();
	КонецЕсли;
	
КонецПроцедуры

// Удаляет все записи из регистра по указанной заявке
//
// Параметры:
//  Заявка	 - ДокументСсылка.ЗаявкаНаРазработку - Заявка на разработку
//
Процедура УдалитьЗаписиПоЗаявке(Знач Заявка) Экспорт
	
	НаборЗаписей = РегистрыСведений.ИсторияСтатусовЗаявокПоСистемам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Заявка.Установить(Заявка);
	НаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
