///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПанельНавигации.Скопировать(ЭтотОбъект, Параметры);
    Объект = Параметры.Объект;		
	ЧерновикЗаявки = ЭтоЧерновикЗаявки();	
	
	Если ЧерновикЗаявки Тогда
		Элементы.ГруппаОсновная.Видимость = Ложь;
	Иначе 
		Элементы.ГруппаЧерновикЗаявки.Видимость = Ложь;
		ОбновитьДанныеФормы();
	КонецЕсли;
	
	Если КлиентскоеПриложение.ТипПриложения() = ТипКлиентскогоПриложения.ВебКлиент Тогда
		Элементы.СписокУчастников.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПанельНавигацииКлиент.ПриОткрытии(Элементы, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если СобытияОповещенияКлиент.СобытиеИзменения(ИмяСобытия, Объект, Параметр) Тогда
		ОбновитьДанныеФормы();
	КонецЕсли;
	
	ПанельНавигацииКлиент.ОбработкаОповещения(ЭтотОбъект, Объект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокУчастниковПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
		
	Если ЗначениеЗаполнено(ДанныеСобытия.Href) Тогда  
		
		НачалоВхождения = СтрНайти(ДанныеСобытия.Href, "sdms_user_");
		
		Если НачалоВхождения > 0 Тогда
			Идентификатор = Сред(ДанныеСобытия.Href, НачалоВхождения + 10);   
			Отбор = Участники.НайтиСтроки(Новый Структура("ИД", Идентификатор));     
			
			Если Отбор.Количество() > 0 Тогда 
				ИнтерфейсПриложенияКлиент.ОткрытьИнформациюОПользователе(ЭтотОбъект, Отбор[0].Пользователь, СтандартнаяОбработка);
			КонецЕсли;
		Иначе
			Команда = ДанныеСобытия.Href;
			ОбработатьКомандуПоляHTML(Команда);
		КонецЕсли;
	Иначе
		
		Попытка
			Текст = Элементы.СписокУчастников.Документ.defaultView.get_describe();
		Исключение    
			Текст = Неопределено;
		КонецПопытки; 
		
		Если ТипЗнч(Текст) = Тип("Строка") И Текст <> "" Тогда
			ИзменитьКомментарийУчастника(Текст);			
		КонецЕсли;	
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура СписокУчастниковДокументСформирован(Элемент)
	
	ПараметрыОтбора = Новый Структура("Подписан", Истина);
	СтрокиГдеПодписан = Участники.НайтиСтроки(ПараметрыОтбора);
	Подписан = (СтрокиГдеПодписан.Количество() > 0);

	Элементы.СписокУчастников.Документ.defaultView.subscriptionDisplay(Подписан);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
 
&НаКлиенте
Процедура НастроитьДоступ(Команда)

	ПараметрыОткрытия = Новый Структура("Заявка", Объект);
	
	ОткрытьФорму("РегистрСведений.ДоступныеЧерновики.Форма.НастройкаДоступа", ПараметрыОткрытия, 
		ЭтотОбъект,	УникальныйИдентификатор, , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПанельНавигацииНажатие(Команда)
	
	ПанельНавигацииКлиент.Нажатие(ЭтотОбъект, Команда, Истина);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьУчастников(Знач Роль)
		
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборУчастников", ЭтотОбъект); 
	ПараметрыОткрытия = Новый Структура("Объект, Роль", Объект, Роль);
	
	ОткрытьФорму("РегистрСведений.Участники.Форма.МножественныйВыбор", ПараметрыОткрытия, ЭтотОбъект, , , , 
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаСервере
Процедура ДобавитьПодпиcчика(Знач Подписчик)
	
	РегистрыСведений.Участники.Добавить(Объект, Подписчик, Справочники.РолиУчастников.Подписчик, Истина);
	ОбновитьДанныеФормы();

КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВводЭлектроннойПочты(ПочтаПодписчика, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ПочтаПодписчика) Тогда	
		Результат = ПроверитьПодписчикаНаСервере(ПочтаПодписчика);
		
		Если ЗначениеЗаполнено(Результат.ТекстОшибки) Тогда
			ПоказатьПредупреждение(, Результат.ТекстОшибки);
		Иначе
			ДобавитьПодпиcчика(Результат.Подписчик);
			ОповеститьСвязаннуюФорму(); 			
		КонецЕсли;		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуУчастников()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Участники.Пользователь КАК Пользователь,
	|	Участники.Роль КАК Роль,
	|	Участники.Комментарий КАК Комментарий,
	|	Участники.ПолучатьОповещения КАК ПолучатьОповещения,
	|	Участники.ДатаДобавления КАК ДатаДобавления,
	|	Участники.Автор КАК Автор,
	|	ВЫБОР
	|		КОГДА Участники.Пользователь = &ТекущийПользователь
	|				И Участники.ПолучатьОповещения
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Подписан,
	|	ЕСТЬNULL(Пользователи.Наименование, ЕСТЬNULL(Подписчики.Наименование, """")) КАК ИмяПользователя
	|ИЗ
	|	РегистрСведений.Участники КАК Участники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО Участники.Пользователь = Пользователи.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подписчики КАК Подписчики
	|		ПО Участники.Пользователь = Подписчики.Ссылка
	|ГДЕ
	|	НЕ Участники.Скрытый
	|	И Участники.Объект = &Объект
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЕСТЬNULL(Пользователи.Наименование, ЕСТЬNULL(Подписчики.Наименование, """"))";     
	
	Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("Объект", Объект);
	
	ТаблицаУчастников = Запрос.Выполнить().Выгрузить();
	ИнтерактивныеРоли = УчастникиПроцессов.ИнтерактивныеРоли();
	
	СуперПользователь = (РольДоступна("Администратор") ИЛИ РольДоступна("ПолныеПрава"));
	
	Для Каждого Строка Из ТаблицаУчастников Цикл
		НоваяСтрока = Участники.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);   
		
		УдалениеДоступно = ИнтерактивныеРоли.Найти(Строка.Роль) <> Неопределено И (СуперПользователь 
			ИЛИ Строка.Пользователь = ПараметрыСеанса.ТекущийПользователь 
			ИЛИ Строка.Автор = ПараметрыСеанса.ТекущийПользователь
			ИЛИ Строка.Роль = Справочники.РолиУчастников.УчастникКомандыУправленияПроектом);
		
		НоваяСтрока.ЕстьКартинкаСостояния = ИнтерактивныеРоли.Найти(Строка.Роль) = Неопределено;
		НоваяСтрока.ИД = СтрЗаменить(XMLСтрока(Строка.Роль) + XMLСтрока(Строка.Пользователь), "-", "");   
		НоваяСтрока.УдалениеДоступно = УдалениеДоступно;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьКомментарийУчастника(Знач СтрокаJSON)
	
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(СтрокаJSON);
	Данные = ПрочитатьJSON(Чтение);
	Чтение.Закрыть();
	
	Позиция = СтрНайти(Данные.name, "comment_",);
	
	Если Позиция > 0 Тогда 
		Идентификатор = Сред(Данные.name, Позиция + 8);		
		Отбор = Участники.НайтиСтроки(Новый Структура("ИД", Идентификатор));     
		
		Если Отбор.Количество() > 0 Тогда 
			РегистрыСведений.Участники.Изменить(Объект, Отбор[0].Пользователь, 
				Отбор[0].Роль, Отбор[0].ПолучатьОповещения, Ложь, Данные.text);
		КонецЕсли;	                                                                                               
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьПодписки(Подписан)
	
	ПараметрыПоиска = Новый Структура("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	СтрокиПользователя = Участники.НайтиСтроки(ПараметрыПоиска);
	
	Если Подписан Тогда
		// Отменяем подписки
		Для Каждого Строка Из СтрокиПользователя Цикл
			Наблюдатель = (Строка.Роль = Справочники.РолиУчастников.Наблюдатель);
			
			Если Наблюдатель Тогда
				РегистрыСведений.Участники.Изменить(Объект, Строка.Пользователь, Строка.Роль, Ложь, Истина,, Истина); 
			ИначеЕсли Строка.ПолучатьОповещения Тогда
				РегистрыСведений.Участники.Изменить(Объект, Строка.Пользователь, Строка.Роль, Ложь, Ложь); 
			КонецЕсли;
		КонецЦикла;
	Иначе
		// Добавляем подписки
		Если СтрокиПользователя.Количество() = 0 Тогда
			РегистрыСведений.Участники.Добавить(Объект, ПараметрыСеанса.ТекущийПользователь, Справочники.РолиУчастников.Наблюдатель, Истина);
		Иначе
			Для Каждого Строка Из СтрокиПользователя Цикл
				Если НЕ Строка.ПолучатьОповещения Тогда
					РегистрыСведений.Участники.Изменить(Объект, Строка.Пользователь, Строка.Роль, Истина, Ложь);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборУчастников(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Если произошли изменения в участниках, обновим список 
	// и заголовок вкладки Участники формы родителя.
	Если Результат Тогда
		ОповеститьСвязаннуюФорму();
	КонецЕсли; 
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеФормы()
	
	Участники.Очистить();	
	ЗаполнитьТаблицуУчастников();  
	СписокУчастников = РегистрыСведений.Участники.ПолучитьСтраницуУчастников(Объект, Участники);

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьКомандуПоляHTML(Команда) 
	
	Если СтрНайти(Команда, "#add_observer") > 0 Тогда   
		Роль = ПредопределенноеЗначение("Справочник.РолиУчастников.Наблюдатель");		
		ВыбратьУчастников(Роль);

	ИначеЕсли СтрНайти(Команда, "#add_subscriber") > 0 Тогда 		
		Оповещение = Новый ОписаниеОповещения("ЗавершитьВводЭлектроннойПочты", ЭтотОбъект);
		ПоказатьВводСтроки(Оповещение, , "Адрес электронной почты", 50);   
		
	ИначеЕсли СтрНайти(Команда, "#add_participant") > 0 Тогда 
		Роль = ПредопределенноеЗначение("Справочник.РолиУчастников.УчастникКомандыУправленияПроектом");		
		ВыбратьУчастников(Роль); 	
		
	ИначеЕсли СтрНайти(Команда, "#delete-") > 0 Тогда		
		Идентификатор = Сред(Команда, СтрНайти(Команда, "#delete-") + 8);   
		Отбор = Участники.НайтиСтроки(Новый Структура("ИД", Идентификатор));     
		
		Если Отбор.Количество() > 0 Тогда 
			УдалитьПользователяНаСервере(Отбор[0].Пользователь, Отбор[0].Роль);
			ОповеститьСвязаннуюФорму();    
		КонецЕсли;			
	
	ИначеЕсли СтрНайти(Команда, "#unsubscribe") > 0 Тогда 
		ИзменитьПодписки(Истина);
		ОповеститьСвязаннуюФорму(); 		
	ИначеЕсли СтрНайти(Команда, "#subscribe") > 0 Тогда
		ИзменитьПодписки(Ложь);  
		ОповеститьСвязаннуюФорму(); 
	КонецЕсли;  	
	
КонецПроцедуры
		
&НаКлиенте
Процедура ОповеститьСвязаннуюФорму()
	
	Оповестить(СобытияОповещенияКлиент.ИмяСобытияИзменения(), Объект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьПодписчикаНаСервере(Почта)
	
	Возврат ОбщегоНазначения.ПроверитьПодписчикаНаСервере(Почта);
	
КонецФункции

&НаСервере
Процедура УдалитьПользователяНаСервере(Знач Пользователь, Знач Роль)
		
	РегистрыСведений.Участники.Изменить(Объект, Пользователь, Роль, Ложь, Истина,, Истина);
	ОбновитьДанныеФормы(); 
	
КонецПроцедуры

&НаСервере
Функция ЭтоЧерновикЗаявки()
	
	ЭтоЧерновикЗаявки = Ложь;
	
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.ЗаявкаНаРазработку") Тогда		
		ЭтоЧерновикЗаявки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "Черновик");
		
		// Пока у пользователя был открыта заявка. 
		// Другой пользователь установил у этой заявки признак - черновик
		// Так как текущему пользователю не хватает право по RLS прочитать такую запись то метод возвращает неопределенно!
		// Так что вставим защиту от таких ситуаций
		Если ЭтоЧерновикЗаявки = Неопределено тогда
			ЭтоЧерновикЗаявки = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ЭтоЧерновикЗаявки;

КонецФункции

#КонецОбласти
