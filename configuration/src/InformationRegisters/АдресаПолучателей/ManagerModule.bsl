///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Добавить запись в регистр
//
// Параметры:
//  Получатель		 - СправочникСсылка.Пользователи, СправочникСсылка.Филиалы, ПеречислениеСсылка.ТипыСлужебногоКанала	 - Получатель сообщения
//  Мессенджер		 - СправочникСсылка.Мессенджеры																		 - выбранный мессенджер
//  Адрес			 - Строка																							 - адрес канала получателя
//  Идентификатор	 - Строка																							 - идентификатор канала получателя
//
Процедура Добавить(Знач Получатель, Знач Мессенджер, Знач Адрес, Знач Идентификатор = "") Экспорт 
	
	Набор = СоздатьНаборЗаписей();
	Набор.Отбор.Получатель.Установить(Получатель);
	Набор.Отбор.Мессенджер.Установить(Мессенджер);  
	
	Запись = Набор.Добавить();
	Запись.Получатель = Получатель;
	Запись.Мессенджер = Мессенджер;
	Запись.Адрес = Адрес;  
	Запись.Идентификатор = Идентификатор;  
	
	Набор.Записать();
	
КонецПроцедуры

// Обновляет идентификаторы пользователей SDMS
//
Процедура ОбновитьИдентификаторыПользователейSDMS() Экспорт
	
	ПочтаПользователь = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Ссылка,
	|	Пользователи.Почта КАК Почта,
	|	ЕСТЬNULL(АдресаПолучателей.Адрес, """") КАК Адрес,
	|	ЕСТЬNULL(АдресаПолучателей.Идентификатор, """") КАК Идентификатор
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АдресаПолучателей КАК АдресаПолучателей
	|		ПО (АдресаПолучателей.Получатель = Пользователи.Ссылка)
	|			И (АдресаПолучателей.Мессенджер = &ОсновнойМессенджер)
	|ГДЕ
	|	НЕ Пользователи.ПометкаУдаления
	|	И НЕ Пользователи.Недействителен
	|	И Пользователи.Почта <> """"
	|	И НЕ Пользователи.Служебный";
	
	Мессенджер = Константы.ОсновнойМессенджер.Получить();
	Запрос.УстановитьПараметр("ОсновнойМессенджер", Мессенджер);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ПочтаПользователь.Вставить(НРег(Выборка.Почта), Новый Структура("Ссылка, Адрес, Идентификатор", 
			Выборка.Ссылка, Выборка.Адрес, Выборка.Идентификатор));
	КонецЦикла;  
	
	Обработка = Справочники.Мессенджеры.ПолучитьОбработкуМессенджера(Мессенджер);
	
	Если Обработка <> Неопределено Тогда
		Обработка.ОбновитьИдентификаторыПользователейSDMS(ПочтаПользователь);
	КонецЕсли;	
		
КонецПроцедуры

// Отправика сообщения
//
// Параметры:
//  ТекстСообщения	 - Строка																						 - Сообщение
//  Получатель		 - СправочникСсылка.Пользователи, СправочникСсылка.Филиалы, ПеречислениеСсылка.ТипыСлужебногоКанала	 - Получатель сообщения
//
Процедура ОтправитьСообщение(ТекстСообщения, Получатель) Экспорт
	
	Обработка = Справочники.Мессенджеры.ПолучитьОбработкуМессенджера();
	
	Если Обработка <> Неопределено Тогда
		Адрес = ПолучитьАдресПолучателя(Получатель);
		Обработка.ОтправитьСообщение(ТекстСообщения, Адрес);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьАдресПолучателя(Получатель)
	
	Результат = "";
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Мессенджеры.Ссылка КАК Ссылка,
	|	Мессенджеры.ИспользуетсяИдентификатор КАК ИспользуетсяИдентификатор
	|ПОМЕСТИТЬ ДанныеМессенджер
	|ИЗ
	|	Справочник.Мессенджеры КАК Мессенджеры
	|ГДЕ
	|	Мессенджеры.Ссылка = &ОсновнойМессенджер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДанныеМессенджер.ИспользуетсяИдентификатор
	|			ТОГДА ЕСТЬNULL(АдресаПолучателей.Идентификатор, """")
	|		ИНАЧЕ ЕСТЬNULL(АдресаПолучателей.Адрес, """")
	|	КОНЕЦ КАК АдресПолучателя
	|ИЗ
	|	РегистрСведений.АдресаПолучателей КАК АдресаПолучателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеМессенджер КАК ДанныеМессенджер
	|		ПО (АдресаПолучателей.Получатель = &Получатель)
	|			И АдресаПолучателей.Мессенджер = ДанныеМессенджер.Ссылка"; 
	
	ОсновнойМессенджер = Константы.ОсновнойМессенджер.Получить();	
	Запрос.УстановитьПараметр("ОсновнойМессенджер", ОсновнойМессенджер);	
	Запрос.УстановитьПараметр("Получатель", Получатель);	
	
	РезультатЗапроса = Запрос.Выполнить();

	Если НЕ РезультатЗапроса.Пустой() Тогда  
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Результат = Выборка.АдресПолучателя;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
