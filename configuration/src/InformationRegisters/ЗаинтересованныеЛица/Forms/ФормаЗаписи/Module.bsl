///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Объект") Тогда
		Запись.Объект = Параметры.Объект;
	КонецЕсли;
	
	// Мы не храним информацию о должности и подразделении пользователя,
	// так как эта информация может измениться и будет рахождение данных
	// в карточке пользователя и карточке заинтересованного лица.
	Если ЗначениеЗаполнено(Запись.Пользователь) И ТипЗнч(Запись.Пользователь) = Тип("СправочникСсылка.Пользователи") Тогда
		ЗаполнитьДолжность(Запись);
		Элементы.Должность.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Запись.ИсходныйКлючЗаписи.Пустой() Тогда
		ТекущийОбъект.ДатаДобавления = ТекущаяДатаСеанса();
	КонецЕсли;
	
	// Так как мы не храним информацию должности и подразделении
	//  пользователя, то нужно очистить эти поля
	Если ЗначениеЗаполнено(ТекущийОбъект.Пользователь)
		И ТипЗнч(ТекущийОбъект.Пользователь) = Тип("СправочникСсылка.Пользователи") Тогда
		
		ТекущийОбъект.Должность = Справочники.Должности.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбрабтчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДолжностьОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокТипов = Новый СписокЗначений;
	СписокТипов.Добавить("Пользователи", "Пользователи");
	СписокТипов.Добавить("Подписчики", "Подписчики");
	
	Если ТипЗнч(Запись.Пользователь) = Тип("Неопределено") Тогда
		АктивныйЭлемент = Неопределено;
	Иначе
		ТипОбъектаОснования = СтрЗаменить(ТРег(ТипЗнч(Запись.Пользователь)), " ", "");
		АктивныйЭлемент = СписокТипов.НайтиПоЗначению(ТипОбъектаОснования);
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборТипаПользователя", ЭтотОбъект);
	СписокТипов.ПоказатьВыборЭлемента(ОписаниеОповещения, "Выбор типа данных", АктивныйЭлемент);
		
КонецПроцедуры

&НаКлиенте
Процедура ПользовательОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ОбработатьЗапись(Команда)
	
	Записать();
	
	Если Команда.Имя = "ЗаписатьИЗакрыть" Тогда
		Закрыть(Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДолжность(Запись)
	
	Запись.Должность = ПолучитьДолжность(Запись.Пользователь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборТипаПользователя(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборПользователя", ЭтотОбъект);
	
	Если ВыбранныйЭлемент.Значение = "Пользователи" Тогда		
		ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", Новый Структура("ТолькоПросмотр", Истина), ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);		
	Иначе			
		ПоказатьВводСтроки(ОписаниеОповещения,, "Адрес электронной почты", 50);
	КонецЕсли;
	
КонецПроцедуры
 
&НаКлиенте
Процедура ОбработатьВыборПользователя(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	// В зависимости от типа выбранного пользователя выполним разные
	// действия.
	ТипПользователя = ТипЗнч(Результат);
	
	Если ТипПользователя = Тип("СправочникСсылка.Пользователи") Тогда
		Модифицированность = Истина;
		Запись.Пользователь = Результат;
	Иначе
		РезультатПроверки = ПроверитьПодписчикаНаСервере(Результат);
		Если ЗначениеЗаполнено(РезультатПроверки.ТекстОшибки) Тогда
			ПоказатьПредупреждение(, РезультатПроверки.ТекстОшибки);
		Иначе
			Модифицированность = Истина;
			Запись.Пользователь = РезультатПроверки.Подписчик;
		КонецЕсли;
	КонецЕсли;
	
	// Заблокируем некоторые элементы на форме.
	УстановитьДоступностьЭлементов(ТипПользователя);
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДолжность(Знач Пользователь)
	
	Должность = Справочники.Должности.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛичныеДелаСрезПоследних.Данные КАК Должность
	|ИЗ
	|	РегистрСведений.ЛичныеДела.СрезПоследних(
	|			&ТекущаяДата,
	|			Сотрудник = &Сотрудник
	|				И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПринятНаДолжность)) КАК ЛичныеДелаСрезПоследних";
	
	Запрос.УстановитьПараметр("Сотрудник", Пользователь);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Должность = Выборка.Должность;
	КонецЕсли;
	
	Возврат Должность;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьПодписчикаНаСервере(Почта)
	
	Возврат ОбщегоНазначения.ПроверитьПодписчикаНаСервере(Почта);
	
КонецФункции

&НаКлиенте
Процедура УстановитьДоступностьЭлементов(Знач ТипПользователя)
	
	Запись.Должность = Неопределено;
		
	Если ТипПользователя = Тип("СправочникСсылка.Пользователи") Тогда
		ЗаполнитьДолжность(Запись);
	КонецЕсли;
	
	Элементы.Должность.ТолькоПросмотр = (ТипПользователя = Тип("СправочникСсылка.Пользователи"));

КонецПроцедуры

#КонецОбласти
