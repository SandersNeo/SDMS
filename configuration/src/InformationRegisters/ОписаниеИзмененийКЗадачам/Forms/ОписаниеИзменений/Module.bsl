///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Ключ.Пустой() Тогда
		Элементы.Задача.ТолькоПросмотр = Истина;
		ОбновитьОписаниеИзменений();
	Иначе
		// Если в параметрах передана задача, то установим
		// её для записи и заблокируем поле для изменения.
		Если Параметры.Свойство("Задача") Тогда
			Элементы.Задача.ТолькоПросмотр = Истина;
			Запись.Задача = Параметры.Задача;
		КонецЕсли;
		
		Если НЕ Параметры.ЗначениеКопирования.Пустой() Тогда
			ЗаполнитьИзЗначенияКопирования(Параметры.ЗначениеКопирования);
			ОбновитьОписаниеИзменений(Параметры.ЗначениеКопирования.Задача, Параметры.ЗначениеКопирования.ДатаДобавления);
		КонецЕсли;
		
		Если Запись.ВидДайджеста.Пустая() Тогда
			Запись.ВидДайджеста = Перечисления.ВидыДайджестов.Плановый;
		КонецЕсли; 
		
	КонецЕсли;
	
	ИспользоватьСтильДайджеста = Истина;
	РежимСозданияПлановогоДайджеста = Параметры.Свойство("РежимСозданияПлановогоДайджеста"); 
	
	Если РежимСозданияПлановогоДайджеста Тогда 
		Элементы.ГруппаШапка.Видимость = Ложь;  
		Элементы.ФормаКоманднаяПанель.Видимость = Ложь;
		Заголовок = "Создание планового дайджеста"; 
		Элементы.ОпубликоватьДайджест.КнопкаПоУмолчанию = Истина;
		ЗаполнитьДанныеПлановыйДайджест(); 
	Иначе
		Элементы.ГруппаПлановые.Видимость = Ложь;
	КонецЕсли;
	
	Параметры.Описание = Описание;
	РедакторОписания.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ГруппаОписание, Запись.Опубликовано); 
	
	// форма открывается сразу с редактором
	Функциональность = РедакторОписанияКлиентСервер.ИмяСобытияОткрытияРедактора();
	ОбщегоНазначенияВызовСервера.ОтслеживаниеИспользованияФункциональностиНаСервере(Функциональность);
	ЭтотОбъект[РедакторОписанияКлиентСервер.ИмяРеквизитаОткрытиеОписания()] = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьРедактирования();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи) 
	
	ПараметрыЗаписи = Новый Структура;
	Описание = РедакторОписанияКлиент.ПолучитьТекст(ЭтотОбъект);
   
	Если РежимСозданияПлановогоДайджеста Тогда		
		Отказ = Истина;  
		Если ОпубликоватьДайджестСервер() Тогда 
			Закрыть();
		КонецЕсли;                                
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.ДатаДобавления) Тогда
		ТекущийОбъект.ДатаДобавления = ТекущаяДатаСеанса();
		ТекущийОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	ТекущийОбъект.Описание = Новый ХранилищеЗначения(Описание, Новый СжатиеДанных(9));

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Обновление содержимого редактора после записи
	ОбновитьОписаниеИзменений();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы 

&НаКлиенте
Процедура ДеревоПлановыхОписанийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	КлючЗаписи = Новый Структура(ДеревоПлановыхОписаний.НайтиПоИдентификатору(ВыбраннаяСтрока).Значение);
	
	Если КлючЗаписи.Количество() <> 0 Тогда 
		МассивКлюча = Новый Массив;
		МассивКлюча.Добавить(КлючЗаписи);
		КлючЗаписиРегистра = Новый("РегистрСведенийКлючЗаписи.ОписаниеИзмененийКЗадачам", МассивКлюча);
		
		ОткрытьФорму("РегистрСведений.ОписаниеИзмененийКЗадачам.ФормаЗаписи", Новый Структура("Ключ", КлючЗаписиРегистра)); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПлановыхОписанийПометкаПриИзменении(Элемент) 
	
	ТекущаяСтрока = ДеревоПлановыхОписаний.НайтиПоИдентификатору(Элементы.ДеревоПлановыхОписаний.ТекущаяСтрока);
	ПроставитьЗависимыеПометкиВДереве(ТекущаяСтрока); 
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриНажатииПоляHTMLДокумента(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	РедакторОписанияКлиент.ПриНажатииПоляHTMLДокумента(ЭтотОбъект, ДанныеСобытия, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы 

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОпубликоватьДайджест(Команда) 
	
	ПараметрыЗаписи = Новый Структура;
	Описание = РедакторОписанияКлиент.ПолучитьТекст(ЭтотОбъект);
	
	Если ОпубликоватьДайджестСервер() Тогда 
		Закрыть();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДайджест(Команда) 
	
	СформироватьДайджестСервер(); 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДанныеПлановыйДайджест() 
	
	ЗаполнитьОписаниеИзмененийСистемы();
	ЗаполнитьДеревоПлановыхОписаний();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоПлановыхОписаний() 
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОписаниеИзмененийКЗадачам.Задача КАК Задача,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ОписаниеИзмененийКЗадачам.Задача) КАК ЗадачаПредставление,
	|	ОписаниеИзмененийКЗадачам.ДатаДобавления КАК ДатаДобавления,
	|	ОписаниеИзмененийКЗадачам.Опубликовано КАК Опубликовано,
	|	ВЫБОР
	|		КОГДА ОписаниеИзмененийКЗадачам.ОписаниеИзмененийСистемы = &Описание
	|				И НЕ ОписаниеИзмененийКЗадачам.ОписаниеИзмененийСистемы = ЗНАЧЕНИЕ(Справочник.ОписанияИзмененийСистемы.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Пометка,
	|	ОписаниеИзмененийКЗадачам.ТипИзменения КАК ТипИзменения
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	РегистрСведений.ОписаниеИзмененийКЗадачам КАК ОписаниеИзмененийКЗадачам
	|ГДЕ
	|	ОписаниеИзмененийКЗадачам.ВидДайджеста = ЗНАЧЕНИЕ(Перечисление.ВидыДайджестов.Плановый)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.Задача КАК Задача,
	|	Данные.ЗадачаПредставление КАК ЗадачаПредставление,
	|	Данные.ДатаДобавления КАК ДатаДобавления,
	|	Данные.Пометка КАК Пометка,
	|	Данные.ТипИзменения КАК ТипИзменения
	|ИЗ
	|	Данные КАК Данные
	|ГДЕ
	|	НЕ Данные.Опубликовано
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Данные.Задача,
	|	Данные.ЗадачаПредставление,
	|	Данные.ДатаДобавления,
	|	Данные.Пометка,
	|	Данные.ТипИзменения
	|ИЗ
	|	Данные КАК Данные
	|ГДЕ
	|	Данные.Пометка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипИзменения,
	|	Данные.Задача
	|ИТОГИ ПО
	|	ТипИзменения";  
	
	Запрос.УстановитьПараметр("Описание", ОписаниеИзмененийСистемы);
	ВыборкаТипИзменения = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЭлементыДерева = ДеревоПлановыхОписаний.ПолучитьЭлементы();
	ЭлементыДерева.Очистить();       
	
	Пока ВыборкаТипИзменения.Следующий() Цикл   
		НовСтрока = ЭлементыДерева.Добавить();
		НовСтрока.Наименование = ВыборкаТипИзменения.ТипИзменения; 
		НовСтрока.ТипИзменения = ВыборкаТипИзменения.ТипИзменения;
		Выборка = ВыборкаТипИзменения.Выбрать(); 
		Пометка = Ложь;
		Пока Выборка.Следующий() Цикл    
			ДетСтрока = НовСтрока.ПолучитьЭлементы().Добавить();
			ДетСтрока.Наименование = Выборка.ЗадачаПредставление; 
			ДетСтрока.Значение = Новый ФиксированнаяСтруктура("Задача, ДатаДобавления", Выборка.Задача, Выборка.ДатаДобавления); 
			ДетСтрока.Пометка = Выборка.Пометка;
			ДетСтрока.Уровень = 1; 
			Пометка = Пометка ИЛИ ДетСтрока.Пометка;
		КонецЦикла;
		НовСтрока.Пометка = Пометка;
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзЗначенияКопирования(Знач ЗначениеКопирования)
	
	Запись.Автор = Справочники.Пользователи.ПустаяСсылка();
	Запись.ДатаДобавления = Дата(1, 1, 1);
	Запись.ДатаПубликации = Дата(1, 1, 1);
	Запись.Опубликовано = Ложь;
	
	// Заполнение задачи
	Запись.Задача = ЗначениеКопирования.Задача;
	
	// Заполнение описания
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОписаниеИзмененийКЗадачам.ТипИзменения КАК ТипИзменения,
	|	ОписаниеИзмененийКЗадачам.ВидДайджеста КАК ВидДайджеста
	|ИЗ
	|	РегистрСведений.ОписаниеИзмененийКЗадачам КАК ОписаниеИзмененийКЗадачам
	|ГДЕ
	|	ОписаниеИзмененийКЗадачам.Задача = &Задача
	|	И ОписаниеИзмененийКЗадачам.ДатаДобавления = &ДатаДобавления";
	
	Запрос.УстановитьПараметр("Задача", ЗначениеКопирования.Задача);
	Запрос.УстановитьПараметр("ДатаДобавления", ЗначениеКопирования.ДатаДобавления);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Запись.ТипИзменения = Выборка.ТипИзменения;
		Запись.ВидДайджеста = Выборка.ВидДайджеста;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОписаниеИзмененийСистемы() 
	
	// Плановый дайджест должен быть только один, поэтому беру первое плановое описание, больше текущей даты
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СправочникОписанияИзмененийСистемы.Ссылка КАК Ссылка,
	|	СправочникОписанияИзмененийСистемы.Описание КАК Описание,
	|	СправочникОписанияИзмененийСистемы.ДатаПубликации КАК ДатаПубликации
	|ИЗ
	|	Справочник.ОписанияИзмененийСистемы КАК СправочникОписанияИзмененийСистемы
	|ГДЕ
	|	СправочникОписанияИзмененийСистемы.ДатаПубликации > &ДатаПубликации
	|	И НЕ СправочникОписанияИзмененийСистемы.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ДатаПубликации", ТекущаяДатаСеанса());
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда   
		ОписаниеИзмененийСистемы = Выборка.Ссылка;   
		Описание = Выборка.Описание.Получить();  
		ДатаПубликации = Выборка.ДатаПубликации;		
	Иначе 
		ДатаПубликации = КонецДня(ТекущаяДатаСеанса()) + 1; 
	КонецЕсли;  
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОписаниеИзменений(Знач Задача = Неопределено, Знач ДатаДобавления = Неопределено)
	
	Задача = ?(Задача = Неопределено, Запись.Задача, Задача);
	ДатаДобавления = ?(ДатаДобавления = Неопределено, Запись.ДатаДобавления, ДатаДобавления);
	
	// Так как запись регистра не является ссылкой, то текст
	// описания требуется получить вручную
	ОписаниеИзменений = ПолучитьОписаниеИзменений(Задача, ДатаДобавления);
	
	// Установка текста описания
	Описание = ОписаниеИзменений;		
	
КонецПроцедуры

&НаСервере
Функция ОпубликоватьДайджестСервер() 	
	
	ТекущаяДатаСеанса =	ТекущаяДатаСеанса(); 
	
	Если ДатаПубликации <= КонецДня(ТекущаяДатаСеанса) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Дата публикации должна быть больше текущей даты",, "ДатаПубликации");
		Возврат Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОписаниеИзмененийСистемы) Тогда  
		ОбъектОписаниеИзмененийСистемы = ОписаниеИзмененийСистемы.ПолучитьОбъект();
	Иначе
		ОбъектОписаниеИзмененийСистемы = Справочники.ОписанияИзмененийСистемы.СоздатьЭлемент();
		ОбъектОписаниеИзмененийСистемы.ДатаСоздания = ТекущаяДатаСеанса;
		ОбъектОписаниеИзмененийСистемы.Записать(); 
	КонецЕсли;
	
	ОбъектОписаниеИзмененийСистемы.ДатаПубликации = ДатаПубликации; 
	Сжатие = Новый СжатиеДанных(9);
	ОбъектОписаниеИзмененийСистемы.Описание = Новый ХранилищеЗначения(Описание, Сжатие); 
	ОбъектОписаниеИзмененийСистемы.Записать(); 
		
	МассивЗадач = Новый Массив; 
	
	Для Каждого ЭлементТип Из ДеревоПлановыхОписаний.ПолучитьЭлементы() Цикл 
		Для Каждого Элемент Из ЭлементТип.ПолучитьЭлементы() Цикл 
			Структура = Новый Структура(Элемент.Значение); 
			Структура.Вставить("ОписаниеИзмененийСистемы", ОбъектОписаниеИзмененийСистемы.Ссылка);
			Структура.Вставить("Опубликовано", Элемент.Пометка);
			МассивЗадач.Добавить(Структура);
		КонецЦикла;
	КонецЦикла;
	
	РегистрыСведений.ОписаниеИзмененийКЗадачам.ОтметитьОпубликованым(МассивЗадач);
	Модифицированность = Ложь;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПолучитьОписаниеИзменений(Знач Задача, Знач ДатаДобавления)
	
	Результат = "";
	
	// Получение запросом данных описания
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОписаниеИзмененийКЗадачам.Описание КАК Описание
	|ИЗ
	|	РегистрСведений.ОписаниеИзмененийКЗадачам КАК ОписаниеИзмененийКЗадачам
	|ГДЕ
	|	ОписаниеИзмененийКЗадачам.Задача = &Задача
	|	И ОписаниеИзмененийКЗадачам.ДатаДобавления = &ДатаДобавления";
	
	Запрос.УстановитьПараметр("Задача", Задача);
	Запрос.УстановитьПараметр("ДатаДобавления", ДатаДобавления);
	
	Пакеты = Запрос.ВыполнитьПакет();
	
	// Получение текста описания
	ТекстОписания = Пакеты.Получить(0);
	Если НЕ ТекстОписания.Пустой() Тогда
		Выборка = ТекстОписания.Выбрать();
		Выборка.Следующий();
		Результат = Выборка.Описание.Получить();
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПроставитьЗависимыеПометкиВДереве(ТекущаяСтрока) 
	
	Если ТекущаяСтрока.Уровень = 0 Тогда         		
		Для Каждого ПодчиненнаяСтрока Из ТекущаяСтрока.ПолучитьЭлементы() Цикл
			ПодчиненнаяСтрока.Пометка = ТекущаяСтрока.Пометка;
		КонецЦикла;
	Иначе      
		Пометка = Ложь;         
		Родитель = ТекущаяСтрока.ПолучитьРодителя();
		Для Каждого ПодчиненнаяСтрока Из Родитель.ПолучитьЭлементы() Цикл
			Пометка = Пометка ИЛИ ПодчиненнаяСтрока.Пометка;
			Если Пометка Тогда 
				Прервать;
			КонецЕсли;
		КонецЦикла; 
		Родитель.Пометка = Пометка;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДайджестСервер()
	
	Описание = "";
	
	Для Каждого ЭлементТип Из ДеревоПлановыхОписаний.ПолучитьЭлементы() Цикл
		Если ЭлементТип.Пометка Тогда
			Описание = Описание + "<h1>" + ЭлементТип.ТипИзменения + "</h1>" + Символы.ПС;
			
			Для Каждого Элемент Из ЭлементТип.ПолучитьЭлементы() Цикл
				ОписаниеИзменений = ПолучитьОписаниеИзменений(Элемент.Значение.Задача, Элемент.Значение.ДатаДобавления);
				Описание = Описание + ОписаниеИзменений + Символы.ПС;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	РедакторОписания.ЗаполнитьТекстHTML(ЭтотОбъект, Описание);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьРедактирования()
	
	// Если запись опубликована - запрещаем её изменять
	ТолькоПросмотр = Запись.Опубликовано;
	
КонецПроцедуры

#КонецОбласти
