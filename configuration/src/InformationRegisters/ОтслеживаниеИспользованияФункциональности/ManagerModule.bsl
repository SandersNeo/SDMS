///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет новую запись
//
// Параметры:
//  Функциональность	 - Строка						 - строковое представление функциональности. Например,
//  						"Просмотр различий в описании объекта".
//  ИмяФормы			 - Строка						 - Полное имя формы
//  Пользователь		 - СправочникСсылка.Пользователи	 - Пользователь
//
Процедура Добавить(Знач Функциональность, Знач ИмяФормы = "", Знач Пользователь = Неопределено) Экспорт
	
	Если Пользователь = Неопределено Тогда
		Пользователь = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли; 
	
	НоваяЗапись = СоздатьМенеджерЗаписи();
	
	Если ЗначениеЗаполнено(ИмяФормы) Тогда
		ОбъектМетаданных = ОбщегоНазначения.ПолучитьИдентификаторОбъекта(ИмяФормы);
		
		Если НЕ ЗначениеЗаполнено(ОбъектМетаданных) Тогда
			Если Функциональность = ФункциональностьОткрытие() Тогда
				ИмяСобытия = "Отслеживание использования функциональности";
				ТекстОшибки = СтрШаблон("Не удалось определить форму. Полное имя: %1", ИмяФормы);
				ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , ТекстОшибки);
				
				Функциональность = СтрШаблон("%1.%2", ИмяФормы, Функциональность);
			Иначе
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НоваяЗапись.ИдентификаторСобытия = Новый УникальныйИдентификатор;
	НоваяЗапись.ОбъектМетаданных = ОбъектМетаданных;
	НоваяЗапись.Функциональность = Функциональность;
	НоваяЗапись.Пользователь     = Пользователь;
	НоваяЗапись.ДатаСоздания     = ТекущаяДатаСеанса();
	
	НоваяЗапись.Записать();
	
КонецПроцедуры

// Добавляет новую запись об открытии формы
//
// Параметры:
//  ИмяФормы - Строка - имя открываемой формы. Например,
//                     "Отчет.АнализЗадачПоДоскамTrello.Форма.НастройкиОтчета".
//
Процедура ОткрытиеФормы(Знач ИмяФормы) Экспорт
	
	Добавить(ФункциональностьОткрытие(), ИмяФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ФункциональностьОткрытие()
	
	Возврат "Открытие";
	
КонецФункции

#КонецОбласти

#КонецЕсли
