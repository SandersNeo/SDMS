///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Добавляет запись в регистр сведений ОбъектыВерхнегоУровняСтруктурыПодчиненности
//
// Параметры:
// 	Объект 			- ДокументСсылка.ЗаявкаНаРазработку
//					  ДокументСсылка.Задача
//					  ДокументСсылка.ВнутреннееЗадание
//					  СправочникСсылка.Проекты			- объект для которого 
//														ищется высший родитель.
// 	ОбъектОснование - ДокументСсылка.ЗаявкаНаРазработку
//					  ДокументСсылка.Задача
//					  ДокументСсылка.ВнутреннееЗадание
//					  СправочникСсылка.Проекты 	- объект-основание(родитель) 
//													объекта для которого ищется 
//													высший родитель.
//
Процедура Добавить(Знач Объект, Знач ОбъектОснование = Неопределено) Экспорт
				
	НаборЗаписей = РегистрыСведений.ОбъектыВерхнегоУровняСтруктурыПодчиненности.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Объект);	
	НаборЗаписей.Прочитать();
	
	Если ОбъектОснование <> Неопределено Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбъектыВерхнегоУровняСтруктурыПодчиненности.ВысшийРодитель КАК ВысшийРодитель
		|ИЗ
		|	РегистрСведений.ОбъектыВерхнегоУровняСтруктурыПодчиненности КАК ОбъектыВерхнегоУровняСтруктурыПодчиненности
		|ГДЕ
		|	ОбъектыВерхнегоУровняСтруктурыПодчиненности.Объект = &Объект";
	
		Запрос.УстановитьПараметр("Объект", ОбъектОснование);
	
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			Если НаборЗаписей.Количество() <> 0 Тогда
				НаборЗаписей[0].ВысшийРодитель = Выборка.ВысшийРодитель;
			Иначе
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Объект = Объект;
				НоваяЗапись.ВысшийРодитель = Выборка.ВысшийРодитель;
			КонецЕсли;					
		КонецЕсли;
	Иначе
		Если НаборЗаписей.Количество() <> 0 Тогда
			НаборЗаписей[0].ВысшийРодитель = Объект;
		Иначе
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Объект = Объект;
			НоваяЗапись.ВысшийРодитель = Объект;
		КонецЕсли;
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Пересчитывает для всех подчиненных объектов высшего родителя
//
// Параметры:
// 	Объект 			- ДокументСсылка.ЗаявкаНаРазработку
//					  ДокументСсылка.Задача
//					  ДокументСсылка.ВнутреннееЗадание
//					  СправочникСсылка.Проекты			- объект для которого 
//														ищется высший родитель.
// 	НовыйРодитель - ДокументСсылка.ЗаявкаНаРазработку
//					  ДокументСсылка.Задача
//					  ДокументСсылка.ВнутреннееЗадание
//					  СправочникСсылка.Проекты 	- новый родитель.
//
Процедура ПересчитатьВысшегоРодителя(Знач Объект, Знач НовыйРодитель) Экспорт   
	
	МассивПодчиненныхОбъектов = ОбщегоНазначения.ПолучитьСсылкиНаВсеПодчиненныеОбъекты(Объект);   
	
	Для Каждого Ссылка Из МассивПодчиненныхОбъектов Цикл        		
		Добавить(Ссылка, НовыйРодитель);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает родителя по объету
//
// Параметры:
// 	Объект 			- ДокументСсылка.ЗаявкаНаРазработку
//					  ДокументСсылка.Задача
//					  ДокументСсылка.ВнутреннееЗадание
//					  СправочникСсылка.Проекты			- объект для которого 
//														ищется высший родитель.
// 
// Возвращаемое значение:
//  Ссылка - высший родитель
//
Функция ПолучитьПоОбъекту(Знач Объект) Экспорт
				
	НаборЗаписей = РегистрыСведений.ОбъектыВерхнегоУровняСтруктурыПодчиненности.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Объект);	
	НаборЗаписей.Прочитать(); 
	
	Родитель = Неопределено;
	
	Если НаборЗаписей.Количество() > 0 Тогда       	                             
		Родитель = НаборЗаписей[0].ВысшийРодитель;
	КонецЕсли;
	
	Возврат Родитель;
	
КонецФункции

#КонецОбласти

#КонецЕсли
