///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

// Хранит дополнительные данные на время жизни формы, чтобы избежать многократных
// повторных обращений к серверу.
&НаКлиенте
Перем КэшВспомогательныхДанных;

// Хранит представления объектов метаданных, ограничивающих
// поиск объекта основания
&НаКлиенте
Перем ПараметрыПоиска;

// Хранит список пунктов для автоподбора
&НаКлиенте
Перем СписокПунктов;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Владелец = Параметры.Проект;
	
	РедактированиеСобытия = Параметры.РедактированиеСобытия;
	
	ДанныеСобытия = Параметры.ДанныеСобытия;
	
	ОснованиеНовогоДокумента = Владелец; 
	НазваниеСобытия = ДанныеСобытия.НазваниеСобытия;
	ДатаНачала_План = ДанныеСобытия.ДатаНачала_План;
	ДатаОкончания_План = ДанныеСобытия.ДатаОкончания_План;
	ДатаНачала_Факт = ДанныеСобытия.ДатаНачала_Факт;
	ДатаОкончания_Факт = ДанныеСобытия.ДатаОкончания_Факт;
	ПланируемыйСрок = ДанныеСобытия.ПланируемыйСрок;
	ПроцентВыполнения = ДанныеСобытия.ПроцентВыполнения;
	Комментарий = ДанныеСобытия.Комментарий;
	ВладелецСобытия = ДанныеСобытия.ВладелецСобытия;	
	КлючСобытия = ДанныеСобытия.КлючСобытия;
	ЭтоГруппа = ДанныеСобытия.ЭтоГруппа;
	КонтрольнаяТочка = ДанныеСобытия.КонтрольнаяТочка;
	Предшественник = ДанныеСобытия.Предшественник;
	ЕстьПодчиненные = ДанныеСобытия.ЕстьПодчиненные;
	Статус = ДанныеСобытия.Статус;
	ПредставлениеСтатуса = Строка(Статус);

	Если НЕ ДанныеСобытия.ЭтоЗаказчик И ЗначениеЗаполнено(ДанныеСобытия.Ответственный) Тогда
		Ответственный = ДанныеСобытия.Ответственный;
	КонецЕсли;
	
	ЗаполнитьПрикрепленныеДокументы(ДанныеСобытия.СписокДокументов);
	
	Для Каждого Файл Из ДанныеСобытия.Списокфайлов Цикл
		НовыйФайл = ПрикрепленныеФайлы.Добавить();
		НовыйФайл.Ссылка = Файл.Значение;
		НовыйФайл.Представление = Файл.Представление;
	КонецЦикла;	
		
	Проект = Параметры.Проект;
	
	ЗаголовокОкна = "Изменение элемента плана проекта";
	
	Если Параметры.Свойство("ОткрытьДокументы") И Параметры.ОткрытьДокументы Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДокументы;		
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Элементы.ПроцентВыполнения.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.Статус.Доступность = ПрикрепленныеДокументы.Количество() <> 1;
		
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	Заголовок = ЗаголовокОкна;
			
	ДанныеДокументаЗаполнены = НЕ ЭтоГруппа И ПрикрепленныеДокументы.Количество() > 0;

КонецПроцедуры

&НаКлиенте
Процедура НастроитьДоступностьЭлементов()
	
	Элементы.ЭтоГруппа.Доступность = НЕ КонтрольнаяТочка И НЕ ЕстьПодчиненные;	
	Элементы.КонтрольнаяТочка.Видимость = НЕ ЭтоГруппа;
	Элементы.ПланируемыйСрок.Доступность = НЕ КонтрольнаяТочка И НЕ ЭтоГруппа;
	Элементы.ДатаНачала_План.Доступность = НЕ ЭтоГруппа;
	Элементы.ДатаОкончания_План.Доступность = НЕ КонтрольнаяТочка И НЕ ЭтоГруппа;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Чтобы клиент не обращался к серверу за небольшими порциями данных, получим их сразу за один вызов
	КэшВспомогательныхДанных = ПолучитьВспомогательныеДанные();
	НастроитьДоступностьЭлементов();
		
	ПараметрыПоиска = Новый Массив;
	ПараметрыПоиска.Добавить("Документ.ВнутреннееЗадание");
	ПараметрыПоиска.Добавить("Документ.ЗаявкаНаРазработку");
	
	СписокПунктов = Новый Массив;	
	СписокПунктов.Добавить("Предпроектный анализ, концепция");
	СписокПунктов.Добавить("Схема бизнес-процесса");
	СписокПунктов.Добавить("Структура продуктов и работ");
	СписокПунктов.Добавить("Пилотный запуск");
	СписокПунктов.Добавить("Подготовка документации");
	СписокПунктов.Добавить("Передача заказчику");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СписокСобытий = СтрРазделить(ИмяСобытия, ";");
	ЭтоМассив = СписокСобытий.Количество() > 1; 
	Счетчик = 0;
	
	Для Каждого Событие Из СписокСобытий Цикл	
		Если Событие = "ПрикрепитьКПлануПроекта" Тогда 
			ПараметрСобытия = ?(ЭтоМассив, Параметр[Счетчик], Параметр);
			ЗаполнитьЗначенияСвойств(ПрикрепленныеДокументы.Добавить(), ПараметрСобытия);
		КонецЕсли;
				
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДатаНачала_ПланПриИзменении(Элемент)
	
	ДатаОкончания_План = ПланПроектаКлиент.РассчитатьДатаОкончания_План(ДатаНачала_План, ПланируемыйСрок);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончания_ПланПриИзменении(Элемент)
	
	ПланируемыйСрок = ПланПроектаКлиент.РассчитатьПланируемыйСрок(ДатаНачала_План, ДатаОкончания_План);
		
КонецПроцедуры  

&НаКлиенте
Процедура КонтрольнаяТочкаПриИзменении(Элемент)
		
	НастроитьДоступностьЭлементов();
	
	Если КонтрольнаяТочка Тогда
		ПланируемыйСрок = 0;
		ДатаОкончания_План = ДатаНачала_План;
		ДатаОкончания_Факт = ДатаНачала_Факт;
	КонецЕсли;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ПланируемыйСрокПриИзменении(Элемент)
	
	ДатаОкончания_План = ПланПроектаКлиент.РассчитатьДатаОкончания_План(ДатаНачала_План, ПланируемыйСрок);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументПредставлениеПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ДокументПредставление) Тогда
		Документ = Неопределено;
		// Создавать Проект можно только на основании проекта. ВЗ и Заявку на основании Проекта и ВЗ.
		Элементы.ФормаСоздатьПроект.Видимость = (ТипЗнч(ОснованиеНовогоДокумента) = Тип("СправочникСсылка.Проекты"));
		Элементы.ФормаСоздатьДокументНаОсновании.Видимость = НЕ ЭтоГруппа;
	КонецЕсли;
		
	Если НЕ ЕстьПодчиненные Тогда
		Элементы.ЭтоГруппа.Доступность = (ТипЗнч(Документ) <> Тип("ДокументСсылка.ЗаявкаНаРазработку"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработатьВыборДокумента(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепленныеДокументыДокументПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Список = Новый СписокЗначений;
	Список.Добавить(Тип("СправочникСсылка.Проекты"), , , БиблиотекаКартинок.Проект);	
	Список.Добавить(Тип("ДокументСсылка.ВнутреннееЗадание"), , , БиблиотекаКартинок.СтатусРешен);
	Список.Добавить(Тип("ДокументСсылка.ЗаявкаНаРазработку"), , , БиблиотекаКартинок.ЗаявкаНаРазработку);
		
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборТипа", ЭтотОбъект);	
	ПоказатьВыборИзМеню(ОписаниеОповещения, Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепленныеДокументыДокументПредставлениеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ТекущиеДанные = Элементы.ПрикрепленныеДокументы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИнтерфейсПриложенияКлиент.ОткрытьОбъектОснованиеВНовомОкне(ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепленныеДокументыПриИзменении(Элемент)
	
	Элементы.Статус.Доступность = ПрикрепленныеДокументы.Количество() <> 1;
	
	Если ПрикрепленныеДокументы.Количество() = 1 Тогда
		Статус = ПрикрепленныеДокументы[0].Статус;
		ПредставлениеСтатуса = ПрикрепленныеДокументы[0].СтатусПредставление;
	Иначе
		ПредставлениеСтатуса = Строка(Статус);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепленныеФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина; // добавляем вручную, чтобы не было лишних строк
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект);	
	ПараметрыОткрытия = Новый Структура("Владелец, ПланВыполненияПроекта", Владелец);
	ИдентификаторФормы = "Справочник.Файлы.Форма.ПрисоединенныеФайлы";
	
	ОткрытьФорму(ИдентификаторФормы, ПараметрыОткрытия, ЭтотОбъект, , , ,
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепленныеФайлыПредставлениеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбранныйФайл = Элементы.ПрикрепленныеФайлы.ТекущиеДанные.Ссылка;
	
	Если НЕ ЗначениеЗаполнено(ВыбранныйФайл) Тогда
		Возврат;
	КонецЕсли;	
	
	Файлы = Новый Массив;
	Файлы.Добавить(ВыбранныйФайл);
	РаботаСФайламиКлиент.НачатьСкачиваниеФайлов(Проект, Файлы, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура НазваниеСобытияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если СтрДлина(Текст) < 2 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Элемент.СписокВыбора.Очистить();
	Для Каждого Пункт Из СписокПунктов Цикл
		Если СтрНачинаетсяС(НРег(Пункт), НРег(Текст)) Тогда
			Элемент.СписокВыбора.Добавить(Пункт);			
		КонецЕсли;	
	КонецЦикла
	
КонецПроцедуры

&НаКлиенте
Процедура НазваниеСобытияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.ЗагрузитьЗначения(СписокПунктов);	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораЭлемента", ЭтотОбъект);	
	ПоказатьВыборИзМеню(ОписаниеОповещения, СписокЗначений);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораЭлемента(ВыбранныйЭлемент, СписокПараметров) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НазваниеСобытия = ВыбранныйЭлемент.Значение;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	
	ПредставлениеСтатуса = Строка(Статус);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтоГруппаПриИзменении(Элемент)
		
	НастроитьДоступностьЭлементов();
	
	// TO DO: Возможно при изменении на новый вариант плана проекта данные действия станут не нужными
	Если ПрикрепленныеДокументы.Количество() > 0 Тогда
		// Создавать Проект можно только на основании проекта. ВЗ и Заявку на основании Проекта и ВЗ.
		Элементы.ФормаСоздатьПроект.Видимость = (ТипЗнч(ОснованиеНовогоДокумента) = Тип("СправочникСсылка.Проекты"));
		Элементы.ФормаСоздатьДокументНаОсновании.Видимость = НЕ ЭтоГруппа;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Записать(Команда)   
	
	Если ДатаОкончания_План < ДатаНачала_План Тогда
		ПоказатьПредупреждение(, "Плановая дата окончания не может быть меньше плановой даты начала"); 
		Возврат; 	
	КонецЕсли;
		
	СписокДокументов = Новый СписокЗначений;
	Для Каждого Документ Из ПрикрепленныеДокументы Цикл
		Если ЗначениеЗаполнено(Документ.Ссылка) Тогда
			СписокДокументов.Добавить(Документ.Ссылка, Документ.ДокументПредставление);
		КонецЕсли;
	КонецЦикла;
	
	СписокФайлов = Новый СписокЗначений;
	Для Каждого Файл Из ПрикрепленныеФайлы Цикл
		СписокФайлов.Добавить(Файл.Ссылка, Файл.Представление);
	КонецЦикла;
	
	ЭтоЗаказчик = Ложь;
	Если ПрикрепленныеДокументы.Количество() = 1 И НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПрикрепленныеДокументы[0].Ответственный;
		ЭтоЗаказчик = Истина;
	КонецЕсли;
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("НазваниеСобытия", НазваниеСобытия);
	ПараметрыЗакрытия.Вставить("Комментарий", Комментарий);
	ПараметрыЗакрытия.Вставить("СписокДокументов", СписокДокументов);
	ПараметрыЗакрытия.Вставить("СписокФайлов", СписокФайлов);
	ПараметрыЗакрытия.Вставить("НоваяСтрока", НоваяСтрока);
	ПараметрыЗакрытия.Вставить("НоваяПодСтрока", НоваяПодСтрока);
	ПараметрыЗакрытия.Вставить("Автор", ТекущийПользователь);
	ПараметрыЗакрытия.Вставить("ДатаРедактирования", ТекущаяДата());
	ПараметрыЗакрытия.Вставить("КлючСобытия", КлючСобытия);
	ПараметрыЗакрытия.Вставить("ЭтоГруппа", ЭтоГруппа);
	ПараметрыЗакрытия.Вставить("ПроцентВыполнения", ПроцентВыполнения);
	ПараметрыЗакрытия.Вставить("Предшественник", Предшественник);
	ПараметрыЗакрытия.Вставить("ДатаНачала_План", ДатаНачала_План);
	ПараметрыЗакрытия.Вставить("ДатаНачала_Факт", ДатаНачала_Факт);
	ПараметрыЗакрытия.Вставить("ДатаОкончания_Факт", ДатаОкончания_Факт);
	ПараметрыЗакрытия.Вставить("Статус", Статус);
	ПараметрыЗакрытия.Вставить("ПредставлениеСтатуса", ПредставлениеСтатуса);
	ПараметрыЗакрытия.Вставить("Ответственный", Ответственный);
	ПараметрыЗакрытия.Вставить("ЭтоЗаказчик", ЭтоЗаказчик);
	ПараметрыЗакрытия.Вставить("ПланируемыйСрок", ПланируемыйСрок);
	ПараметрыЗакрытия.Вставить("ДатаОкончания_План", ДатаОкончания_План);
	ПараметрыЗакрытия.Вставить("КонтрольнаяТочка", КонтрольнаяТочка);
		
	Если НоваяСтрока Тогда
		ПараметрыЗакрытия.Вставить("ВладелецСобытия", Неопределено);
		ПараметрыЗакрытия.Вставить("КлючСобытия", Новый УникальныйИдентификатор);
	ИначеЕсли НоваяПодстрока Тогда
		ПараметрыЗакрытия.Вставить("ВладелецСобытия", ВладелецСобытия);
		ПараметрыЗакрытия.Вставить("КлючСобытия", Новый УникальныйИдентификатор);
	Иначе
		ПараметрыЗакрытия.Вставить("ВладелецСобытия", ВладелецСобытия);
	КонецЕсли;
	
	ПараметрыЗакрытия.Вставить("ЕстьПодчиненные", ЕстьПодчиненные);
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВнутреннееЗадание(Команда)
	
	СоздатьДокументНаОсновании(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаявкуНаРазработку(Команда)
	
	СоздатьДокументНаОсновании(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПроект(Команда)
	
	СоздатьДокументНаОсновании(Команда.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПрикрепленныеДокументы(СписокДокументов)
	
	// Получаем данные документов на ходу, т.к. для нескольких документов статус и ответственный не хранятся
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаявкаНаРазработку.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(МинимальныеСтатусыЗаявок.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.Новый)) КАК Статус,
	|	ЗаявкаНаРазработку.Автор КАК Ответственный,
	|	ЗаявкаНаРазработку.Черновик КАК Черновик
	|ИЗ
	|	Документ.ЗаявкаНаРазработку КАК ЗаявкаНаРазработку
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальныеСтатусыЗаявок КАК МинимальныеСтатусыЗаявок
	|		ПО ЗаявкаНаРазработку.Ссылка = МинимальныеСтатусыЗаявок.Заявка
	|ГДЕ
	|	ЗаявкаНаРазработку.Ссылка В(&СписокДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВнутреннееЗадание.Ссылка,
	|	ВнутреннееЗадание.Статус,
	|	ВнутреннееЗадание.Заказчик,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ВнутреннееЗадание КАК ВнутреннееЗадание
	|ГДЕ
	|	ВнутреннееЗадание.Ссылка В(&СписокДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Проекты.Ссылка,
	|	Проекты.Статус,
	|	Проекты.Заказчик,
	|	ЛОЖЬ
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.Ссылка В(&СписокДокументов)";
	
	Запрос.УстановитьПараметр("СписокДокументов", СписокДокументов);
	
	ТаблицаДокументы = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Документ Из СписокДокументов Цикл
		НовыйДокумент = ПрикрепленныеДокументы.Добавить();

		ДокументСДанными = ТаблицаДокументы.Найти(Документ.Значение, "Ссылка");
		Если ДокументСДанными = Неопределено Тогда
			НовыйДокумент.Ссылка = Документ.Значение;
			СтатусПредставление = "(Черновик)";
		Иначе
			Если СписокДокументов.Количество() = 1 Тогда
				Статус = ДокументСДанными.Статус;
				ПредставлениеСтатуса = Строка(ДокументСДанными.Статус);
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(НовыйДокумент, ДокументСДанными);
			
			СтатусПредставление = Строка(ДокументСДанными.Статус);
			Если ДокументСДанными.Черновик Тогда
				СтатусПредставление = СтрШаблон("%1 (Черновик)", СтатусПредставление);
			КонецЕсли;
		КонецЕсли;
		
		НовыйДокумент.ДокументПредставление = Документ.Представление;
		НовыйДокумент.СтатусПредставление = СтатусПредставление;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСписокПредложений(Знач СтрокаПоиска, Знач ПараметрыПоиска, ДанныеВыбора)
	
	Запрос = Новый Запрос;
	Запрос.Текст = СгенерироватьТекстЗапроса(ПараметрыПоиска, СтрокаПоиска);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ДанныеВыбора = Новый СписокЗначений;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ДанныеВыбора.Добавить(), Выборка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеДокумента(Знач Результат)  

	Возврат РегистрыСведений.ПланыВыполненияПроектов.ПолучитьДанныеДокумента(Результат);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьВыборДокумента(Результат, СозданиеДокумента = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	Документ = ?(ТипЗнч(Результат) = Тип("Структура"), Результат.Ссылка, Результат);
	
	СтрокиСДокументом = ПрикрепленныеДокументы.НайтиСтроки(Новый Структура("Ссылка", Документ));
	
	Если СтрокиСДокументом.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ уже прикреплен!");
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда		
		ДокументПредставление = Результат.Наименование;
		ПредставлениеСобытия = Результат.Наименование; 
		
	Иначе
		ДанныеДокумента = ПолучитьДанныеДокумента(Результат);
		ДокументПредставление = СтрШаблон("%1. %2", ДанныеДокумента.Номер, ДанныеДокумента.Наименование);
		ПредставлениеСобытия = ДанныеДокумента.Наименование; 
		
		Если ЗначениеЗаполнено(ДанныеДокумента.ДатаНачала_План)
			И (НЕ ЗначениеЗаполнено(ДатаНачала_План)
			ИЛИ ДатаНачала_План > ДанныеДокумента.ДатаНачала_План) Тогда
			
			ДатаНачала_План = ДанныеДокумента.ДатаНачала_План;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеДокумента.ДатаОкончания_План)
			И (НЕ ЗначениеЗаполнено(ДатаОкончания_План) 
			ИЛИ ДатаОкончания_План < ДанныеДокумента.ДатаОкончания_План) Тогда
			
			ДатаОкончания_План = ДанныеДокумента.ДатаОкончания_План;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеДокумента.ДатаНачала_Факт)
			И (НЕ ЗначениеЗаполнено(ДатаНачала_Факт) 
			ИЛИ ДатаНачала_Факт > ДанныеДокумента.ДатаНачала_Факт) Тогда
			
			ДатаНачала_Факт = ДанныеДокумента.ДатаНачала_Факт;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеДокумента.ДатаОкончания_Факт)
			И (НЕ ЗначениеЗаполнено(ДатаОкончания_Факт) 
			ИЛИ ДатаОкончания_Факт < ДанныеДокумента.ДатаОкончания_Факт) Тогда
			
			ДатаОкончания_Факт = ДанныеДокумента.ДатаОкончания_Факт;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаНачала_План) И ЗначениеЗаполнено(ДатаОкончания_План) Тогда
			КоличествоВыходных = ОбщегоНазначенияВызовСервера.КоличествоВыходныхДней(ДатаНачала_План, ДатаОкончания_План); 
			ПланируемыйСрок = (ДатаОкончания_План - ДатаНачала_План) / 86400 - КоличествоВыходных;
		КонецЕсли;	
		
		ДанныеДокументаЗаполнены = Истина;
	КонецЕсли;
	
	Элементы.ПрикрепленныеДокументы.ТекущиеДанные.ДокументПредставление = ДокументПредставление;
	Элементы.ПрикрепленныеДокументы.ТекущиеДанные.Ссылка = Документ;
	Элементы.ПрикрепленныеДокументы.ТекущиеДанные.Ответственный = ДанныеДокумента.Заказчик;
	Элементы.ПрикрепленныеДокументы.ТекущиеДанные.Статус = ДанныеДокумента.Статус;
	Элементы.ПрикрепленныеДокументы.ТекущиеДанные.СтатусПредставление = ДанныеДокумента.ПредставлениеСтатуса;
	
	Если НЕ ЕстьПодчиненные Тогда
		Элементы.ЭтоГруппа.Доступность = (ТипЗнч(Документ) <> Тип("ДокументСсылка.ЗаявкаНаРазработку"));
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НазваниеСобытия) Тогда
		НазваниеСобытия = ПредставлениеСобытия;
	КонецЕсли;
		
	Если НЕ ЗначениеЗаполнено(Документ) Тогда
		// Создавать Проект можно только на основании проекта. ВЗ и Заявку на основании Проекта и ВЗ.
		Элементы.ФормаСоздатьПроект.Видимость = (ТипЗнч(ОснованиеНовогоДокумента) = Тип("СправочникСсылка.Проекты"));
		Элементы.ФормаСоздатьДокументНаОсновании.Видимость = НЕ ЭтоГруппа;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ОбработатьВыборТипа(ВыбранноеЗначение, Параметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено  Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборДокумента", ЭтотОбъект);	
	
	ВыбранныйТип = ВыбранноеЗначение.Значение;
		
	Если ВыбранныйТип = Тип("ДокументСсылка.ЗаявкаНаРазработку") Тогда
		ИдентификаторФормы = "Документ.ЗаявкаНаРазработку.ФормаВыбора";
	ИначеЕсли ВыбранныйТип = Тип("ДокументСсылка.ВнутреннееЗадание") Тогда
		ИдентификаторФормы = "Документ.ВнутреннееЗадание.ФормаВыбора";
	ИначеЕсли ВыбранныйТип = Тип("СправочникСсылка.Проекты") Тогда
		ИдентификаторФормы = "Справочник.Проекты.ФормаВыбора";
	КонецЕсли;
	
	ОткрытьФорму(ИдентификаторФормы, , ЭтотОбъект, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
				
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайла(Результат, СозданиеДокумента = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
		
	СтрокиСФайлом = ПрикрепленныеФайлы.НайтиСтроки(Новый Структура("Ссылка", Результат.Ссылка));
	
	Если СтрокиСФайлом.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Файл уже прикреплен!");
		Возврат;
	КонецЕсли;
	
	НовыйФайл = ПрикрепленныеФайлы.Добавить();
	НовыйФайл.Представление = Результат.Наименование;
	НовыйФайл.Ссылка = Результат.Ссылка;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВспомогательныеДанные()
	
	ВспомогательныеДанные = Новый Структура;
	ВспомогательныеДанные.Вставить("ЗначениеСтатусаРешен", Справочники.СтатусыОбъектов.Решен);
	ВспомогательныеДанные.Вставить("ТекущаяДатаСеанса", ТекущаяДатаСеанса());
	ВспомогательныеДанные.Вставить("СтатусНовый", Справочники.СтатусыОбъектов.Новый);
	
	Возврат ВспомогательныеДанные;

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеНовогоОбъекта(Знач Ссылка)
	
	Результат = Новый Структура("ДатаНачала_Факт, ДокументПредставление, ДатаОкончания_План"); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	#Область ТекстЗапроса
	"ВЫБРАТЬ
	|	ЗаявкаНаРазработку.Дата КАК ДатаНачала_Факт,
	|	ЗаявкаНаРазработку.Наименование КАК ДокументПредставление,
	|	НЕОПРЕДЕЛЕНО КАК ДатаОкончания_План
	|ИЗ
	|	Документ.ЗаявкаНаРазработку КАК ЗаявкаНаРазработку
	|ГДЕ
	|	ЗаявкаНаРазработку.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВнутреннееЗадание.ДатаНачалаРазработки,
	|	ВнутреннееЗадание.Наименование,
	|	ВнутреннееЗадание.ИсполнитьДо
	|ИЗ
	|	Документ.ВнутреннееЗадание КАК ВнутреннееЗадание
	|ГДЕ
	|	ВнутреннееЗадание.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Проекты.ДатаНачалаРазработки,
	|	Проекты.Наименование,
	|	Проекты.ДатаПлановоеОкончание
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.Ссылка = &Ссылка";
	#КонецОбласти 
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	КонецЕсли;		
	
	Возврат Результат;
	
КонецФункции	

&НаСервереБезКонтекста
Функция ПолучитьДанныеОбъектаОснования(ОбъектОснование)
	
	Реквизиты = "ВидПроцесса";
	
	Если ТипЗнч(ОбъектОснование) = Тип("ДокументСсылка.ВнутреннееЗадание") Тогда
		Реквизиты = Реквизиты + ", Направление";
	КонецЕсли;
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОбъектОснование, Реквизиты);
	
КонецФункции

&НаКлиенте
Процедура ПроверитьДанныеЗаполнения(Знач ДанныеОбъекта)

	Для Каждого Элемент Из ДанныеОбъекта Цикл
		Ключ = Элемент.Ключ;		
		Если Ключ = "ДокументПредставление" Тогда
			Продолжить;
		КонецЕсли;	
		
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект[Элемент.Ключ]) Тогда
			ЭтотОбъект[Элемент.Ключ] = Элемент.Значение;
		КонецЕсли; 		
	КонецЦикла	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьСтатусДокумента(Знач Ключ, Знач Проект, Статус, ПредставлениеСтатуса)
	
	Результат = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПланыВыполненияПроектов.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.ПланыВыполненияПроектов КАК ПланыВыполненияПроектов
	|ГДЕ
	|	ПланыВыполненияПроектов.Объект = &Объект
	|	И ПланыВыполненияПроектов.КлючСобытия = &Ключ
	|	И ПланыВыполненияПроектов.Статус <> &Статус";
	
	Запрос.УстановитьПараметр("Ключ", Ключ);
	Запрос.УстановитьПараметр("Объект", Проект);
	Запрос.УстановитьПараметр("Статус", Статус);
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	Если Выборка.Следующий() Тогда
		Статус = Выборка.Статус; 
		ПредставлениеСтатуса = Строка(Выборка.Статус);
		                                    
		ТекстСообщения = "По данному документу был изменен статус. Нажмите ""Записать"" еще раз";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		Результат = Ложь; 
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Получает основание для создаваемого документа
// в соответствии с текущими ограничениями
//
// Параметры:
//  ИмяКоманды	 - Строка - Имя команды, которую выбирает пользователь 
//  Документ	 - СправочникСсылка.Проекты, ДокументСсылка.ВнутреннееЗадание
// 					ДокументСсылка.ЗаявкаНаРазработку - объект из поля "Документ"
// 
// Возвращаемое значение:
//  СправочникСсылка.Проекты, ДокументСсылка.ВнутреннееЗадание, ДокументСсылка.ЗаявкаНаРазработку 
//
&НаКлиенте
Функция ПолучитьОснованиеНовогоДокумента(Знач ИмяКоманды, Знач Документ)
	
	ОбъектОснование = ПредопределенноеЗначение("Справочник.Проекты.ПустаяСсылка");
	
	ТипДокумента = ТипЗнч(Документ);
	ТипПроект = Тип("СправочникСсылка.Проекты");
	ТипВЗ = Тип("ДокументСсылка.ВнутреннееЗадание");
	
	Если ИмяКоманды = "СоздатьВнутреннееЗадание" ИЛИ ИмяКоманды = "СоздатьЗаявкуНаРазработку" Тогда
		Если ТипДокумента = ТипПроект ИЛИ ТипДокумента = ТипВЗ Тогда
			ОбъектОснование = Документ;
		КонецЕсли;	
	ИначеЕсли ИмяКоманды = "СоздатьПроект" Тогда 
		Если ТипДокумента = ТипПроект Тогда
			ОбъектОснование = Документ;
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат ОбъектОснование;
			
КонецФункции

&НаСервереБезКонтекста
Функция СгенерироватьТекстЗапроса(Знач Представления, Знач СтрокаПоиска)
	
	Шаблон =
	"ВЫБРАТЬ ПЕРВЫЕ 5
	|	%1.Ссылка КАК Значение,
	|	%1.Представление КАК Представление
	|ИЗ
	|	%2.%1 КАК %1
	|ГДЕ
	|	%1.Номер ПОДОБНО ""%%{СтрокаПоиска}""";
	
	СтрокиЗапроса = Новый Массив;
	Для Каждого Представление Из Представления Цикл
		
		Данные = СтрРазделить(Представление, ".");
		Тип = Данные[0];
		Объект = Данные[1];
		
		СтрокаЗапроса = СтрШаблон(Шаблон, Объект, Тип);
		СтрокиЗапроса.Добавить(СтрокаЗапроса);
		
	КонецЦикла;
	
	ТекстЗапроса = СтрСоединить(СтрокиЗапроса, Символы.ПС +  "ОБЪЕДИНИТЬ" + Символы.ПС);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "{СтрокаПоиска}", СтрокаПоиска); 
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаКлиенте
Процедура СоздатьДокументНаОсновании(Знач ИмяКоманды)
	
	Если ИмяКоманды = "СоздатьВнутреннееЗадание" Тогда
		ИдентификаторФормы = "Документ.ВнутреннееЗадание.Форма.ФормаДокумента";		
	ИначеЕсли ИмяКоманды = "СоздатьЗаявкуНаРазработку" Тогда
		ИдентификаторФормы = "Документ.ЗаявкаНаРазработку.Форма.ФормаДокумента";
	Иначе
		ИдентификаторФормы = "Справочник.Проекты.Форма.ФормаЭлемента";
	КонецЕсли;
	
	ДанныеЗаполнения = ПолучитьДанныеОбъектаОснования(Владелец);
	ДанныеЗаполнения.Вставить("Наименование",    НазваниеСобытия);
	ДанныеЗаполнения.Вставить("ИсполнитьДо",     ДатаОкончания_План);
	ДанныеЗаполнения.Вставить("ДатаЗакрытия",    ДатаОкончания_Факт);
	
	ОснованиеДокумента = ПолучитьОснованиеНовогоДокумента(ИмяКоманды, ОснованиеНовогоДокумента);  
	ДанныеЗаполнения.Вставить("ОбъектОснование", ОснованиеДокумента);
	
	//TODO: Небольшой костыль для корректной работы системы доп реквизитов,
	// в дальнейшем проверить необходимость этого костыля
	ДанныеЗаполнения.Вставить("Ссылка", Владелец);
	
	ПараметрыОткрытия = Новый Структура("ЗначенияЗаполнения, ПрикрепитьКПлануПроекта, КлючСобытия", 
		ДанныеЗаполнения, Истина, КлючСобытия);
	
	ОткрытьФорму(ИдентификаторФормы, ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти                                                                          
