///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура - Добавить этапы
//
// Параметры:
//  Процесс				 - СправочникСсылка.Процессы - процесс, в котором добавили этапы
//  МассивДобавленных	 - массив - Содержит ссылку на добавленные этапы канбана
//
Процедура ДобавитьЭтапы(Знач МассивДобавленных, ТипКанбана, Процесс = Неопределено, Знач Филиал = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиФилиалов.Филиал КАК Филиал
	|ПОМЕСТИТЬ ОтобранныеФилиалы
	|ИЗ
	|	РегистрСведений.НастройкиФилиалов КАК НастройкиФилиалов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК Филиалы
	|		ПО НастройкиФилиалов.Филиал = Филиалы.Ссылка
	|			И (НЕ Филиалы.ПометкаУдаления)
	|ГДЕ
	|	НастройкиФилиалов.Настройка = &Настройка
	|	И (ВЫРАЗИТЬ(НастройкиФилиалов.Значение КАК Справочник.Процессы)) = &Процесс
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Филиалы.Ссылка
	|ИЗ
	|	Справочник.Филиалы КАК Филиалы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Процессы КАК Процессы
	|		ПО (Процессы.Ссылка = &Процесс)
	|			И (Процессы.Филиал = ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка))
	|			И (Процессы.ТипОбъекта = ЗНАЧЕНИЕ(Справочник.ТипыОбъектовВладельцев.Документ_Задача))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиФилиалов КАК НастройкиФилиалов
	|		ПО (НастройкиФилиалов.Филиал = Филиалы.Ссылка)
	|			И (НастройкиФилиалов.Настройка = &Настройка)
	|ГДЕ
	|	НастройкиФилиалов.Филиал ЕСТЬ NULL
	|	И Филиалы.ТипФилиала <> ЗНАЧЕНИЕ(Перечисление.ТипыФилиалов.НеIT)
	|	И НЕ Филиалы.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Филиалы.Ссылка
	|ИЗ
	|	Справочник.Филиалы КАК Филиалы
	|ГДЕ
	|	Филиалы.Ссылка = &Филиал
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтобранныеФилиалы.Филиал КАК Филиал,
	|	ЕСТЬNULL(МАКСИМУМ(ПорядокЭтаповКанбана.Порядок), 0) КАК МаксимальныйПорядок
	|ИЗ
	|	ОтобранныеФилиалы КАК ОтобранныеФилиалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокЭтаповКанбана КАК ПорядокЭтаповКанбана
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыКанбана КАК ЭтапыКанбана
	|			ПО ПорядокЭтаповКанбана.Этап = ЭтапыКанбана.Ссылка
	|				И (ЭтапыКанбана.ТипКанбана = &ТипКанбана)
	|		ПО ОтобранныеФилиалы.Филиал = ПорядокЭтаповКанбана.Филиал
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтобранныеФилиалы.Филиал";
	
	Если ТипКанбана = Перечисления.ТипыКанбана.ЗадачаНовый Тогда
		Настройка = ПланыВидовХарактеристик.ВидыНастроекФилиалов.ПроцессУстановкиСтатусов;
	ИначеЕсли ТипКанбана = Перечисления.ТипыКанбана.ВнутреннееЗаданиеНовый Тогда
		Настройка = ПланыВидовХарактеристик.ВидыНастроекФилиалов.ПроцессУстановкиСтатусовВнутреннееЗадание;
	Иначе 
		Настройка = Неопределено;
	КонецЕсли;
		
	Запрос.УстановитьПараметр("Процесс", Процесс);
	Запрос.УстановитьПараметр("Филиал", Филиал);
	Запрос.УстановитьПараметр("ТипКанбана", ТипКанбана);
	Запрос.УстановитьПараметр("Настройка", Настройка);
		
	Автор = ПараметрыСеанса.ТекущийПользователь;
	ДатаИзменения = ТекущаяДатаСеанса();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Филиал.Установить(Выборка.Филиал);
		Порядок = Выборка.МаксимальныйПорядок;
		
		Для Каждого Этап Из МассивДобавленных Цикл
			НаборЗаписей.Отбор.Этап.Установить(Этап);
			Порядок = Порядок + 1;
			
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Филиал = Выборка.Филиал;
			НоваяЗапись.Этап = Этап;
			НоваяЗапись.Порядок = Порядок;
			НоваяЗапись.Пользователь = Автор;
			НоваяЗапись.ДатаИзменения = ДатаИзменения;
			
			НаборЗаписей.Записать();
			НаборЗаписей.Очистить();
		КонецЦикла;
	КонецЦикла;
		
КонецПроцедуры

// Процедура - Изменить записи
//
// Параметры:
//  Филиал		 - СправочникСсылка.Филиалы
//  ТипФилиала	 - ПеречислениеСсылка.ТипыФилиалов
//  ПометкаУдаления	 - Булево - признак, что филиал помечен на удаление
//
Процедура ИзменитьЗаписи(Знач Филиал, Знач ТипФилиала, Знач ПометкаУдаления) Экспорт
	
	Если НЕ ПометкаУдаления Тогда
		Если ТипФилиала <> Перечисления.ТипыФилиалов.НеIT Тогда
			ПроцессЗадач = Справочники.Процессы.ИспользуемыйПроцессФилиала(Филиал, Справочники.ТипыОбъектовВладельцев.Документ_Задача);
			ПроцессФилиалаПриИзменении(Филиал, Справочники.ТипыОбъектовВладельцев.Документ_Задача, ПроцессЗадач);
		Иначе
			ПроцессФилиалаПриИзменении(Филиал, Справочники.ТипыОбъектовВладельцев.Документ_Задача);
		КонецЕсли;
	Иначе
		ПроцессФилиалаПриИзменении(Филиал);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЭтапы(Филиал) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПорядокЭтаповКанбана.Этап КАК Этап
	|ИЗ
	|	РегистрСведений.ПорядокЭтаповКанбана КАК ПорядокЭтаповКанбана
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыКанбана КАК ЭтапыКанбана
	|		ПО ПорядокЭтаповКанбана.Этап = ЭтапыКанбана.Ссылка
	|			И (ЭтапыКанбана.ТипКанбана = ЗНАЧЕНИЕ(Перечисление.ТипыКанбана.ВнутреннееЗаданиеНовый))
	|			И (ПорядокЭтаповКанбана.Филиал = &Филиал)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиФилиалов.Значение КАК Процесс
	|ИЗ
	|	Справочник.Филиалы КАК Филиалы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиФилиалов КАК НастройкиФилиалов
	|		ПО (НастройкиФилиалов.Филиал = Филиалы.Ссылка)
	|			И (НастройкиФилиалов.Настройка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыНастроекФилиалов.ПроцессУстановкиСтатусовВнутреннееЗадание))
	|			И (НастройкиФилиалов.Значение <> ЗНАЧЕНИЕ(Справочник.Процессы.ПустаяСсылка))
	|			И (Филиалы.Ссылка = &Филиал)";
	
	Запрос.УстановитьПараметр("Филиал", Филиал);
	
	Пакеты = Запрос.ВыполнитьПакет();
	Если Пакеты[0].Пустой() Тогда
		Если Пакеты[1].Пустой() тогда
			Процесс = Справочники.Процессы.ПустаяСсылка();
		Иначе
			Выборка = Пакеты[1].Выбрать();
			Выборка.Следующий();
			Процесс = Выборка.Процесс;
		КонецЕсли;
		
		ПроцессФилиалаПриИзменении(Филиал, Справочники.ТипыОбъектовВладельцев.Документ_ВнутреннееЗадание, Процесс);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Процесс филиала при изменении
//
// Параметры:
//  Филиал		 - СправочникСсылка.Филиалы
//	ТипОбъекта	 - СправочникСсылка.ТипыОбъектовВладельцев
//  НовыйПроцесс - СправочникСсылка.Процессы
//
Процедура ПроцессФилиалаПриИзменении(Знач Филиал, Знач ТипОбъекта = Неопределено, Знач НовыйПроцесс = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Процессы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Процесс
	|ИЗ
	|	Справочник.Процессы КАК Процессы
	|ГДЕ
	|	Процессы.Ссылка = &Процесс
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Процессы.Ссылка
	|ИЗ
	|	Справочник.Процессы КАК Процессы
	|ГДЕ
	|	&Процесс = ЗНАЧЕНИЕ(Справочник.Процессы.ПустаяСсылка)
	|	И Процессы.Филиал = ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка)
	|	И Процессы.ТипОбъекта = &ТипОбъекта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭтапыКанбана.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ЭтапыКанбана КАК ЭтапыКанбана
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Процесс КАК Процесс
	|		ПО ЭтапыКанбана.Владелец = Процесс.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыКанбана.ЭлементыЭтапа КАК ЭтапыКанбанаЭлементыЭтапа
	|		ПО (ЭтапыКанбанаЭлементыЭтапа.Ссылка = ЭтапыКанбана.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО (ЭтапыКанбанаЭлементыЭтапа.Элемент = СтатусыОбъектов.Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыКанбана.ПорядокОтображения,
	|	СтатусыОбъектов.Предопределенный
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокЭтаповКанбана.Филиал КАК Филиал,
	|	ПорядокЭтаповКанбана.Этап КАК Этап,
	|	ПорядокЭтаповКанбана.Порядок КАК Порядок,
	|	ПорядокЭтаповКанбана.ДатаИзменения КАК ДатаИзменения,
	|	ПорядокЭтаповКанбана.Пользователь КАК Пользователь
	|ИЗ
	|	РегистрСведений.ПорядокЭтаповКанбана КАК ПорядокЭтаповКанбана
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыКанбана КАК ЭтапыКанбана
	|		ПО ПорядокЭтаповКанбана.Этап = ЭтапыКанбана.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Процессы КАК Процессы
	|		ПО (ЭтапыКанбана.Владелец = Процессы.Ссылка)
	|			И (Процессы.ТипОбъекта = &ТипОбъекта)
	|ГДЕ
	|	ПорядокЭтаповКанбана.Филиал = &Филиал
	|	И &ТипОбъекта <> НЕОПРЕДЕЛЕНО
	|	И Процессы.Ссылка ЕСТЬ NULL";
		
	Запрос.УстановитьПараметр("Процесс", НовыйПроцесс);
	Запрос.УстановитьПараметр("ТипОбъекта", ТипОбъекта);
	Запрос.УстановитьПараметр("Филиал", Филиал);
	
	Пакеты = Запрос.ВыполнитьПакет();
	КоличествоПакетов = Пакеты.ВГраница();
	
	Порядок = 1;
	Автор = ПараметрыСеанса.ТекущийПользователь;
	ДатаИзменения = ТекущаяДатаСеанса();
	
	Выборка = Пакеты[КоличествоПакетов - 1].Выбрать();
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Филиал.Установить(Филиал);
	
	Пока Выборка.Следующий() Цикл	
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Филиал = Филиал;
		НоваяЗапись.Этап = Выборка.Ссылка;
		НоваяЗапись.Порядок = Порядок;
		НоваяЗапись.ДатаИзменения = ДатаИзменения;
		НоваяЗапись.Пользователь = Автор;
		
		Порядок = Порядок + 1;
	КонецЦикла;
	
	ВыборкаБезИзменении = Пакеты[КоличествоПакетов].Выбрать();
	
	Пока ВыборкаБезИзменении.Следующий() Цикл	
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ВыборкаБезИзменении);
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Процедура - Удалить этапы
//
// Параметры:
//  Процесс			 - СправочникСсылка.Процессы - процесс из которого удалили этапы
//  МассивУдаленных	 - массив - содержит ссылки на удаленные этапы канбана
//
Процедура УдалитьЭтапы(Знач МассивУдаленных, ТипКанбана, Процесс = Неопределено, Знач Филиал = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Филиалы.Ссылка КАК Филиал
	|ПОМЕСТИТЬ ОтобранныеФилиалы
	|ИЗ
	|	Справочник.Филиалы КАК Филиалы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Процессы КАК Процессы
	|		ПО (Процессы.Филиал = ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка))
	|			И (Процессы.ТипОбъекта = ЗНАЧЕНИЕ(Справочник.ТипыОбъектовВладельцев.Документ_Задача))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиФилиалов КАК НастройкиФилиалов
	|		ПО (НастройкиФилиалов.Филиал = Филиалы.Ссылка)
	|			И (НастройкиФилиалов.Настройка = &Настройка)
	|ГДЕ
	|	НЕ Филиалы.ПометкаУдаления
	|	И Филиалы.ТипФилиала <> ЗНАЧЕНИЕ(Перечисление.ТипыФилиалов.НеIT)
	|	И ЕСТЬNULL(ВЫРАЗИТЬ(НастройкиФилиалов.Значение КАК Справочник.Процессы), Процессы.Ссылка) = &Процесс
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Филиалы.Ссылка
	|ИЗ
	|	Справочник.Филиалы КАК Филиалы
	|ГДЕ
	|	Филиалы.Ссылка = &Филиал
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПорядокЭтаповКанбана.Филиал КАК Филиал,
	|	СледующиеЭтапыКанбана.Порядок КАК Порядок,
	|	СледующиеЭтапыКанбана.Этап КАК СледующийЭтап
	|ИЗ
	|	ОтобранныеФилиалы КАК ОтобранныеФилиалы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокЭтаповКанбана КАК ПорядокЭтаповКанбана
	|		ПО ОтобранныеФилиалы.Филиал = ПорядокЭтаповКанбана.Филиал
	|			И (ПорядокЭтаповКанбана.Этап В (&УдаляемыеЭтапы))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокЭтаповКанбана КАК СледующиеЭтапыКанбана
	|		ПО ОтобранныеФилиалы.Филиал = СледующиеЭтапыКанбана.Филиал
	|			И (СледующиеЭтапыКанбана.Порядок > ПорядокЭтаповКанбана.Порядок)
	|			И (НЕ СледующиеЭтапыКанбана.Этап В (&УдаляемыеЭтапы))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыКанбана КАК ЭтапыКанбана
	|		ПО (СледующиеЭтапыКанбана.Этап = ЭтапыКанбана.Ссылка)
	|			И (ЭтапыКанбана.ТипКанбана = &ТипКанбана)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СледующиеЭтапыКанбана.Порядок
	|ИТОГИ ПО
	|	Филиал";
	
	Если ТипКанбана = Перечисления.ТипыКанбана.ЗадачаНовый Тогда
		Настройка = ПланыВидовХарактеристик.ВидыНастроекФилиалов.ПроцессУстановкиСтатусов;
	ИначеЕсли ТипКанбана = Перечисления.ТипыКанбана.ВнутреннееЗаданиеНовый Тогда
		Настройка = ПланыВидовХарактеристик.ВидыНастроекФилиалов.ПроцессУстановкиСтатусовВнутреннееЗадание;
	Иначе 
		Настройка = Неопределено;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Процесс", Процесс);
	Запрос.УстановитьПараметр("УдаляемыеЭтапы", МассивУдаленных);
	Запрос.УстановитьПараметр("ТипКанбана", ТипКанбана);
	Запрос.УстановитьПараметр("Филиал", Филиал);
	Запрос.УстановитьПараметр("Настройка", Настройка);

	ВыборкаФилиал = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НаборЗаписей = СоздатьНаборЗаписей();
	
	Пока ВыборкаФилиал.Следующий() Цикл
		НаборЗаписей.Отбор.Филиал.Установить(ВыборкаФилиал.Филиал);
			
		Выборка = ВыборкаФилиал.Выбрать();
		НовыйПорядок = 0;
		
		Пока Выборка.Следующий() Цикл
			Если НовыйПорядок = 0 Тогда
				НовыйПорядок = Выборка.Порядок - 1;
			КонецЕсли;
			
			НаборЗаписей.Отбор.Этап.Установить(Выборка.СледующийЭтап);
			НаборЗаписей.Прочитать();
			НаборЗаписей[0].Порядок = НовыйПорядок;
			
			НаборЗаписей.Записать();
			НаборЗаписей.Очистить();
			НовыйПорядок = НовыйПорядок + 1;
		КонецЦикла;
	КонецЦикла;
	
	НаборЗаписей.Отбор.Сбросить();
	
	Для Каждого Этап Из МассивУдаленных Цикл
		НаборЗаписей.Отбор.Этап.Установить(Этап);
		НаборЗаписей.Записать();
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти
