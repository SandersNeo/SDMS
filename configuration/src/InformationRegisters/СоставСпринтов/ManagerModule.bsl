///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Добавляет запись в регистр сведений затирая предыдущие записи
//
// Параметры:
//  Спринт	 - ДокументСсылка.Спринт	 - Спринт
//  СписокОбъектов	 - СписокЗначений	 - Список объектов
//
Процедура Добавить(Спринт, СписокОбъектов) Экспорт
	
	НаборЗаписей = РегистрыСведений.СоставСпринтов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Спринт.Установить(Спринт);
	
	Для Каждого ЭлементСписка Из СписокОбъектов Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Спринт = Спринт;
		НоваяЗапись.Объект = ЭлементСписка.Значение;
	КонецЦикла;

	НаборЗаписей.Записать();
	
КонецПроцедуры


// Добавляет запись в регистр сведений не затирая предыдущие записи
//
// Параметры:
//  Спринт	 - ДокументСсылка.Спринт	 - Спринт
//  СписокОбъектов	 - СписокЗначений	 - Список объектов
//
Процедура ДобавитьКСуществующим(Спринт, СписокОбъектов) Экспорт

	Для Каждого ЭлементСписка Из СписокОбъектов Цикл
		НаборЗаписей = РегистрыСведений.СоставСпринтов.СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.Спринт.Установить(Спринт);
		НаборЗаписей.Отбор.Объект.Установить(ЭлементСписка.Значение);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Спринт = Спринт;
		НоваяЗапись.Объект = ЭлементСписка.Значение;
		
		НаборЗаписей.Записать();
	КонецЦикла;
	
КонецПроцедуры


// Возвращает активный спринт, к которому принадлежит объект c учетом даты окончания
//
// Параметры:
//  Объект	 - ДокументСсылка.Задача, ДокументСсылка.ЗаявкаНаРазработку - Ссылка на объект 
//  ВозвращатьСписок	 - Булево - флаг возврата результата списком
// 
// Возвращаемое значение:
// НайденныйСпринт - ДокументСсылка.Спринт, СписокЗначений - Спринт, пустую ссылка на ДокументСпринт, 
// или список, если указан флаг 
//
Функция ПолучитьАктивныеСпринтыОбъекта(Объект, ВозвращатьСписок = Ложь) Экспорт
	
	Если ВозвращатьСписок Тогда
		Результат = Новый СписокЗначений;
	Иначе
		Результат = Документы.Спринт.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоставСпринтов.Спринт КАК Спринт
	|ИЗ
	|	РегистрСведений.СоставСпринтов КАК СоставСпринтов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Спринт КАК ДокументСпринт
	|		ПО СоставСпринтов.Спринт = ДокументСпринт.Ссылка
	|ГДЕ
	|	СоставСпринтов.Объект = &Объект
	|	И КОНЕЦПЕРИОДА(ДокументСпринт.ДатаОкончания, ДЕНЬ) >= &ТекущаяДата";
	
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

	Если НЕ РезультатЗапроса.Пустой() Тогда 
		Выборка = РезультатЗапроса.Выбрать();
		
		Если ВозвращатьСписок Тогда
			Пока Выборка.Следующий() Цикл
				Результат.Добавить(Выборка.Спринт);
			КонецЦикла;
		Иначе
			Выборка.Следующий();			
			Результат = Выборка.Спринт;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Функция - Получить текущий спринт объекта, отличается от ПолучитьАктивныйСпринтОбъекта
// текущий - последний спринт, активный - последний с учетом даты окончания спринта
//
// Параметры:
//  Объект - ДокументСсылка.Задача, ДокументСсылка.ЗаявкаНаРазработку - Ссылка на объект
//	ВозвращатьСписок - Булево - нужен список значений
// 
// Возвращаемое значение:
//  Результат - ДокументСсылка.Спринт - Возвращает ссылку на спринт или пустую ссылку 
//
Функция ПолучитьТекущийСпринтОбъекта(Объект, ВозвращатьСписок = Ложь) Экспорт
	
	Если ВозвращатьСписок Тогда
		Результат = Новый СписокЗначений;
	Иначе
		Результат = Документы.Спринт.ПустаяСсылка();
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СоставСпринтов.Спринт КАК Спринт
	|ИЗ
	|	РегистрСведений.СоставСпринтов КАК СоставСпринтов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Спринт КАК ДокументСпринт
	|		ПО СоставСпринтов.Спринт = ДокументСпринт.Ссылка
	|ГДЕ
	|	СоставСпринтов.Объект = &Объект
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументСпринт.ДатаОкончания УБЫВ";
	
	Запрос.УстановитьПараметр("Объект", Объект);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Если ВозвращатьСписок Тогда
			Результат.Добавить(Выборка.Спринт);
		Иначе			
			Результат = Выборка.Спринт;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Обновляет спринт документа
//
// Параметры:
//  Объект	 - ДокументСсылка.Задача, ДокументСсылка.ЗаявкаНаРазработку	 -  Документ 
//  Спринт	 - ДокументСсылка.Спринт	 -  Спринт 
//
Процедура ОбновитьСпринтОбъекта(Знач Объект, Знач Спринт) Экспорт
	
	ТекущийСпринтОбъекта = РегистрыСведений.СоставСпринтов.ПолучитьТекущийСпринтОбъекта(Объект);
	ТекущаяДатаСеанса = ТекущаяДатаСеанса();  
	ЗначениеЗаполненоСпринт = ЗначениеЗаполнено(Спринт);
	
	Если ТекущийСпринтОбъекта <> Спринт Тогда
		НаборЗаписей = РегистрыСведений.ИсторияУчастияОбъектовВСпринтах.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Объект);
		
		Если ЗначениеЗаполнено(ТекущийСпринтОбъекта) Тогда 
			
			ДобавитьЗаписьВИсториюУчастияОбъектовВСпринтах(НаборЗаписей, ТекущийСпринтОбъекта, Объект, 2, ТекущаяДатаСеанса);
			
			МенеджерЗаписи = СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Объект = Объект;
			МенеджерЗаписи.Спринт = ТекущийСпринтОбъекта;
			МенеджерЗаписи.Прочитать();
			
			Если ЗначениеЗаполненоСпринт Тогда
				МенеджерЗаписи.Спринт = Спринт;
				МенеджерЗаписи.Записать();
			Иначе	  		
				МенеджерЗаписи.Удалить();
			КонецЕсли;
			
		ИначеЕсли ЗначениеЗаполненоСпринт Тогда
			МенеджерЗаписи = СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Объект = Объект;
			МенеджерЗаписи.Спринт = Спринт;
			МенеджерЗаписи.Записать();
		КонецЕсли;
		
		Если ЗначениеЗаполненоСпринт Тогда
			ДобавитьЗаписьВИсториюУчастияОбъектовВСпринтах(НаборЗаписей, Спринт, Объект, 1, ТекущаяДатаСеанса);
		КонецЕсли;  
		
		ДокументОснование = ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(Спринт, "ДокументОснование");
		
		Если ЗначениеЗаполнено(ДокументОснование) Тогда 
			РегистрыСведений.ОчередьСобытийНаОбработку.ДобавитьЗаданиеОтправитьИзмененияПоСпринтам(Спринт, ТекущаяДатаСеанса);	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Обновляет спринты документа. В списке спринтов должны быть только актуальные спринты.
// Нужен для обработки спринтов планирования, в которых один объект может участвовать в нескольких спринтах сразу.
//
// Параметры:
//  Объект	 - ДокументСсылка.Задача, ДокументСсылка.ЗаявкаНаРазработку	 -  Документ 
//  Спринты	 - СписокЗначений	 -  Список обновляемых Спринтов
//
Процедура ОбновитьСпринтыОбъекта(Знач Объект, Знач Спринты) Экспорт
	
	ТекущаяДатаСеанса = ТекущаяДатаСеанса(); 	
	РезультатЗапроса = ПолучитьРазницуСпринтовОбъекта(Объект, Спринты); 
	Выборка = РезультатЗапроса.Выбрать();
	
	НаборЗаписей = РегистрыСведений.ИсторияУчастияОбъектовВСпринтах.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(Объект);
	
	Пока Выборка.Следующий() Цикл
		
		МенеджерЗаписи = СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Объект = Объект;
		МенеджерЗаписи.Спринт = Выборка.Спринт;
		
		Если Выборка.Добавить Тогда 
			ДобавитьЗаписьВИсториюУчастияОбъектовВСпринтах(НаборЗаписей, Выборка.Спринт, Объект, 1, ТекущаяДатаСеанса);			
			МенеджерЗаписи.Записать();
		Иначе    
			ДобавитьЗаписьВИсториюУчастияОбъектовВСпринтах(НаборЗаписей, Выборка.Спринт, Объект, 2, ТекущаяДатаСеанса);
			МенеджерЗаписи.Удалить();
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(Выборка.ДокументОснование) Тогда 
			РегистрыСведений.ОчередьСобытийНаОбработку.ДобавитьЗаданиеОтправитьИзмененияПоСпринтам(Выборка.Спринт, ТекущаяДатаСеанса);	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Получить объекты спринта
//
// Параметры:
//  Спринт	 - 	ДокументСсылка.Спринт - Спринт
// 
// Возвращаемое значение:
//  СписокЗначенией - Объекты спринта
//
Функция ПолучитьОбъектыСпринта(Знач Спринт) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоставСпринтов.Объект КАК Объект
	|ИЗ
	|	РегистрСведений.СоставСпринтов КАК СоставСпринтов
	|ГДЕ
	|	СоставСпринтов.Спринт = &Спринт";
	
	Запрос.УстановитьПараметр("Спринт", Спринт);	
	Список = Новый СписокЗначений;
	Список.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Объект"));
	
	Возврат Список; 
	
КонецФункции

// Получить разницу в составе между передаными спринтами, которые должны быть, и записанными в базе.
//
// Параметры:
//  Объект	 - ДокументСсылка.Задача, ДокументСсылка.ЗаявкаНаРазработку	 -  Документ 
//  Спринты	 - СписокЗначений	 -  Список сверяемых Спринтов 
// 
// Возвращаемое значение:
//  РезультатЗапроса - Результат запроса
//
Функция ПолучитьРазницуСпринтовОбъекта(Знач Объект, Знач Спринты) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Спринт.Ссылка КАК Ссылка,
	|	Спринт.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ НужныеСпринты
	|ИЗ
	|	Документ.Спринт КАК Спринт
	|ГДЕ
	|	Спринт.Ссылка В(&Спринты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Спринт.Ссылка КАК Ссылка,
	|	Спринт.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ТекущиеСпринты
	|ИЗ
	|	Документ.Спринт КАК Спринт
	|ГДЕ
	|	Спринт.Ссылка В(&АктивныеСпринты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(НужныеСпринты.Ссылка, ТекущиеСпринты.Ссылка) КАК Спринт,
	|	ЕСТЬNULL(НужныеСпринты.ДокументОснование, ТекущиеСпринты.ДокументОснование) КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА НужныеСпринты.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Добавить
	|ИЗ
	|	НужныеСпринты КАК НужныеСпринты
	|		ПОЛНОЕ СОЕДИНЕНИЕ ТекущиеСпринты КАК ТекущиеСпринты
	|		ПО НужныеСпринты.Ссылка = ТекущиеСпринты.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(НужныеСпринты.Ссылка, НЕОПРЕДЕЛЕНО) <> ЕСТЬNULL(ТекущиеСпринты.Ссылка, НЕОПРЕДЕЛЕНО)";
	
	ТекущаяДатаСеанса = ТекущаяДатаСеанса(); 	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса);
	Запрос.УстановитьПараметр("АктивныеСпринты", ПолучитьАктивныеСпринтыОбъекта(Объект, Истина));
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("Спринты", Спринты);	
	
	Возврат Запрос.Выполнить(); 
	
КонецФункции

#КонецОбласти   

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьЗаписьВИсториюУчастияОбъектовВСпринтах(Знач НаборЗаписей, Знач Спринт, 
		Знач Объект, Знач ВидДействия, Знач ТекущаяДатаСеанса)
	
	НаборЗаписей.Отбор.Спринт.Установить(Спринт);
	
	НоваяЗапись = НаборЗаписей.Добавить();	
	НоваяЗапись.Объект = Объект;
	НоваяЗапись.Спринт = Спринт;
	НоваяЗапись.ВидДействия = ВидДействия;
	НоваяЗапись.Автор = ПараметрыСеанса.ТекущийПользователь;
	НоваяЗапись.Период = ТекущаяДатаСеанса;
	
	НаборЗаписей.Записать(Ложь);
	НаборЗаписей.Очистить();
	
КонецПроцедуры   

#КонецОбласти
