///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер ИЛИ ВнешнееСоединение ИЛИ ТолстыйКлиентОбычноеПриложение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет данные в регистр
//
// Параметры:
//  Сотрудник - СправочникСсылка.Пользователи - Ссылка на сотрудника
//  Событие - ПеречислениеСсылка.СобытияПоЛичнымДелам - Тип события
//  Данные - СправочникСсылка.Должности, СправочникСсылка.Филиалы, Строка, Дата - Данные
//
Процедура Добавить(Знач Сотрудник, Знач Событие, Знач Данные = Неопределено) Экспорт
	
	ТекущаяДата = ТекущаяДатаСеанса();
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ТекущаяДата);
	НаборЗаписей.Отбор.Сотрудник.Установить(Сотрудник);	
	НаборЗаписей.Отбор.Событие.Установить(Событие);	
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = ТекущаяДата;
	НоваяЗапись.Сотрудник = Сотрудник;
	НоваяЗапись.Событие = Событие;	
	НоваяЗапись.Данные = Данные;	
	НоваяЗапись.ДатаДобавления = ТекущаяДата;	
		
	НаборЗаписей.Записать();	
	
КонецПроцедуры

// Возвращает текущую должность пользователя
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи	 - ссылка на пользователя
// 
// Возвращаемое значение:
//  СправочникСсылка.Должности - ссылка на должность
//
Функция ДолжностьПользователя(Знач Пользователь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ЛичныеДелаСрезПоследних.Данные КАК Справочник.Должности) КАК Должность
	|ИЗ
	|	РегистрСведений.ЛичныеДела.СрезПоследних(
	|			&ТекущаяДата,
	|			Сотрудник = &Пользователь
	|				И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПринятНаДолжность)) КАК ЛичныеДелаСрезПоследних";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Должность = Выборка.Должность;
	Иначе
		Должность = Справочники.Должности.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Должность;
	
КонецФункции

// Возвращает текущую команду пользователя
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи	 - ссылка на пользователя
// 
// Возвращаемое значение:
//  СправочникСсылка.Филиалы - ссылка не текущую команду пользователя
//
Функция КомандаПользователя(Знач Пользователь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ЛичныеДелаСрезПоследних.Данные КАК Справочник.Филиалы) КАК Команда
	|ИЗ
	|	РегистрСведений.ЛичныеДела.СрезПоследних(
	|			&ТекущаяДата,
	|			Сотрудник = &Пользователь
	|				И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПереведенВКоманду)) КАК ЛичныеДелаСрезПоследних";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Команда = Выборка.Команда;
	Иначе
		Команда = Справочники.Филиалы.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Команда;
	
КонецФункции

// Выполняет перевод сотрудника в команду филиала
//
// Параметры:
//  Сотрудник			 - СправочникСсылка.Пользователи - ссылка на пользователя
//  Команда				 - СправочникСсылка.Филиалы		 - ссылка на команду
//  ЭтоКастомнаяКоманда	 - Булево						 - нужно когда из филиала не ясно какой тип перевода.
//  						К примеру при уходе из команды, филиал пустой.
//
Процедура ПереводВКоманду(Знач Сотрудник, Знач Команда, Знач ЭтоКастомнаяКоманда = Ложь) Экспорт
	
	ТекущаяДата = ТекущаяДатаСеанса();
	
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период = НачалоДня(ТекущаяДата);
	МенеджерЗаписи.Сотрудник = Сотрудник; 	
	МенеджерЗаписи.Данные = Команда;
	МенеджерЗаписи.ДатаДобавления = ТекущаяДата;
	
	Если Команда.Родитель = Справочники.Филиалы.КастомныеКоманды ИЛИ ЭтоКастомнаяКоманда Тогда                                                  
		МенеджерЗаписи.Событие = Перечисления.СобытияПоЛичнымДелам.ПереведенВКастомнуюКоманду;
	Иначе
		МенеджерЗаписи.Событие = Перечисления.СобытияПоЛичнымДелам.ПереведенВКоманду;
	КонецЕсли;
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

// Возвращает последний филиал пользователя
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - ссылка на пользователя
// 
// Возвращаемое значение:
//  СправочникСсылка.Филиалы - ссылка на последний филиал пользователя
//
Функция ПоследнийФилиалПользователя(Знач Пользователь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ЛичныеДелаСрезПоследних.Данные КАК Справочник.Филиалы) КАК Филиал
	|ИЗ
	|	РегистрСведений.ЛичныеДела.СрезПоследних(
	|			&ТекущаяДата,
	|			Сотрудник = &Пользователь
	|				И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПереведенВДругоеПодразделение)
	|				И (ВЫРАЗИТЬ(Данные КАК Справочник.Филиалы)) <> ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка)) КАК ЛичныеДелаСрезПоследних";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Филиал = Выборка.Филиал;
	Иначе
		Филиал = Справочники.Филиалы.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Филиал;
	
КонецФункции

// Возвращает текущий филиал пользователя
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи	 - ссылка на пользователя
// 
// Возвращаемое значение:
//  СправочникСсылка.Филиалы - ссылка на текущий филиал пользователя
//
Функция ФилиалПользователя(Знач Пользователь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ЛичныеДелаСрезПоследних.Данные КАК Справочник.Филиалы) КАК Филиал
	|ИЗ
	|	РегистрСведений.ЛичныеДела.СрезПоследних(
	|			&ТекущаяДата,
	|			Сотрудник = &Пользователь
	|				И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПереведенВДругоеПодразделение)) КАК ЛичныеДелаСрезПоследних";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Филиал = Выборка.Филиал;
	Иначе
		Филиал = Справочники.Филиалы.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Филиал;
	
КонецФункции

#КонецОбласти

#КонецЕсли
