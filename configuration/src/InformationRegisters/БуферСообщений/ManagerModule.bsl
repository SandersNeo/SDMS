///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет сообщение в очередь для дальнейшей отправки.
//
// Параметры:
//  СпособОтправки		 - 										 - Перечисления.СпособыОтправкиСообщений.
//  Получатель			 - Строка								 - почта получателя.
//  ТекстСообщения		 - Строка								 - HTML текст сообщения.
//  ТемаСообщения		 - Строка								 - тема письма.
//  ТипыСообщения		 - ПеречислениеСсылка.ТипыСообщенийМессенджера	 - Тип сообщения
//
Процедура Добавить(Знач СпособОтправки, Знач Получатель = "", Знач ТекстСообщения = "",
	Знач ТемаСообщения = "", ТипыСообщения = Неопределено) Экспорт
		
	Если СпособОтправки = Перечисления.СпособыОтправкиСообщений.Мессенджер Тогда
		Если НЕ ЗначениеЗаполнено(Константы.ОсновнойМессенджер.Получить()) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
			
	ДатаДобавления		 	= ТекущаяДатаСеанса();
	ИдентификаторСообщения  = Новый УникальныйИдентификатор;
	
	НаборЗаписей = РегистрыСведений.БуферСообщений.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДатаДобавления.Установить(ДатаДобавления);
	НаборЗаписей.Отбор.СпособОтправки.Установить(СпособОтправки);
	НаборЗаписей.Отбор.ИдентификаторСообщения.Установить(ИдентификаторСообщения);  
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ДатаДобавления = ДатаДобавления;
	НоваяЗапись.СпособОтправки = СпособОтправки;
	НоваяЗапись.ИдентификаторСообщения = ИдентификаторСообщения;
	НоваяЗапись.Получатель = Получатель;
	НоваяЗапись.ТекстСообщения = ТекстСообщения; 
	НоваяЗапись.ТемаСообщения = ТемаСообщения;
	НоваяЗапись.ТипСообщения = ТипыСообщения;
	НаборЗаписей.Записать();
	
КонецПроцедуры

//	Изменяет запись в регистре
// 
//	Параметры:
//
//	Ключ					-  РегистрСведенийКлючЗаписи - прямая ссылка на конкретную запись в регистре.
//  КоличествоПопыток		- Число - Количество попыток отправить письмо.(Необязательный) 
//  Отправлено              - Булево - (истина - письмо отправлено, Ложь - письмо ожидает отправки).(Необязательный)
//
Процедура Изменить(Знач Ключ, Знач КоличествоПопыток, Знач Отправлено) Экспорт
	
	Запись = РегистрыСведений.БуферСообщений.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись,Ключ);
	Запись.Прочитать();
	Запись.КоличествоПопыток = КоличествоПопыток;	
	Запись.Отправлено = Отправлено;	
	Запись.ДатаОтправки = ТекущаяДатаСеанса();
	Запись.Записать();	
	
КонецПроцедуры

// Отправка уведомления в мессенджер
//
Процедура ОтправитьУведомленияМессенджер() Экспорт
	
	ИзмененияЗаписейВБуфереСообщений = Новый ТаблицаЗначений;
	ИзмененияЗаписейВБуфереСообщений.Колонки.Добавить("ДатаДобавления",         Новый ОписаниеТипов("Дата"));
	ИзмененияЗаписейВБуфереСообщений.Колонки.Добавить("СпособОтправки",         Новый ОписаниеТипов ("ПеречислениеСсылка.СпособыОтправкиСообщений"));
	ИзмененияЗаписейВБуфереСообщений.Колонки.Добавить("ИдентификаторСообщения", Новый ОписаниеТипов("УникальныйИдентификатор"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Мессенджеры.Ссылка КАК Ссылка,
	|	Мессенджеры.ИспользуетсяИдентификатор КАК ИспользуетсяИдентификатор
	|ПОМЕСТИТЬ ДанныеМессенджер
	|ИЗ
	|	Справочник.Мессенджеры КАК Мессенджеры
	|ГДЕ
	|	Мессенджеры.Ссылка = &ОсновнойМессенджер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БуферСообщений.ДатаДобавления КАК ДатаДобавления,
	|	БуферСообщений.СпособОтправки КАК СпособОтправки,
	|	БуферСообщений.ИдентификаторСообщения КАК ИдентификаторСообщения,
	|	БуферСообщений.Получатель КАК Получатель,
	|	ВЫБОР
	|		КОГДА ДанныеМессенджер.ИспользуетсяИдентификатор
	|			ТОГДА ЕСТЬNULL(АдресаПолучателей.Идентификатор, """")
	|		ИНАЧЕ ЕСТЬNULL(АдресаПолучателей.Адрес, """")
	|	КОНЕЦ КАК АдресПолучателя,
	|	БуферСообщений.ТекстСообщения КАК ТекстСообщения,
	|	БуферСообщений.ТемаСообщения КАК ТемаСообщения
	|ИЗ
	|	РегистрСведений.БуферСообщений КАК БуферСообщений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеМессенджер КАК ДанныеМессенджер
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АдресаПолучателей КАК АдресаПолучателей
	|		ПО БуферСообщений.Получатель = АдресаПолучателей.Получатель
	|			И (АдресаПолучателей.Мессенджер = ДанныеМессенджер.Ссылка)
	|ГДЕ
	|	БуферСообщений.СпособОтправки = ЗНАЧЕНИЕ(Перечисление.СпособыОтправкиСообщений.Мессенджер)
	|	И БуферСообщений.Отправлено = ЛОЖЬ
	|	И БуферСообщений.КоличествоПопыток < 10
	|ИТОГИ
	|	МАКСИМУМ(АдресПолучателя)
	|ПО
	|	Получатель,
	|	ТемаСообщения";    
	
	ОсновнойМессенджер = Константы.ОсновнойМессенджер.Получить();	
	Запрос.УстановитьПараметр("ОсновнойМессенджер", ОсновнойМессенджер);	
	РезультатЗапроса = Запрос.Выполнить();
	МассивПустых = Новый Массив;
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТаблицаОповещения = Новый ТаблицаЗначений;
		ТаблицаОповещения.Колонки.Добавить("Получатель", ОбщегоНазначенияКлиентСервер.ОписаниеТипаСтрока(100));
		ТаблицаОповещения.Колонки.Добавить("ТекстСообщения", ОбщегоНазначенияКлиентСервер.ОписаниеТипаСтрока(0));
		
		ВыборкаПолучателей = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПолучателей.Следующий() Цикл   
			
			Если ПустаяСтрока(ВыборкаПолучателей.АдресПолучателя) Тогда           
				МассивПустых.Добавить(ВыборкаПолучателей.Получатель);
				Продолжить;
			КонецЕсли;
			
			ВыборкаТем = ВыборкаПолучателей.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаТем.Следующий() Цикл
				Выборка = ВыборкаТем.Выбрать();
				
				Если ВыборкаТем.ТемаСообщения = "ОповеститьФилиалТестирования" Тогда
					ШаблонЗаголовка = ":information_source: *В ПУЛ НА ТЕСТИРОВАНИЕ %1*";
					ЧастьЗаголовка = ?(Выборка.Количество() > 1, "ДОБАВЛЕНЫ НОВЫЕ ЗАДАЧИ", "ДОБАВЛЕНА НОВАЯ ЗАДАЧА");
					
					ЧастиСообщения = Новый Массив;
					ЧастиСообщения.Добавить(СтрШаблон(ШаблонЗаголовка, ЧастьЗаголовка));
					
					Пока Выборка.Следующий() Цикл
						ЧастиСообщения.Добавить(Выборка.ТекстСообщения);
						
						Строка = ИзмененияЗаписейВБуфереСообщений.Добавить();
						Строка.ДатаДобавления			= Выборка.ДатаДобавления;
						Строка.СпособОтправки			= Выборка.СпособОтправки;
						Строка.ИдентификаторСообщения	= Выборка.ИдентификаторСообщения;
					КонецЦикла;
					
					НовоеОповещение = ТаблицаОповещения.Добавить();
					НовоеОповещение.Получатель = ВыборкаПолучателей.АдресПолучателя;
					НовоеОповещение.ТекстСообщения = СтрСоединить(ЧастиСообщения, Символы.ПС);
				Иначе
					Пока Выборка.Следующий() Цикл
						ЧастиСообщения = Новый Массив;
						
						Если ЗначениеЗаполнено(ВыборкаТем.ТемаСообщения) Тогда
							ЧастиСообщения.Добавить(СтрШаблон(":bangbang: %1", ВыборкаТем.ТемаСообщения));
						КонецЕсли;
						
						ЧастиСообщения.Добавить(Выборка.ТекстСообщения);
						
						Строка = ИзмененияЗаписейВБуфереСообщений.Добавить();
						Строка.ДатаДобавления			= Выборка.ДатаДобавления;
						Строка.СпособОтправки			= Выборка.СпособОтправки;
						Строка.ИдентификаторСообщения	= Выборка.ИдентификаторСообщения;
						
						НовоеОповещение = ТаблицаОповещения.Добавить();
						НовоеОповещение.Получатель = ВыборкаПолучателей.АдресПолучателя;
						НовоеОповещение.ТекстСообщения = СтрСоединить(ЧастиСообщения, Символы.ПС);
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		ОтправитьСообщенияПользователям(ТаблицаОповещения, ОсновнойМессенджер);
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		Для Каждого СтрокаТаблицы Из ИзмененияЗаписейВБуфереСообщений Цикл
			ИзмеренияЗаписи = Новый Структура("ДатаДобавления, СпособОтправки, ИдентификаторСообщения");
			ЗаполнитьЗначенияСвойств(ИзмеренияЗаписи, СтрокаТаблицы);
			
			КлючЗаписи = РегистрыСведений.БуферСообщений.СоздатьКлючЗаписи(ИзмеренияЗаписи);
			Изменить(КлючЗаписи, 1, Истина);  	
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки; 
	
	Если МассивПустых.Количество() > 0 Тогда  
		Текст = СтрШаблон("Для мессенджера %1 пустые адреса у : %2", ОсновнойМессенджер, 
			Символы.ПС + СтрСоединить(МассивПустых, Символы.ПС));
		ЗаписьЖурналаРегистрации("ОтправитьУведомленияМессенджер", УровеньЖурналаРегистрации.Ошибка,, Текст); 
	КонецЕсли;
	
КонецПроцедуры

// Отправка электронныхе писем
//
Процедура ОтправитьЭлектронныеПисьма() Экспорт
	
	ИмяСобытия = "Регламентные и фоновые задания.Рассылка сообщений из буфера";
	
	ИзмененияЗаписейВБуфереСообщений = Новый ТаблицаЗначений;
	ИзмененияЗаписейВБуфереСообщений.Колонки.Добавить("ДатаДобавления",         Новый ОписаниеТипов("Дата"));
	ИзмененияЗаписейВБуфереСообщений.Колонки.Добавить("СпособОтправки",         Новый ОписаниеТипов ("ПеречислениеСсылка.СпособыОтправкиСообщений"));
	ИзмененияЗаписейВБуфереСообщений.Колонки.Добавить("ИдентификаторСообщения", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ИзмененияЗаписейВБуфереСообщений.Колонки.Добавить("КоличествоПопыток",      Новый ОписаниеТипов("Число"));
	ИзмененияЗаписейВБуфереСообщений.Колонки.Добавить("Отправлено",             Новый ОписаниеТипов("Булево"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БуферСообщений.ДатаДобавления КАК ДатаДобавления,
	|	БуферСообщений.СпособОтправки КАК СпособОтправки,
	|	БуферСообщений.ИдентификаторСообщения КАК ИдентификаторСообщения,
	|	БуферСообщений.Получатель КАК Получатель,
	|	БуферСообщений.ТекстСообщения КАК ТекстСообщения,
	|	БуферСообщений.ТемаСообщения КАК ТемаСообщения,
	|	БуферСообщений.КоличествоПопыток КАК КоличествоПопыток
	|ИЗ
	|	РегистрСведений.БуферСообщений КАК БуферСообщений
	|ГДЕ
	|	БуферСообщений.СпособОтправки = ЗНАЧЕНИЕ(Перечисление.СпособыОтправкиСообщений.ЭлектроннаяПочта)
	|	И БуферСообщений.Отправлено = ЛОЖЬ
	|	И БуферСообщений.КоличествоПопыток < 10";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаСообщения = РезультатЗапроса.Выбрать();
		
	// Получим профиль почты
	ДанныеПочты = Справочники.УчетныеЗаписиЭлектроннойПочты.СвойстваСлужебногоЯщикаДляОтправкиПисем();
	
	Если НЕ ДанныеПочты.ПрофильЗаполнен Тогда
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , ,
		"В справочнике ""Учетные записи электронной почты"" не найдена учетная запись для отправки электронной почты.");
		Возврат;
	КонецЕсли;
	
	РегистрОчередиПисем = РегистрыСведений.ОчередьОтправкиЭлектронныхПисем;
	
	ДиректорияФайлов = РегистрОчередиПисем.ВыделитьДиректориюДляФайловРассылки();
	
	Попытка
		ИмяФайлаКартинкиЗаголовкаПисьма = ДиректорияФайлов + РаботаСФайламиКлиентСервер.СоздатьУникальноеИмяФайла(".gif");
		БиблиотекаКартинок.КартинкаЗаголовкаЭлектронногоПисьма.Записать(ИмяФайлаКартинкиЗаголовкаПисьма);
	Исключение
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , 
			СтрШаблон("Не удалось сохранить картинку заголовка письма по причине: %1.", ОписаниеОшибки()));
		ИмяФайлаКартинкиЗаголовкаПисьма = "";
	КонецПопытки;
	
	Попытка
		ИмяФайлаКартинкаИнформацииПисьма = ДиректорияФайлов + РаботаСФайламиКлиентСервер.СоздатьУникальноеИмяФайла(".png");
		БиблиотекаКартинок.КартинкаИнформацииЭлектронногоПисьма.Записать(ИмяФайлаКартинкаИнформацииПисьма);
	Исключение
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , 
			СтрШаблон("Не удалось сохранить картинку информации письма по причине: %1.", ОписаниеОшибки()));
		ИмяФайлаКартинкаИнформацииПисьма = "";
	КонецПопытки;
	
	ПодстрокаЗаменыДляВебКлиента = WebОкружениеВызовСервера.АдресПубликацииИнформационнойБазы();
	
	ФайлыКартинок = Новый Соответствие;
	
	Пока ВыборкаСообщения.Следующий() Цикл
		ИнтернетПочта 			 = Новый ИнтернетПочта;
		Сообщение 				 = Новый ИнтернетПочтовоеСообщение;
		Сообщение.ИмяОтправителя = ДанныеПочты.Отправитель.Имя;
		Сообщение.Отправитель    = ДанныеПочты.Отправитель.Адрес;
		Сообщение.Тема           = ВыборкаСообщения.ТемаСообщения;
		
		ТекстСообщения = ВыборкаСообщения.ТекстСообщения;
		Если НЕ ПустаяСтрока(ИмяФайлаКартинкиЗаголовкаПисьма) Тогда
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "[IconImage]", ИмяФайлаКартинкиЗаголовкаПисьма);
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ИмяФайлаКартинкаИнформацииПисьма) Тогда
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "[ArticleImage]", ИмяФайлаКартинкаИнформацииПисьма);
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "<!-- sdms_link_prefix -->", ПодстрокаЗаменыДляВебКлиента);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "<!-- sdms_link -->", ПодстрокаЗаменыДляВебКлиента);
		
		РегистрОчередиПисем.ОбработатьШаблоныДляКартинокПисьма(ДиректорияФайлов, ИмяСобытия, ТекстСообщения, ФайлыКартинок);
		
		Сообщение.Тексты.Добавить(ТекстСообщения, ТипТекстаПочтовогоСообщения.HTML);
		
		Строка = ИзмененияЗаписейВБуфереСообщений.Добавить();
		Строка.ДатаДобавления 		  = ВыборкаСообщения.ДатаДобавления;
		Строка.СпособОтправки		  = ВыборкаСообщения.СпособОтправки;
		Строка.ИдентификаторСообщения = ВыборкаСообщения.ИдентификаторСообщения;
		Строка.КоличествоПопыток 	  = ВыборкаСообщения.КоличествоПопыток + 1;
		
		Попытка
			Сообщение.ОбработатьТексты();
		Исключение
			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , 
				СтрШаблон("Не удалось обработать текст письма по причине: %1.", ОписаниеОшибки()));
			Строка.Отправлено = Ложь;
			Продолжить;
		КонецПопытки;
		Сообщение.Получатели.Добавить(ВыборкаСообщения.Получатель);
		
		Попытка
			ИнтернетПочта.Подключиться(ДанныеПочты.ПочтовыйПрофиль);
			ИнтернетПочта.Послать(Сообщение);
			ИнтернетПочта.Отключиться();
			Строка.Отправлено = Истина;
		Исключение
			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , 
				СтрШаблон("Не удалось отправить письмо пользователю по  причине: %1.", ОписаниеОшибки()));
			Строка.Отправлено = Ложь;
		КонецПопытки;
		
		Сообщение.Вложения.Очистить();
		
	КонецЦикла;
	
	РегистрОчередиПисем.ОчиститьВыделеннуюДиректориюФайловПисьма(ДиректорияФайлов, ИмяСобытия);
	
	НачатьТранзакцию();
	Попытка
		Для Каждого СтрокаТаблицы Из ИзмененияЗаписейВБуфереСообщений Цикл
			ИзмеренияЗаписи = Новый Структура;
			ИзмеренияЗаписи.Вставить("ДатаДобавления", СтрокаТаблицы.ДатаДобавления);
			ИзмеренияЗаписи.Вставить("СпособОтправки",СтрокаТаблицы.СпособОтправки);
			ИзмеренияЗаписи.Вставить("ИдентификаторСообщения", СтрокаТаблицы.ИдентификаторСообщения);
			
			КлючЗаписи = РегистрыСведений.БуферСообщений.СоздатьКлючЗаписи(ИзмеренияЗаписи);
			Изменить(КлючЗаписи, СтрокаТаблицы.КоличествоПопыток, СтрокаТаблицы.Отправлено);  	
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОтправитьСообщенияПользователям(ТаблицаОповещения, Мессенджер)
	
	Обработка = Справочники.Мессенджеры.ПолучитьОбработкуМессенджера(Мессенджер);
	
	Если Обработка <> Неопределено Тогда
		Обработка.ОтправитьСообщенияПользователям(ТаблицаОповещения);
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалениеСтарыхСообщений() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БуферСообщений.ДатаДобавления КАК ДатаДобавления,
	|	БуферСообщений.СпособОтправки КАК СпособОтправки,
	|	БуферСообщений.ИдентификаторСообщения КАК ИдентификаторСообщения
	|ИЗ
	|	РегистрСведений.БуферСообщений КАК БуферСообщений
	|ГДЕ
	|	БуферСообщений.ДатаДобавления <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, -3)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.БуферСообщений.СоздатьМенеджерЗаписи();
		Запись.ДатаДобавления = Выборка.ДатаДобавления;
		Запись.СпособОтправки = Выборка.СпособОтправки;
		Запись.ИдентификаторСообщения = Выборка.ИдентификаторСообщения; 
		Запись.Удалить();
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли
