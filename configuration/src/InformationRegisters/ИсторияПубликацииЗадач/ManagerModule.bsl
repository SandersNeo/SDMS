///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Добавляет информацию о публикации задачи и даты помещения изменений в хранилище 1С.
//
// Параметры:
//  Задача               - ДокументСсылка.Задача - ссылка на задачу.
//  ДатаПубликации       - Дата - дата публикации изменений в рабочей системе.
//  ДатаИсторииХранилища - Дата - дата, когда изменения были помещены в хранилище 1С.
//
Процедура Добавить(Знач Задача, Знач ДатаПубликации, Знач ДатаИсторииХранилища, Знач УведомленияОтправлены = Ложь) Экспорт
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДатаПубликации);
	НаборЗаписей.Отбор.Задача.Установить(Задача);
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = ДатаПубликации;
	НоваяЗапись.Задача = Задача;
	НоваяЗапись.ДатаИсторииХранилища = ДатаИсторииХранилища;
	НоваяЗапись.ДатаДобавления = ТекущаяДатаСеанса();
	НоваяЗапись.УведомленияОтправлены = УведомленияОтправлены;
	НоваяЗапись.Автор = ПараметрыСеанса.ТекущийПользователь;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Удаляет запись регистра.
//
// Параметры:
//  Задача - ДокументСсылка.Задача - ссылка на задачу.
//  Период - Дата                  - период записи.
//
Процедура Удалить(Знач Задача, Знач Период) Экспорт
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(Период);
	НаборЗаписей.Отбор.Задача.Установить(Задача);	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Добавляет информацию об отправке оповещения пользователям.
//
// Параметры:
//  Период - Дата - дата публикации изменений в рабочей системе.
//  Задача - ДокументСсылка.Задача - ссылка на задачу.
//
Процедура УстановитьПризнакОтправкаУведомления(Знач Период, Знач Задача) Экспорт
		
	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период = Период;	
	МенеджерЗаписи.Задача = Задача;
	
	МенеджерЗаписи.Прочитать();
	
	Если МенеджерЗаписи.Выбран() Тогда
		МенеджерЗаписи.УведомленияОтправлены = Истина;	
		МенеджерЗаписи.Записать();
	КонецЕсли;	

КонецПроцедуры

// Возвращает дату последней публикации по задаче или пустую дату, если публикация не выполнялась.
//
// Параметры:
//  Задача – ДокументСсылка.Задача, ссылка на документ задача
//
// Возвращаемое значение:
// Дата - значение периода последней записи или пустая дата если записей нет.
//
Функция ПолучитьДатуПоследнейПубликации(Знач Задача) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсторияПубликацииЗадачСрезПоследних.Период КАК Период
	|ИЗ
	|	РегистрСведений.ИсторияПубликацииЗадач.СрезПоследних(, Задача = &Задача) КАК ИсторияПубликацииЗадачСрезПоследних";
	
	Запрос.УстановитьПараметр("Задача", Задача);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ДатаПоследнейПубликации = Дата(1,1,1);
	Иначе	
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ДатаПоследнейПубликации = Выборка.Период;
	КонецЕсли;
	
	Возврат ДатаПоследнейПубликации;
		
КонецФункции

#КонецОбласти

#КонецЕсли
