///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Добавляет обработчики обновления
//
// Параметры:
//  Обработчики	 - ТаблицаЗначений	 - см. ПриложениеВызовСервера.ПолучитьОбработчикиДанных
//
Процедура ДобавлениеОбработчиковОбновления(Обработчики) Экспорт     
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "*";
	Обработчик.Процедура = "ПланыВидовХарактеристик.ВидыНастроекПользователя.ПроверитьПредопределенныеЭлементы";
	  
КонецПроцедуры

// Проверяет предопределенные настройки
//
Процедура ПроверитьПредопределенныеЭлементы() Экспорт
	
	ЗаполнитьПредопределенныйЭлемент("НачалоРаботы");
	ЗаполнитьПредопределенныйЭлемент("НастройкиОповещений", , 1);
	ЗаполнитьПредопределенныйЭлемент("ЗаполнениеДокументов", , 2);
	
	ЗаполнитьПредопределенныйЭлемент("АвтоматическоеВосстановление");
	
	ЗаполнитьПредопределенныйЭлемент("ГруппировкаСообщений", , , , , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ПубликацияИСоздание", , 1, , , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ОтправкаДайджеста", , 2, , , , , Истина, Истина);
	ЗаполнитьПредопределенныйЭлемент("ДополнительныеНастройкиОповещений", , 3, , , , Истина);
	
	ПодсказкаГруппировки = 
	"По периоду - все сообщения за период, указанный для категорий на вкладке ""Общие"", будут объединены в одно.
	|По заявкам и задачам - сообщения по заявке и подчиненным задачам будут приходить одним письмом.
	|По проектам - группировка сообщений будет выполняться по проекту, указанному в реквизите ""Проект"" в карточке объекта.";
	
	СписокВыбораГруппировки = Новый СписокЗначений;
	СписокВыбораГруппировки.Добавить(0, "По периоду");
	СписокВыбораГруппировки.Добавить(1, "По заявкам и задачам");
	СписокВыбораГруппировки.Добавить(2, "По проектам");
	
	Подсказка =
	"Группировать сообщения по разным событиям в одно. Если при изменении объекта (например, перевод задачи в статус ""Тестирование"") 
	|происходит несколько событий (изменение статуса и установка даты последнего тестирования), и периодичность отправки этих событий 
	|различная (например, ""Изменение статуса"" - Незамедлительно, ""Изменение дат"" - День), то данные события будут сгруппированы в одно 
	|сообщение и отправлены с минимальной периодичностью категорий событий.";
	
	ЗаполнитьПредопределенныйЭлемент("ИспользоватьГруппировкуСообщений", , , , Истина, , , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ВариантГруппировкиСообщений", ПодсказкаГруппировки, 1, ИспользоватьГруппировкуСообщений, , Истина, , , , СписокВыбораГруппировки);  
	ЗаполнитьПредопределенныйЭлемент("ГруппироватьСообщенияПоКатегориям", Подсказка, 2, , , , , , Истина);
	
	Подсказка = "Получать еженедельный дайджест изменений по проектам и внутренним заданиям";
	ЗаполнитьПредопределенныйЭлемент("ОтправлятьДайджестПоПроектам", Подсказка, , , Истина, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ДеньОтправкиДайджестаПоПроектам", , 1, ОтправлятьДайджестПоПроектам, , Истина, , Истина);
	ЗаполнитьПредопределенныйЭлемент("ОтправкаДайджестаРуководитель", , 2, ОтправлятьДайджестПоПроектам, , , , Истина); 
	ЗаполнитьПредопределенныйЭлемент("ОтправкаДайджестаЗаказчик", , 3, ОтправлятьДайджестПоПроектам, , , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ОтправкаДайджестаНаблюдатель", , 4, ОтправлятьДайджестПоПроектам, , , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ОтправкаДайджестаЗаинтересованный", , 5, ОтправлятьДайджестПоПроектам, , , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ОтправкаДайджестаКУП", , 6, ОтправлятьДайджестПоПроектам, , , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ОтправкаДайджестаВладелецПродукта", , 7, ОтправлятьДайджестПоПроектам, , , , Истина);
	
	Подсказка = "Присылать информацию о задачах, которые находятся в статусе ""Тестирование"" на мне.";
	ЗаполнитьПредопределенныйЭлемент("ОтправлятьЗадачиНаТестировании", Подсказка, , , , , , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ВремяНапоминанияОТрудозатратах", , 1, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("СпособОповещения", , 2, , , Истина);
	
	ЗаполнитьПредопределенныйЭлемент("ОповещениеПочта");
	ЗаполнитьПредопределенныйЭлемент("ОповещениеМессенджер", , 1, , , , , , Истина);
	
	ЗаполнитьПредопределенныйЭлемент("ЗаполнениеЗадачи", , , , , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ЗаполнениеЗаявки", , , , , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ЗаполнениеВнутреннегоЗадания", , , , , , Истина);
	ЗаполнитьПредопределенныйЭлемент("БыстроеСозданиеЗадачи", , , , , , Истина);
	
	ЗаполнитьПредопределенныйЭлемент("НаправлениеДляБыстрогоСозданияЗадачи", , 0, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ЮрЛицоДляБыстрогоСозданияЗадачи", , 1, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("НазначениеДляБыстрогоСозданияЗадачи", , 2, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("СистемаДляБыстрогоСозданияЗадачи", , 3, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ВидЗадачиДляБыстрогоСозданияЗадачи", , 4, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ПродуктДляБыстрогоСозданияЗадачи", , 5, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ГруппаЗаказчиковДляБыстрогоСозданияЗадачи", , 6, , , Истина);
	
	ЗаполнитьПредопределенныйЭлемент("НазначениеДляЗаполненияЗадачи", , 0, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("НаправлениеДляЗаполненияЗадачи", , 1, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ВидПроцессаДляЗаполненияЗадачи", , 2, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ЗаказчикДляЗаполненияЗадачи", , 3, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("СистемаДляЗаполненияЗадачи", , 4, , , Истина);
	
	ЗаполнитьПредопределенныйЭлемент("НазначениеДляЗаполненияЗаявки", , 0, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ПродуктДляЗаполненияЗаявки", , 1, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("НаправлениеДляЗаполненияЗаявки", , 2, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ВидПроцессаДляЗаполненияЗаявки", , 3, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ЮрЛицоДляЗаполненияЗаявки", , 4, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("СистемаДляЗаполненияЗаявки", , 5, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ГруппаЗаказчиковДляЗаполненияЗаявки", , 6, , , Истина);
	
	ЗаполнитьПредопределенныйЭлемент("НазначенаДляЗаполненияВЗ", , 0, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("НазначениеДляЗаполненияВЗ", , 1, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("НаправлениеДляЗаполненияВЗ", , 2, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ВидПроцессаДляЗаполненияВЗ", , 3, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ЮрЛицоДляЗаполненияВЗ", , 4, , , Истина);
	ЗаполнитьПредопределенныйЭлемент("ПродуктДляЗаполненияВЗ", , 5, , , Истина);
	
КонецПроцедуры

#КонецОбласти  

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПредопределенныйЭлемент(ИмяЭлемента, Подсказка = "", ПорядокСледования = 1, ГлавныйРеквизит = Неопределено, Основной = Ложь, ОтображатьЗаголовок = Ложь, 
		ОтображатьКакПодраздел = Ложь, Скрытый = Ложь, ЗначениеПоУмолчанию = Ложь, СписокВыбора = Неопределено)
 
	Попытка
		Объект = ОбщегоНазначения.ПредопределенныйЭлемент("ПланВидовХарактеристик.ВидыНастроекПользователя." + ИмяЭлемента);
	Исключение
		Сообщение = НСтр("ru = 'Предопределенный элемент ""%Параметр%"" не найден.'");
		Сообщение = СтрЗаменить(Сообщение, "%Параметр%", "ПланыВидовХарактеристик.ВидыНастроекПользователя." + ИмяЭлемента);
		ВызватьИсключение Сообщение;
	КонецПопытки;
	
	Если Объект = Неопределено Тогда  
		Сообщение = НСтр("ru = 'Предопределенный элемент ""%Параметр%"" не найден.'");
		Сообщение = СтрЗаменить(Сообщение, "%Параметр%", "ПланыВидовХарактеристик.ВидыНастроекПользователя." + ИмяЭлемента);
		ВызватьИсключение Сообщение;
	КонецЕсли;

	Объект = Объект.ПолучитьОбъект();  
	
	Структура = Новый Структура;
	Структура.Вставить("ПорядокСледования", ПорядокСледования);
	Структура.Вставить("ГлавныйРеквизит", ГлавныйРеквизит);
	Структура.Вставить("ОтображатьЗаголовок", ОтображатьЗаголовок); 
	Структура.Вставить("Скрытый", Скрытый);
	
	Если Объект.ЭтоГруппа Тогда
		Структура.Вставить("ОтображатьКакПодраздел", ОтображатьКакПодраздел);
	Иначе
		Структура.Вставить("Подсказка", Подсказка);
		Структура.Вставить("Основной", Основной);
		Структура.Вставить("ЗначениеПоУмолчанию", ЗначениеПоУмолчанию);
		
		Если СписокВыбора <> Неопределено Тогда
			Объект.ИспользоватьСписокВыбора = Истина;
			
			Для Каждого Строка Из СписокВыбора Цикл
				НоваяСтрока = Объект.СписокВыбора.Добавить();
				НоваяСтрока.Значение = Строка.Значение;
				НоваяСтрока.Представление = Строка.Представление;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.ПорядокСледования = 0 Тогда
		ЗаполнитьЗначенияСвойств(Объект, Структура);
		Объект.Записать();                     
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
