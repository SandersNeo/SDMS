///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Добавляет обработчики обновления
//
// Параметры:
//  Обработчики	 - ТаблицаЗначений	 - см. ПриложениеВызовСервера.ПолучитьОбработчикиДанных
//
Процедура ДобавлениеОбработчиковОбновления(Обработчики) Экспорт     
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "*";
	Обработчик.Процедура = "ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов.ПроверитьПредопределенныеЭлементы";
	  
КонецПроцедуры

// Проверяет предопределенные настройки
//
Процедура ПроверитьПредопределенныеЭлементы() Экспорт 
	
	ЗаполнитьПредопределенныйЭлемент("РевьюерОбъекта", Справочники.Пользователи.ПустаяСсылка());
	ЗаполнитьПредопределенныйЭлемент("АвтоматическоеИзменениеСтатусаПослеОбновления", Справочники.СистемыУчета.ПустаяСсылка());	
	
	ЗаполнитьПредопределенныйЭлемент("ПримечаниеТестировщиков", Документы.Задача.ПустаяСсылка());     
	ЗаполнитьПредопределенныйЭлемент("ПримечаниеРазработчиков", Документы.Задача.ПустаяСсылка());     
	ЗаполнитьПредопределенныйЭлемент("ЧекЛистТестирования", Документы.Задача.ПустаяСсылка());     
	ЗаполнитьПредопределенныйЭлемент("РевьюерОбъекта", Документы.Задача.ПустаяСсылка());  
	ЗаполнитьПредопределенныйЭлемент("ЗадачаНаАвтотесты", Документы.Задача.ПустаяСсылка());  	
	
	ЗаполнитьПредопределенныйЭлемент("Куратор", Документы.ЗаявкаНаРазработку.ПустаяСсылка());     
	ЗаполнитьПредопределенныйЭлемент("ЦелеваяЗаявка", Документы.ЗаявкаНаРазработку.ПустаяСсылка());     
	ЗаполнитьПредопределенныйЭлемент("ЗапрещеноИзменениеОписанияЗаявки", Документы.ЗаявкаНаРазработку.ПустаяСсылка());     
	
	// под вопросом, возможно не надо
	ЗаполнитьПредопределенныйЭлемент("ДатаПоследнегоИзмененияОбъекта", Справочники.Проекты.ПустаяСсылка());     
	ЗаполнитьПредопределенныйЭлемент("ДатаПоследнегоИзмененияПодчиненныхОбъектов", Справочники.Проекты.ПустаяСсылка());     
    ЗаполнитьПредопределенныйЭлемент("РезультатПоследнегоТестирования", Документы.Задача.ПустаяСсылка());     
	ЗаполнитьПредопределенныйЭлемент("ЗадачаНаДокументацию", Документы.Задача.ПустаяСсылка());  
	ЗаполнитьПредопределенныйЭлемент("СрокАктуальностиЗаявкиВСтатусеНаДоработку", Справочники.НаправленияРазработки.ПустаяСсылка()); 	
	
КонецПроцедуры     

// Проверяет наличие дополнительных реквизитов для типа объекта с учетом группы пользователя
//
// Параметры:
//  Объект	 - ОпределяемыйТип.ВладелецДополнительныхРеквизитов	 - объект
// 
// Возвращаемое значение:
//   - Булево
//
Функция ДляОбъектаЕстьДополнительныеРеквизиты(Знач Объект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИСТИНА КАК ЕстьРеквизиты
	|ИЗ
	|	ПланВидовХарактеристик.ВидыДополнительныхРеквизитов КАК ВидыДополнительныхРеквизитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВидыДополнительныхРеквизитов.ИспользоватьВОбъектах КАК Использование
	|		ПО ВидыДополнительныхРеквизитов.Ссылка = Использование.Ссылка
	|ГДЕ
	|	Использование.Тип = &ПустаяСсылкаТипаОбъекта
	|	И Использование.Филиал = ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА
	|ИЗ
	|	ПланВидовХарактеристик.ВидыДополнительныхРеквизитов КАК ВидыДополнительныхРеквизитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВидыДополнительныхРеквизитов.ИспользоватьВОбъектах КАК Использование
	|		ПО ВидыДополнительныхРеквизитов.Ссылка = Использование.Ссылка
	|ГДЕ
	|	Использование.Тип = &ПустаяСсылкаТипаОбъекта
	|	И Использование.Филиал = &ФилиалПользователя";
	
	Запрос.УстановитьПараметр("ПустаяСсылкаТипаОбъекта", Новый(ТипЗнч(Объект)));
	Запрос.УстановитьПараметр("ФилиалПользователя", ПараметрыСеанса.Филиал);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

// Выполняет проверку типа значения характеристики на примитивный тип
//
// Параметры:
//  Владелец - ПланВидовХарактеристикСсылка.ВидыДополнительныхРеквизитов	 - характеристики, тип значения которой требуется проверить
// 
// Возвращаемое значение:
//   - Булево
//
Функция РазрешеноСоздаватьДоступныеЗначения(Знач Владелец) Экспорт

	ТипЗначенияВладельца = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Владелец, "ТипЗначения");
	
	Возврат (ТипЗначенияВладельца.СодержитТип(Тип("СправочникСсылка.ДоступныеЗначенияРеквизитов")));
	
КонецФункции
	
#КонецОбласти      

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПредопределенныйЭлемент(ИмяЭлемента, ПустаяСсылка) 
	
	Попытка
		Объект = ОбщегоНазначения.ПредопределенныйЭлемент("ПланВидовХарактеристик.ВидыДополнительныхРеквизитов." + ИмяЭлемента);
	Исключение
		Сообщение = НСтр("ru = 'Предопределенный элемент ""%Параметр%"" не найден.'");
		Сообщение = СтрЗаменить(Сообщение, "%Параметр%", "ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов." + ИмяЭлемента);
		ВызватьИсключение Сообщение;
	КонецПопытки;
	
	НужнаЗапись = Ложь;
		
	Если Объект = Неопределено Тогда  
		Сообщение = НСтр("ru = 'Предопределенный элемент ""%Параметр%"" не найден.'");
		Сообщение = СтрЗаменить(Сообщение, "%Параметр%", "ПланыВидовХарактеристик.ВидыДополнительныхРеквизитов." + ИмяЭлемента);
		ВызватьИсключение Сообщение;
	КонецЕсли;
	
	Объект = Объект.ПолучитьОбъект();  
	НайденнаяСтрока = Объект.ИспользоватьВОбъектах.Найти(ПустаяСсылка, "Тип");
	
	Если НайденнаяСтрока = Неопределено Тогда
		НайденнаяСтрока = Объект.ИспользоватьВОбъектах.Добавить();
		НайденнаяСтрока.Тип = ПустаяСсылка;
		НайденнаяСтрока.Описание = ПустаяСсылка.Метаданные().Имя;		
		Объект.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 
