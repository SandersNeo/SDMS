///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусыОбъектов.Ссылка КАК Статус,
	|	СтатусыОбъектов.ИндексКартинки КАК ИндексКартинки,
	|	ВЫБОР
	|		КОГДА СтатусыОбъектов.Ссылка В (&ОтмеченныеСтатусы)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Пометка
	|ИЗ
	|	Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтатусыОбъектов.Порядок";
	
	Запрос.УстановитьПараметр("ОтмеченныеСтатусы", Параметры.ВыбранныеСтатусы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаСтатусов.Добавить(), Выборка);
	КонецЦикла;
	
	ГруппироватьПоСтатусам        = Параметры.ГруппироватьПоСтатусам;
	ОтображатьИерархию	          = Параметры.ОтображатьИерархию;
	ОтображатьИерархиюДляТекущего = Параметры.ОтображатьИерархиюДляТекущего;
	СкрыватьРешенные 			  = Параметры.СкрыватьРешенные;
	
	Элементы.ОтображатьИерархиюДляТекущего.Доступность   = ОтображатьИерархию;
	Элементы.ГруппаОтборПоСтатусам.Доступность = НЕ ОтображатьИерархию;
	Элементы.СкрыватьРешенные.Доступность = ОтображатьИерархию;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтображатьИерархиюПриИзменении(Элемент)
	
	Если НЕ ОтображатьИерархию Тогда
		ОтображатьИерархиюДляТекущего = Ложь;
		СкрыватьРешенные = Ложь;
	Иначе
		ОтметитьВсе();
	КонецЕсли;
	
	Элементы.ОтображатьИерархиюДляТекущего.Доступность = ОтображатьИерархию;	
	Элементы.ГруппаОтборПоСтатусам.Доступность 		   = НЕ ОтображатьИерархию;
	Элементы.СкрыватьРешенные.Доступность			   = ОтображатьИерархию;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтметитьВсе(Команда = Неопределено)
	
	ИзменитьОтметки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьНастройки(Команда)
	
	// Формирование набора отмеченных статусов
	ОтмеченныеСтатусы = Новый СписокЗначений;
	Для Каждого СтрокаТаблицы Из ТаблицаСтатусов Цикл
		Если СтрокаТаблицы.Пометка Тогда
			ОтмеченныеСтатусы.Добавить(СтрокаТаблицы.Статус);
		КонецЕсли;
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("ОтмеченныеСтатусы", ОтмеченныеСтатусы);
	Результат.Вставить("ГруппироватьПоСтатусам", ГруппироватьПоСтатусам);
	Результат.Вставить("ОтображатьИерархию", ОтображатьИерархию);
	Результат.Вставить("ОтображатьИерархиюДляТекущего", ОтображатьИерархиюДляТекущего);
	Результат.Вставить("СкрыватьРешенные", СкрыватьРешенные);
	
	СохранитьНастройкиФормы(Результат);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметки(Команда)
	
	ИзменитьОтметки(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура СохранитьНастройкиФормы(НастройкиФормы)
	
	Ключ = ПолучитьКлючНастроек();
	ОбщегоНазначенияВызовСервера.СохранитьНастройкиДанныхФормы(Ключ.КлючОбъекта, Ключ.КлючНастроек, НастройкиФормы); 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьКлючНастроек()
	
	Возврат Новый Структура("КлючОбъекта, КлючНастроек", "ОбщаяФорма.СтруктураПодчиненности", "НастройкиФормы");
	
КонецФункции

&НаКлиенте
Процедура ИзменитьОтметки(Знач Пометка)
	
	Для Каждого СтрокаТаблицы Из ТаблицаСтатусов Цикл
		СтрокаТаблицы.Пометка = Пометка;
	КонецЦикла;		
	
КонецПроцедуры

&НаКлиенте
Процедура СкрыватьРешенныеПриИзменении(Элемент)
	Если СкрыватьРешенные = Истина Тогда
		Для каждого СтрокаТаблицы из ТаблицаСтатусов Цикл
			Если Строка(СтрокаТаблицы.Статус) = "Решен" ИЛИ Строка(СтрокаТаблицы.Статус) = "Отклонен" Тогда
				СтрокаТаблицы.Пометка = Ложь;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для каждого СтрокаТаблицы из ТаблицаСтатусов Цикл
			Если Строка(СтрокаТаблицы.Статус) = "Решен" ИЛИ Строка(СтрокаТаблицы.Статус) = "Отклонен" Тогда
				СтрокаТаблицы.Пометка = Истина;
			КонецЕсли;
		КонецЦикла;

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
