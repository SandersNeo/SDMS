///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

// Структура с вариантами направления сдвига месяцев ("Назад", "Вперед")
&НаКлиенте
Перем НаправленияСдвигаМесяцев;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПредыдущийМесяц = ДобавитьМесяц(ТекущаяДатаСеанса(), -1);
	МаксимальноДоступныйМесяц = КонецМесяца(ПредыдущийМесяц);
	
	Если НЕ ЗначениеЗаполнено(НаборКонстант.ДатаЗапретаИзмененияДанных) Тогда
		НаборКонстант.ДатаЗапретаИзмененияДанных = МаксимальноДоступныйМесяц;
	КонецЕсли;
	
	ЗаполнитьСписокМесяцев(НаборКонстант.ДатаЗапретаИзмененияДанных, МаксимальноДоступныйМесяц, ДоступныеМесяцы);
		
	УстановитьДоступностьСдвигДатыВперед(НаборКонстант.ДатаЗапретаИзмененияДанных, МаксимальноДоступныйМесяц,
		Элементы.СдвинутьВперед);
		
	ЗаблокироватьДанныеФормыДляРедактирования();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НаправленияСдвигаМесяцев = Новый Структура;
	НаправленияСдвигаМесяцев.Вставить("Вперед", 1);
	НаправленияСдвигаМесяцев.Вставить("Назад", -1);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДатаЗапретаИзмененияДанныхНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДатаЗапретаИзмененияДанныхОбработкаВыбора", ЭтотОбъект);
	
	ПоказатьВыборИзМеню(ОписаниеОповещения, ДоступныеМесяцы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьСправочнуюИнформацию(Команда)
	
	ПерейтиПоНавигационнойСсылке(ОбщегоНазначенияВызовСервера.ПолучитьКонстанту("КорневойURL") + "/docs/admin/data-edit-resctrict/");
	
КонецПроцедуры

&НаКлиенте
Процедура СдвинутьВперед(Команда)
	
	СдвинутьПериодНаОдинМесяц(НаправленияСдвигаМесяцев.Вперед);
	
КонецПроцедуры

&НаКлиенте
Процедура СдвинутьНазад(Команда)
	
	СдвинутьПериодНаОдинМесяц(НаправленияСдвигаМесяцев.Назад);	
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	СохранитьДатуЗапретаИзмененияДанных();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДатуЗапретаПоУмолчанию(Команда)
	
	ОбработатьИзменениеМесяца(МаксимальноДоступныйМесяц);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДатаЗапретаИзмененияДанныхОбработкаВыбора(ВыбранныйЭлемент, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(ВыбранныйЭлемент) = Тип("ЭлементСпискаЗначений") Тогда
		ОбработатьИзменениеМесяца(ВыбранныйЭлемент.Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьСписокМесяцев(Знач Период, Знач МаксимальноДоступныйМесяц, СписокЗначений)
	
	ГодПериода = Год(Период);
	ТекущаяДата = ОбщегоНазначенияВызовСервера.ТекущаяДатаСеансаНаСервере();
	
	// Если это текущий год, то нужно ограничить период предыдущим месяцем, т.к. будущими
	// месяцами еще данных нету.
	Если Год(ТекущаяДата) = ГодПериода Тогда
		МаксимальныйМесяц = Месяц(МаксимальноДоступныйМесяц);
	Иначе
		МаксимальныйМесяц = 12;
	КонецЕсли;
	
	СписокЗначений.Очистить();
	
	ПредыдущийГод = ГодПериода - 1;
	СписокЗначений.Добавить(Дата(ПредыдущийГод, 12, 31), "Предыдущий год (" + Формат(ПредыдущийГод, "ЧГ=") + ")");
	
	Для Месяц = 1 По МаксимальныйМесяц Цикл
		ПерваяДатаМесяца = Дата(ГодПериода, Месяц, 1);
		Дата = КонецМесяца(ПерваяДатаМесяца);
		ПредставлениеДаты = Формат(Дата, "ДФ='MMMM yyyy'");
		
		СписокЗначений.Добавить(Дата, ПредставлениеДаты);
	КонецЦикла;
	
	// Если это текущий год, то нету смысла давать пользоватею возможность переходить
	// в будущие года.
	МесяцевВГоду = 12;
	
	Если МаксимальныйМесяц = МесяцевВГоду Тогда
		СледующийГод = ГодПериода + 1;
		СписокЗначений.Добавить(Дата(СледующийГод, 1, 31), "Следующий год (" + Формат(СледующийГод, "ЧГ=") + ")");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеМесяца(ВыбранноеЗначение)
	
	Если Год(НаборКонстант.ДатаЗапретаИзмененияДанных) <> Год(ВыбранноеЗначение) Тогда
		ЗаполнитьСписокМесяцев(ВыбранноеЗначение, МаксимальноДоступныйМесяц, ДоступныеМесяцы);
	КонецЕсли;
	
	НаборКонстант.ДатаЗапретаИзмененияДанных = ВыбранноеЗначение;
	
	УстановитьДоступностьСдвигДатыВперед(НаборКонстант.ДатаЗапретаИзмененияДанных, МаксимальноДоступныйМесяц,
		Элементы.СдвинутьВперед);
		
КонецПроцедуры
	
	&НаКлиенте
Процедура СдвинутьПериодНаОдинМесяц(Знач НаправлениеСдвига)
	
	НовыйМесяц = ДобавитьМесяц(НаборКонстант.ДатаЗапретаИзмененияДанных, НаправлениеСдвига);
	ОбработатьИзменениеМесяца(НовыйМесяц);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДатуЗапретаИзмененияДанных()
	
	ЗначениеРеквизита = РеквизитФормыВЗначение("НаборКонстант");
	ЗначениеРеквизита.Записать();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьСдвигДатыВперед(Знач Дата, Знач МаксимальноДоступныйМесяц, КнопкаСдвигаВперед)
	
	СледующаяДата = ДобавитьМесяц(Дата, 1);

	КнопкаСдвигаВперед.Доступность = (СледующаяДата <= МаксимальноДоступныйМесяц);

КонецПроцедуры

#КонецОбласти
