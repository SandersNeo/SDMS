///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

&НаКлиенте
Перем КешВспомогательныхДанных;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	// Нужно будет немного изменить, когда у нас владельцем может быть
	// Должность или Филиал.
	ВладелецОграничений = Параметры.ВладелецОграничений;
	ФилиалПользователя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВладелецОграничений, "Филиал");
	
	ЗаполнитьТаблицыОграничений();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокГруппДоступаПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.СписокГруппДоступа.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыбраннаяГруппаДоступа = ТекущиеДанные.Значение;
	ПараметрыОтбора = Новый Структура("ГруппаДоступа", ВыбраннаяГруппаДоступа);
	Элементы.ТаблицаОграниченийПравПоГруппамДоступа.ОтборСтрок = Новый ФиксированнаяСтруктура(ПараметрыОтбора);
	
	// Заголовок для группы доступа.
	Элементы.НадписьЗаголовокГруппаДоступа.Заголовок = ТекущиеДанные.Представление;
	
	// Если для группы нет прав - сбрасываем все ограничения по объектам.
	КоличествоПравДляГруппы = ПолучитьКоличествоПравДляГруппы(ВыбраннаяГруппаДоступа, ТаблицаОграниченийПравПоГруппамДоступа);
	
	// Проверим, что выбрана группа "Без группы".
	Если КоличествоПравДляГруппы = 0 Тогда
		ПараметрыОтбораПоОбъектам = Новый Структура("Право", КешВспомогательныхДанных.ПрограммнаяРольПустаяСсылка);
		Элементы.ТаблицаОграниченийПравПоОбъектам.ОтборСтрок = Новый ФиксированнаяСтруктура(ПараметрыОтбораПоОбъектам);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОграниченийПравПоГруппамДоступаПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаОграниченийПравПоГруппамДоступа.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыбранноеПраво = ТекущиеДанные.Право;
	ПараметрыОтбора = Новый Структура("Право", ВыбранноеПраво);
	Элементы.ТаблицаОграниченийПравПоОбъектам.ОтборСтрок = Новый ФиксированнаяСтруктура(ПараметрыОтбора);
	
	// Обработка заголовка - запрещенные/разрешенные значения.
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.ВидРазрешения) Тогда
		Возврат;
	ИначеЕсли ТекущиеДанные.ВидРазрешения = КешВспомогательныхДанных.ВидДоступаРазрешено Тогда
		Элементы.НадписьЗаголовокРазрешения.Заголовок = "Запрещенные значения";
	Иначе
		Элементы.НадписьЗаголовокРазрешения.Заголовок = "Разрешенные значения";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицыОграничений()
	
	// Пока считаем, что ВладелецОграничений = Пользователь.
	// В дальнейшем, нужно будет по разному получать группы доступа.
	ГруппыДоступа = БезопасностьПовтИсп.ПолучитьГруппыДоступаПользователя(ВладелецОграничений, ФилиалПользователя);
	
	// Заполнение таблицы групп для запроса.
	ТаблицаГрупп = Новый ТаблицаЗначений;
	ТаблицаГрупп.Колонки.Добавить("ГруппаДоступа", Новый ОписаниеТипов("СправочникСсылка.ГруппыДоступа"));
		
	Для Каждого ГруппаДоступа Из ГруппыДоступа Цикл
		ТаблицаГрупп.Добавить().ГруппаДоступа = ГруппаДоступа;
	КонецЦикла;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаГруппДоступа.ГруппаДоступа КАК ГруппаДоступа
	|ПОМЕСТИТЬ ТаблицаГруппДоступа
	|ИЗ
	|	&ТаблицаГруппДоступа КАК ТаблицаГруппДоступа
	|;
	|ВЫБРАТЬ
	|   ТаблицаГруппДоступа.ГруппаДоступа КАК ГруппаДоступа,
	|	ГруппыДоступа.Наименование КАК НаименованиеГруппыДоступа,
	|	ЗначенияРолейДляГруппДоступа.Объект КАК ОбъектМетаданных,
	|	ЕСТЬNULL(ЗначенияРолейДляГруппДоступа.Роль, ЗНАЧЕНИЕ(Справочник.ПрограммныеРоли.ПустаяСсылка)) КАК Право,
	|	ЕСТЬNULL(ЗначенияРолейДляГруппДоступа.ВидПраваДоступа, ЗНАЧЕНИЕ(Перечисление.ВидыПравДоступа.Разрешено)) КАК ВидРазрешения,
	|	ИСТИНА КАК ОтображатьОбъект
	|ИЗ
	|	ТаблицаГруппДоступа КАК ТаблицаГруппДоступа
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияРолейДляГруппДоступа КАК ЗначенияРолейДляГруппДоступа
	|		ПО ТаблицаГруппДоступа.ГруппаДоступа = ЗначенияРолейДляГруппДоступа.ГруппаДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа КАК ГруппыДоступа
	|		ПО ТаблицаГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	 НаименованиеГруппыДоступа
	|ИТОГИ 
	|	МАКСИМУМ(НаименованиеГруппыДоступа)
	|ПО
	|	ГруппаДоступа,
	|	ОбъектМетаданных ИЕРАРХИЯ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиПравОбъектов.Объект КАК Объект,
	|	НастройкиПравОбъектов.Роль КАК Право,
	|	НастройкиПравОбъектов.ВидПраваДоступа КАК ВидПраваДоступа
	|ИЗ
	|	РегистрСведений.НастройкиПравОбъектов КАК НастройкиПравОбъектов
	|ГДЕ
	|	НастройкиПравОбъектов.Пользователь = &ТекущийПользователь";
		
	Запрос.УстановитьПараметр("ТаблицаГруппДоступа", ТаблицаГрупп);
	Запрос.УстановитьПараметр("ТекущийПользователь", ВладелецОграничений);
	
	РезультатПакет = Запрос.ВыполнитьПакет();
	
	ВыборкаРолиГруппыДоступа = РезультатПакет[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаНастройкиОбъектов = РезультатПакет[2].Выбрать();
	
	Пока ВыборкаРолиГруппыДоступа.Следующий() Цикл
		СтрокаСписка = СписокГруппДоступа.Добавить(ВыборкаРолиГруппыДоступа.ГруппаДоступа, ВыборкаРолиГруппыДоступа.НаименованиеГруппыДоступа,, 
			БиблиотекаКартинок.ГруппаПользователей);
		
		ВыборкаОграниченияГрупп = ВыборкаРолиГруппыДоступа.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "ОбъектМетаданных");
		Пока ВыборкаОграниченияГрупп.Следующий() Цикл
			
			ВыборкаОграниченияОбъект = ВыборкаОграниченияГрупп.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "ОбъектМетаданных");
			Пока ВыборкаОграниченияОбъект.Следующий() Цикл	
				
				ВыборкаОграниченияФорма =  ВыборкаОграниченияОбъект.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "ОбъектМетаданных");
				Пока ВыборкаОграниченияФорма.Следующий() Цикл			
					
					ИмяДляОбъекта = Строка(ВыборкаОграниченияОбъект.ОбъектМетаданных);
					Если ВыборкаОграниченияФорма.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
						ВыборкаДетальнаяЗапись = ВыборкаОграниченияФорма.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "");
						ВыборкаДетальнаяЗапись.Следующий();
						
						Если ИмяДляОбъекта <> Строка(ВыборкаДетальнаяЗапись.ОбъектМетаданных) Тогда
							ИмяДляОбъекта = ИмяДляОбъекта + СтрШаблон(".%1", ВыборкаДетальнаяЗапись.ОбъектМетаданных);
						Иначе
							ИмяДляОбъекта = Строка(ВыборкаДетальнаяЗапись.ОбъектМетаданных);
						КонецЕсли;
						
						СтрокаОграничениеПрава = ТаблицаОграниченийПравПоГруппамДоступа.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаОграничениеПрава, ВыборкаДетальнаяЗапись);
						СтрокаОграничениеПрава.ОбъектМетаданныхПредставление = ИмяДляОбъекта;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
							
	Пока ВыборкаНастройкиОбъектов.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаОграниченийПравПоОбъектам.Добавить(), ВыборкаНастройкиОбъектов);
	КонецЦикла;
	
	// Проверим все ли ограничения по объектам попали в группы доступа.
	Для Каждого СтрокаТаблицы Из ТаблицаОграниченийПравПоОбъектам Цикл
		ПараметрыОтбора = Новый Структура("Право", СтрокаТаблицы.Право);
		МассивСтрок = ТаблицаОграниченийПравПоГруппамДоступа.НайтиСтроки(ПараметрыОтбора);
		Если МассивСтрок.Количество() <> 0 Тогда
			Продолжить;
		КонецЕсли;
		
		// Добавим в список групп доступа служебное значение.
		Если СписокГруппДоступа.НайтиПоЗначению(Справочники.ГруппыДоступа.ПустаяСсылка()) = Неопределено Тогда
			СписокГруппДоступа.Добавить(Справочники.ГруппыДоступа.ПустаяСсылка(), "<Без группы>");
		КонецЕсли;
		
		// Добавляем строку в таблицу ограничений по группам доступа.
		СтрокаТаблицыГруппа = ТаблицаОграниченийПравПоГруппамДоступа.Добавить();
		СтрокаТаблицыГруппа.ГруппаДоступа = Справочники.ГруппыДоступа.ПустаяСсылка();
		СтрокаТаблицыГруппа.Право = СтрокаТаблицы.Право;
	КонецЦикла;
			
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВспомогательныеДанныеНаСервере()
	
	КешВспомогательныхДанных = Новый Структура;
	КешВспомогательныхДанных.Вставить("ВидДоступаРазрешено", Перечисления.ВидыПравДоступа.Разрешено);
	КешВспомогательныхДанных.Вставить("ПрограммнаяРольПустаяСсылка", Справочники.ПрограммныеРоли.ПустаяСсылка());
	
	Возврат КешВспомогательныхДанных; 
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКоличествоПравДляГруппы(Знач ГруппаДоступа, Знач ТаблицаОграниченийПравПоГруппамДоступа)
	
	ПараметрыОтбора = Новый Структура("ГруппаДоступа", ГруппаДоступа); 
	МассивСтрок = ТаблицаОграниченийПравПоГруппамДоступа.НайтиСтроки(ПараметрыОтбора);
	
	Возврат МассивСтрок.Количество();
	
КонецФункции

#КонецОбласти
	
КешВспомогательныхДанных = ПолучитьВспомогательныеДанныеНаСервере();
