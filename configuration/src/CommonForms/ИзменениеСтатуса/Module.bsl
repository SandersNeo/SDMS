///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

// Соответствие причины и дополнительных данных
&НаКлиенте
Перем СвойстваПричинИзмененияСтатуса;

// Соответствие идентификатора строки списка выбора виду деятельности и услуге
&НаКлиенте
Перем ХэшВидДеятельностиУслуга;

#КонецОбласти

#Область ОбработчикСобытийФорм
	
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если НЕ Параметры.Свойство("ОтображатьТрудозатраты") Тогда
		ОтображатьТрудозатраты = ОбщегоНазначенияВызовСервера.ЗагрузитьНастройкиДанныхФормы(ИмяФормы, "ОтображатьТрудозатраты");
		
		Если ОтображатьТрудозатраты = Неопределено Тогда
			ОтображатьТрудозатраты = Истина;	
		КонецЕсли;
	Иначе
		ОтображатьТрудозатраты = Параметры.ОтображатьТрудозатраты;
		ОбщегоНазначенияВызовСервера.СохранитьНастройкиДанныхФормы(ИмяФормы, "ОтображатьТрудозатраты", ОтображатьТрудозатраты);
	КонецЕсли;
	
	НовыйСтатус = Параметры.НовыйСтатус;
	КомментарийОбязателен = Параметры.ТребуетсяКомментарий;
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Если Параметры.Свойство("Назначена") Тогда
		НазначитьНа = Параметры.Назначена;
	КонецЕсли;
	
	Объект = Параметры.Объект;
	Направление = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Объект, "Направление");
	
	ДанныеДляКлиента = Новый Структура("ХэшВидДеятельностиУслуга");
	
	Если ОтображатьТрудозатраты Тогда
		РеквизитВидДеятельности = Элементы.ТрудозатратыВидДеятельности;
	Иначе
		РеквизитВидДеятельности = Элементы.ТрудозатратыВидДеятельностиСворачиваемая;
	КонецЕсли;
	
	ДанныеДляКлиента.ХэшВидДеятельностиУслуга = УчетТрудозатрат.ДополнитьВидыДеятельностиУслугами(
		РеквизитВидДеятельности, Направление);
			
	// При переводе в CodeReview комментарий по умолчанию должен иметь ограниченный просмотр
	ПричиныИзмененияСтатуса = ПовторноеИспользованиеВызовСервера.ПолучитьПричиныИзмененияСтатуса(НовыйСтатус, Объект); 
	ПредставлениеНачальногоСтатуса = Строка(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "Статус"));
	ПредставлениеСтатуса = Строка(НовыйСтатус);
	Заголовок = СтрШаблон("Изменение статуса на ""%1""", ПредставлениеСтатуса);
	
	Если ПричиныИзмененияСтатуса <> Неопределено Тогда
		Элементы.Причина.Видимость = Истина;
		ЭлементыПодсказки = Новый Массив;
		СвойстваПричинИзмененияСтатуса = Новый Соответствие;
		
		Для Каждого Строка Из ПричиныИзмененияСтатуса Цикл
			СписокПричин.Добавить(Строка.Ссылка, Строка.Наименование);
			
			СвойстваПричины = Новый Структура("НеобходимоОтправитьУведомление, ОбязательноеЗаполнениеКомментария",
				Строка.НеобходимоОтправитьУведомление, Строка.ОбязательноеЗаполнениеКомментария);
			СвойстваПричинИзмененияСтатуса.Вставить(Строка.Ссылка, СвойстваПричины);
			
			Если ЗначениеЗаполнено(Строка.Описание) Тогда
				ЭлементыФорматированнойСтроки = Новый Массив;
				ЭлементыФорматированнойСтроки.Добавить(Новый ФорматированнаяСтрока(Строка.Наименование, Новый Шрифт(, , Истина)));
				ЭлементыФорматированнойСтроки.Добавить(" - ");
				ЭлементыФорматированнойСтроки.Добавить(Строка.Описание);
				ЭлементыФорматированнойСтроки.Добавить(Символы.ПС);
				ЭлементыФорматированнойСтроки.Добавить(Символы.ПС);
				ЭлементыПодсказки.Добавить(Новый ФорматированнаяСтрока(ЭлементыФорматированнойСтроки));
			КонецЕсли;
		КонецЦикла;
		
		ДанныеДляКлиента.Вставить("СвойстваПричинИзмененияСтатуса", СвойстваПричинИзмененияСтатуса);
		Элементы.Причина.РасширеннаяПодсказка.Заголовок = Новый ФорматированнаяСтрока(ЭлементыПодсказки);
		
		Если НЕ Параметры.Свойство("Причина") Тогда
			ПредставлениеПричины = "Выберите причину изменения статуса";
		Иначе
			Причина = Параметры.Причина;
			ПредставлениеПричины = СписокПричин.НайтиПоЗначению(Причина).Представление;
		КонецЕсли;
	КонецЕсли;
	
	Если КомментарийОбязателен Тогда
		Элементы.ГруппаПодсказкаКомментария.ЦветФона     = ЦветаСтиля.ЦветПодсказкиОбязательногоПоля;
		Элементы.Надпись_ПодсказкаКомментария.ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
		Элементы.Картинка_ПодсказкаКомментария.Картинка  = БиблиотекаКартинок.Предупреждение;
		Элементы.Комментарий.ПодсказкаВвода              = "обязателен для заполнения";
		
		ТекстПодсказкиКомментария = "Дополнительно нужно указать причину изменения статуса";
		
		Общедоступный = Истина;
		Элементы.Общедоступный.Доступность = Ложь;	
	Иначе
		Элементы.Комментарий.ПодсказкаВвода = "необязателен для заполнения";
		
		ТекстПодсказкиКомментария = "Дополнительно можно указать комментарий к статусу";
		
		Общедоступный = (НовыйСтатус <> Справочники.СтатусыОбъектов.CodeReview);
		Элементы.Общедоступный.Доступность = Истина;	
	КонецЕсли;
	
	Параметры.Свойство("Комментарий", Комментарий);
	Параметры.Свойство("ЗатратыВремени", ЗатратыВремени);
	Параметры.Свойство("КомментарийТрудозатрат", КомментарийТрудозатрат);
	Параметры.Свойство("ВидДеятельности", ВидДеятельности);
	Параметры.Свойство("Услуга", Услуга);
	
	Если Параметры.Свойство("Общедоступный") Тогда
		Общедоступный = Параметры.Общедоступный;
	КонецЕсли;
	
	Если Параметры.Свойство("ВидДеятельности") Тогда
		ПредставлениеВидаДеятельности = УчетТрудозатрат.ПолучитьИдентификаторВидаДеятельности(ВидДеятельности, Услуга);
	КонецЕсли;
	
	ПараметрыОповещения = Параметры.ПараметрыОповещения;
	
	Элементы.Надпись_ПодсказкаКомментария.Заголовок = ТекстПодсказкиКомментария;
	Элементы.Комментарий.АвтоОтметкаНезаполненного = КомментарийОбязателен;
	
	АдресХранилища = ПоместитьВоВременноеХранилище(ДанныеДляКлиента, УникальныйИдентификатор);
	
	НастроитьОтображениеТрудозатрат(ОтображатьТрудозатраты);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ДанныеДляКлиента = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	ДанныеДляКлиента.Свойство("СвойстваПричинИзмененияСтатуса", СвойстваПричинИзмененияСтатуса);
	ХэшВидДеятельностиУслуга = ДанныеДляКлиента.ХэшВидДеятельностиУслуга;
	
	Если ЗначениеЗаполнено(Причина) Тогда
		НастроитьПолеКомментария();	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПричинаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОчиститьСообщения();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборПричины", ЭтотОбъект);
	ПоказатьВыборИзМеню(ОписаниеОповещения, СписокПричин, Элементы.Причина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТрудозатратыВидДеятельностиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УчетТрудозатратКлиент.ОбработатьВыборВидаДеятельности(ВыбранноеЗначение, ВидДеятельности, Услуга, ХэшВидДеятельностиУслуга);
	
КонецПроцедуры

&НаКлиенте
Процедура ТрудозатратыВидДеятельностиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТрудозатратыВидДеятельностиОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьТрудозатраты(Команда)
	
	Элементы.ГруппаТрудозатратыСворачиваемая.Показать();
	
	// TO DO: на версии 8.3.21 при изменении видимости всплывающей группы в веб-клиенте появляются визуальные баги
	ПодключитьОбработчикОжидания("ВернутьОсновнуюСтраницу", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьОкноДобавленияТрудозатрат(Команда)
	
	ОтключитьОбработчикОжидания("ВернутьОсновнуюСтраницу");
	Элементы.ГруппаТрудозатратыСворачиваемая.Скрыть();
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОсновная;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСтатус(Команда)
	
	ОчиститьСообщения(); // Очистим окно сообщений
	
	ТекстСообщения = "";
	Поле = "";
		
	Если СписокПричин.Количество() > 0 И НЕ ЗначениеЗаполнено(Причина) Тогда
		ТекстСообщения = "Не выбрана причина изменения статуса.";
		Поле = "ПредставлениеПричины";
	КонецЕсли;
	
	Если КомментарийОбязателен И ПустаяСтрока(Комментарий) Тогда
		ТекстСообщения = "Не заполнен комментарий причины изменения статуса.";
		Поле = "Комментарий";
	КонецЕсли;
	
	Если ЗатратыВремени > 0 И НЕ ЗначениеЗаполнено(ВидДеятельности) Тогда
		ТекстСообщения = "Не указан вид деятельности для трудозатрат.";
		Поле = "ПредставлениеВидаДеятельности";
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстСообщения) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , Поле);
		Возврат;
	КонецЕсли;
		
	Если НазначитьНа <> ТекущийПользователь Тогда
		ДанныеОтсутствия = ПользователиВызовСервера.ДанныеОтсутствия(НазначитьНа);
		
		Если ДанныеОтсутствия.Отсутствует Тогда
			ДопПараметры = Новый Структура;
			ДопПараметры.Вставить("Форма", ЭтотОбъект);
			
			ИнтерфейсПриложенияКлиент.ПодтвердитьВыборОтсутствующегоПользователя(НазначитьНа, ДанныеОтсутствия, ДопПараметры);
		Иначе
			ЗавершитьИзменениеСтатуса();
		КонецЕсли;
	Иначе
		ЗавершитьИзменениеСтатуса();
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПослеПодтвержденияВыбораОтсутствующего(Знач ДопПараметры) Экспорт
	
	ЗавершитьИзменениеСтатуса();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьИзменениеСтатуса()

	Трудозатраты = Новый Структура;
	Трудозатраты.Вставить("ЗатратыВремени", ЗатратыВремени);
	Трудозатраты.Вставить("ВидДеятельности", ВидДеятельности);
	Трудозатраты.Вставить("Услуга", Услуга);
	Трудозатраты.Вставить("Комментарий", КомментарийТрудозатрат);
	
	ДанныеКомментария = РаботаСПроцессамиКлиентСервер.ПодготовитьКомментарийСтатуса(Комментарий, Общедоступный, Причина, ПредставлениеНачальногоСтатуса, ПредставлениеСтатуса);
	Результат = РаботаСПроцессамиКлиентСервер.ПодготовитьДанныеИзмененияСтатуса(Трудозатраты, НазначитьНа, Причина, ДанныеКомментария, СвойстваПричинИзмененияСтатуса);
	
	Закрыть(Результат);
	
	Если ЗатратыВремени > 0 Тогда
		Оповестить(СобытияОповещенияКлиент.ИмяСобытияДобавленияТрудозатрат());
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправкуТрудозатрат(Команда)
	
	ПерейтиПоНавигационнойСсылке(ОбщегоНазначенияВызовСервера.ПолучитьКонстанту("КорневойURL") + "/docs/elapsed-time/elapsed-time-adding/");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьТрудозатратыНаФорме(Команда)
	
	ПараметрыЗакрытия = Новый Структура("ПереоткрытиеФормы", Истина);
	Закрыть(ПараметрыЗакрытия);
	
	ОтображатьТрудозатраты = НЕ Элементы.ОтобразитьТрудозатратыНаФорме.Пометка;
		
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ПараметрыОповещения", ПараметрыОповещения);
	ПараметрыОткрытия.Вставить("НовыйСтатус", НовыйСтатус);
	ПараметрыОткрытия.Вставить("ТребуетсяКомментарий", КомментарийОбязателен);
	ПараметрыОткрытия.Вставить("Назначена", НазначитьНа);
	ПараметрыОткрытия.Вставить("Объект", Объект);
	ПараметрыОткрытия.Вставить("ОтображатьТрудозатраты", ОтображатьТрудозатраты);
	ПараметрыОткрытия.Вставить("Комментарий", Комментарий);
	ПараметрыОткрытия.Вставить("Общедоступный", Общедоступный);
	ПараметрыОткрытия.Вставить("ЗатратыВремени", ЗатратыВремени);
	ПараметрыОткрытия.Вставить("ВидДеятельности", ВидДеятельности);
	ПараметрыОткрытия.Вставить("Услуга", Услуга);
	ПараметрыОткрытия.Вставить("КомментарийТрудозатрат", КомментарийТрудозатрат);
	
	Если ЗначениеЗаполнено(Причина) Тогда
		ПараметрыОткрытия.Вставить("Причина", Причина);
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.ИзменениеСтатуса", ПараметрыОткрытия, ВладелецФормы, , , , ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодробнееНажатие(Элемент)    
	
	 ПерейтиПоНавигационнойСсылке(ОбщегоНазначенияВызовСервера.ПолучитьКонстанту("КорневойURL") + "/docs/task/status-form/"); 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВернутьОсновнуюСтраницу()
	
	Если Элементы.ГруппаТрудозатратыСворачиваемая.Скрыта() Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОсновная;
	Иначе
		ПодключитьОбработчикОжидания("ВернутьОсновнуюСтраницу", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьОтображениеТрудозатрат(Знач ОтображатьТрудозатраты) 
	
	Элементы.ОтобразитьТрудозатратыНаФорме.Пометка = ОтображатьТрудозатраты;
	
	Если ОтображатьТрудозатраты Тогда
		Элементы.ГруппаТрудозатраты.Видимость = Истина;
		Элементы.ДобавитьТрудозатраты.Видимость = Ложь;
	Иначе
		Элементы.ГруппаТрудозатраты.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьПолеКомментария()
	
	СвойстваПричины = СвойстваПричинИзмененияСтатуса.Получить(Причина);
	
	КомментарийДляПричиныОбязателен = СвойстваПричины.ОбязательноеЗаполнениеКомментария;
	
	Если КомментарийОбязателен ИЛИ КомментарийДляПричиныОбязателен Тогда
		Элементы.Комментарий.ПодсказкаВвода = "обязателен для заполнения";
		Элементы.ГруппаПодсказкаКомментария.ЦветФона = Новый Цвет(255, 228, 225);
		Элементы.Надпись_ПодсказкаКомментария.ЦветТекста = Новый Цвет(51, 51, 51);
		Элементы.Картинка_ПодсказкаКомментария.Картинка = БиблиотекаКартинок.Предупреждение;
		
		ШаблонКомментария =
		"При изменении статуса задачи на ""%1"", для выбранной
		|причины нужно указать комментарий.";
		
		Общедоступный = Истина;
		Элементы.Общедоступный.Доступность = Ложь;
		
	Иначе
		Элементы.Комментарий.ПодсказкаВвода = "необязателен для заполнения";
		Элементы.ГруппаПодсказкаКомментария.ЦветФона = Новый Цвет(255, 251, 227);
		Элементы.Надпись_ПодсказкаКомментария.ЦветТекста = Новый Цвет;
		Элементы.Картинка_ПодсказкаКомментария.Картинка = БиблиотекаКартинок.Информация16;
		
		ШаблонКомментария =
		"При изменении статуса задачи на ""%1"", для выбранной
		|причины заполнение комментария не обязательно.";
		
		Общедоступный = (НовыйСтатус <> ПредопределенноеЗначение("Справочник.СтатусыОбъектов.CodeReview"));
		Элементы.Общедоступный.Доступность = Истина;
	КонецЕсли;
	
	Элементы.Надпись_ПодсказкаКомментария.Заголовок = СтрШаблон(ШаблонКомментария, ПредставлениеСтатуса);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборПричины(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Причина = ВыбранныйЭлемент.Значение;
		ПредставлениеПричины = ВыбранныйЭлемент.Представление;
		
		НастроитьПолеКомментария();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборВидаДеятельности(Знач ВыбранноеЗначение, Знач ДополнительныеПараметры) Экспорт
	
	УчетТрудозатратКлиент.ОбработатьВыборВидаДеятельности(ВыбранноеЗначение, ВидДеятельности, Услуга, ХэшВидДеятельностиУслуга);
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

#Если Клиент Тогда
	
ХэшВидДеятельностиУслуга = Неопределено;
	
#КонецЕсли

#КонецОбласти
