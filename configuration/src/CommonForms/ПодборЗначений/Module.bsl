///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Если в параметрах был передан заголовок окна, установим его
	Если НЕ ПустаяСтрока(Параметры.ЗаголовокОкна) Тогда
		Заголовок = Параметры.ЗаголовокОкна;
	КонецЕсли;
	
	// Если можно выбрать несколько значений, то покажем колонку пометка. В противном
	// случае скроем эту колонку.
	Элементы.СписокЭлементовПометка.Видимость       = Параметры.МножественныйВыбор;
	Элементы.СписокЭлементов.МножественныйВыбор     = Параметры.МножественныйВыбор;
	Элементы.ГруппаУстановитьСнятьПометки.Видимость = Параметры.МножественныйВыбор;
	
	Если Параметры.Свойство("КартинкаСтрок") Тогда
		Элементы.СписокЭлементов.КартинкаСтрок = БиблиотекаКартинок[Параметры.КартинкаСтрок];
	КонецЕсли; 
	
	//Отображение поиска
	Если Параметры.Свойство("ИспользоватьПоиск") Тогда
		Элементы.ГруппаПоиск.Видимость = Параметры.ИспользоватьПоиск;
	КонецЕсли;
	
	Если Параметры.ВариантЗаполнения = 0 Тогда
		ЗаполнитьПоТекстуЗапроса(Параметры.ТекстЗапроса, Параметры.ОтмеченныеЗначения);
	ИначеЕсли Параметры.ВариантЗаполнения = 1 Тогда
		ЗаполнитьПоСпискуЗначений(Параметры.ОтмеченныеЗначения);
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	ИзменитьПометки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	ИзменитьПометки(Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ "СписокЭлементов"

&НаКлиенте
Процедура ПоискПоСпискуЗначенийАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если СписокЭлементов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
		
	Если ЗначениеЗаполнено(Текст)
		И СтрДлина(Текст) >= 2 Тогда
		
		СтандартнаяОбработка = Ложь;
		Элемент = СписокЭлементов[0].Значение;
		
		Если ТипЗнч(Элемент) = Тип("СправочникСсылка.Пользователи") Тогда
			ДанныеВыбора = ПолучитьДанныеВыбораПользователи(Текст, СписокЭлементов);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоСпискуЗначенийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПараметрыОтбора = Новый Структура("Наименование", ВыбранноеЗначение);
	МассивСтрок = СписокЭлементов.НайтиСтроки(ПараметрыОтбора);
	
	ИдентификаторСтроки = МассивСтрок[0].ПолучитьИдентификатор(); 
	Элементы.СписокЭлементов.ТекущаяСтрока = ИдентификаторСтроки;	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЭлементовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Параметры.МножественныйВыбор Тогда
		Элемент.ТекущиеДанные.Пометка = НЕ Элемент.ТекущиеДанные.Пометка;
		Возврат;
	КонецЕсли;
	
	ЗавершитьВыборЗначений();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьВыбор(Команда)
	
	ЗавершитьВыборЗначений();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ИзменитьПометки(Знач Пометка)
	
	НайденныеСтроки = СписокЭлементов.НайтиСтроки(Новый Структура("Пометка", НЕ Пометка));
	Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл
		СтрокаТаблицы.Пометка = Пометка;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВыборЗначений()
	
	ВыбранныеЗначения = Новый Массив;
	
	Если Параметры.МножественныйВыбор Тогда
		// Получим отмеченные элементы
		НайденныеСтроки = СписокЭлементов.НайтиСтроки(Новый Структура("Пометка", Истина));
		Если НайденныеСтроки.Количество() > 0 Тогда
		
			Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл
				ВыбранныеЗначения.Добавить(СтрокаТаблицы.Значение);
			КонецЦикла;

		КонецЕсли;	
		
	Иначе
		
		ТекущиеДанные = Элементы.СписокЭлементов.ТекущиеДанные;
		
		Если ТекущиеДанные <> Неопределено Тогда
			ВыбранныеЗначения.Добавить(ТекущиеДанные.Значение);
		КонецЕсли;
	КонецЕсли;
	
	Закрыть(ВыбранныеЗначения);	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоСпискуЗначений(Знач СписокЗначений)
	
	Для Каждого ЭлементСписка Из СписокЗначений Цикл
		НоваяСтрока = СписокЭлементов.Добавить();
		НоваяСтрока.Пометка      = ЭлементСписка.Пометка;
		НоваяСтрока.Значение     = ЭлементСписка.Значение;
		НоваяСтрока.Наименование = ЭлементСписка.Представление;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоТекстуЗапроса(Знач ТекстЗапроса, Знач ОтмеченныеЗначения)
	
	Перем ПараметрыЗапроса;
	Перем Отбор;
	
	ПостроительЗапроса = Новый ПостроительЗапроса(ТекстЗапроса);
	ПостроительЗапроса.Параметры.Вставить("ОтмеченныеЗначения", ОтмеченныеЗначения);
	
	// Обработка параметров запроса, если такие были переданы
	Если Параметры.Свойство("ПараметрыЗапроса", ПараметрыЗапроса) Тогда
		
		// Поиск параметров отбора и обработка их
		Если ПараметрыЗапроса.Свойство("Отбор", Отбор) Тогда
			Для Каждого ЭлементОтбора Из Отбор Цикл
				НовыйОтбор = ПостроительЗапроса.Отбор.Добавить(ЭлементОтбора.Поле);
				НовыйОтбор.ВидСравнения  = ЭлементОтбора.ВидСравнения;
				НовыйОтбор.Значение      = ЭлементОтбора.Значение;
				НовыйОтбор.Использование = Истина;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	ПостроительЗапроса.Выполнить();
	
	Выборка = ПостроительЗапроса.Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СписокЭлементов.Добавить(), Выборка);
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеВыбораПользователи(Знач Текст, Знач СписокЭлементов)

	ТаблицаПользователи = Новый ТаблицаЗначений;
	ТаблицаПользователи.Колонки.Добавить("Пользователь", Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	Для Каждого Строка Из СписокЭлементов Цикл
		 ТаблицаПользователи.Добавить().Пользователь = Строка.Значение;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	тзПользователи.Пользователь КАК Пользователь
	|ПОМЕСТИТЬ ВсеПользователи
	|ИЗ
	|	&тзПользователи КАК тзПользователи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 15
	|	Пользователи.Ссылка КАК Ссылка,
	|	Пользователи.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеПользователи КАК ВсеПользователи
	|		ПО Пользователи.Ссылка = ВсеПользователи.Пользователь
	|ГДЕ
	|	Пользователи.Наименование ПОДОБНО ""%"" + &Наименование + ""%""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
	Запрос.УстановитьПараметр("тзПользователи", ТаблицаПользователи);
	Запрос.УстановитьПараметр("Наименование", Текст);
	
	ВыборкаПользователи = Запрос.Выполнить().Выбрать();
	ДанныеВыбора = Новый СписокЗначений;
	Пока ВыборкаПользователи.Следующий() Цикл
		ДанныеВыбора.Добавить(ВыборкаПользователи.Наименование);
	КонецЦикла;
	
	Возврат ДанныеВыбора;
	
КонецФункции

&НаКлиенте
Процедура ШаблонТекстаЗапроса()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаИсточникДанных.Ссылка КАК Значение,
	|	ВЫБОР
	|		КОГДА ТаблицаИсточникДанных.Ссылка В (&ОтмеченныеЗначения)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Пометка,
	|	ТаблицаИсточникДанных.Наименование КАК Наименование
	|ИЗ
	|	ОбъектМетаданных.ТаблицаОбъекта КАК ТаблицаИсточникДанных
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";	
	
КонецПроцедуры

#КонецОбласти
