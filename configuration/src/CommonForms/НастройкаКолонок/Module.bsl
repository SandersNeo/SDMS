///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбъявлениеПеременных

// Признак того что выполняется сброс настроек
&НаКлиенте
Перем СбросНастроек;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Заполнение реквизитов формы из параметров
	ДоступныеНастройки = Параметры.ДоступныеНастройки;
	
	НастройкиПоУмолчанию = Параметры.НастройкиПоУмолчанию;
	
	// Сохранение настроек по умолчанию во временном хранилище
	АдресСтандартныхНастроек = ПоместитьВоВременноеХранилище(НастройкиПоУмолчанию, УникальныйИдентификатор);
	
	ЗаполнитьНастройки(ДоступныеНастройки, НастройкиПоУмолчанию);
	
	Порядок.Сортировать("Порядок");	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для Каждого ПолеСостава Из Состав Цикл
		ИзменитьВидимостьСтрокиПорядка(ПолеСостава.Значение, ПолеСостава.Пометка);
	КонецЦикла;
	
	СбросНастроек = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура СоставПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Состав.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИзменитьВидимостьСтрокиПорядка(ТекущиеДанные.Значение, ТекущиеДанные.Пометка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	
	// Формирование структуры настроек пользователя
	Результат = СформироватьНастройки();
	
	Закрыть(Результат);
		
КонецПроцедуры

&НаКлиенте
Процедура СтандартныеНастройки(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВопросСбросаНастроек", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Установить настройки по умолчанию?", РежимДиалогаВопрос.ДаНет);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОповещения

&НаКлиенте
Процедура ОбработатьВопросСбросаНастроек(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено ИЛИ Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьСтандартныеНастройки();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыФункции

&НаСервере
Процедура ЗаполнитьНастройки(Знач ДоступныеНастройки, Знач НастройкиПоУмолчанию)
	
	Для Каждого ЭлементСтандартногоПорядка Из НастройкиПоУмолчанию.Порядок Цикл
		СтрокаПорядка = Порядок.Добавить();
		СтрокаПорядка.Порядок = ПолучитьПорядковыйНомер(ЭлементСтандартногоПорядка.Значение.Поле, ДоступныеНастройки.Порядок);
		СтрокаПорядка.Представление = ЭлементСтандартногоПорядка.Значение.Представление;
		СтрокаПорядка.Поле = ЭлементСтандартногоПорядка.Значение.Поле;
		СтрокаПорядка.Видимость = Истина;
		СтрокаПорядка.Картинка = БиблиотекаКартинок.ВыборКомпоновкиДанных;
	КонецЦикла;
	
	Для Каждого ПолеСтандартногоСостава Из НастройкиПоУмолчанию.Состав Цикл
		НоваяСтрока = Состав.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ПолеСтандартногоСостава);
		
		НайденныйЭлементСписка = ДоступныеНастройки.Состав.НайтиПоЗначению(НоваяСтрока.Значение);
		Если НайденныйЭлементСписка <> Неопределено Тогда
			НоваяСтрока.Пометка = НайденныйЭлементСписка.Пометка;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВидимостьСтрокиПорядка(Знач Поле, Знач Видимость)
	
	НайденныеСтроки = Порядок.НайтиСтроки(Новый Структура("Поле", Поле));
	Если НайденныеСтроки.Количество() > 0 Тогда
		НайденныеСтроки[0].Видимость = Видимость;
		НайденныеСтроки[0].Картинка = ?(Видимость, БиблиотекаКартинок.ВыборКомпоновкиДанных, 
			БиблиотекаКартинок.ВыборКомпоновкиДанныхНедоступный);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПорядковыйНомер(Знач ИмяПоля, Знач ПользовательскийПорядок)
	
	// Поиск поля из списка по умолчанию среди пользовательской настройки
	Для Каждого ЭлементПорядка Из ПользовательскийПорядок Цикл
		Если ЭлементПорядка.Значение.Поле = ИмяПоля Тогда
			ПорядокЭлемента = ЭлементПорядка.Ключ;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	// Для новых колонок, которые отсутствуют в пользовательских настройках
	// порядок колонки будет отсутствовать. В этом случае будет использован
	// порядок 99, который сдвинет их в конец списка.
	
	Если ПорядокЭлемента = Неопределено Тогда
		ПорядокЭлемента = 99;
	КонецЕсли;
	
	Возврат ПорядокЭлемента;
	
КонецФункции

&НаКлиенте
Функция СформироватьНастройки()
	
	Результат = Новый Структура;
	Результат.Вставить("Состав", Состав);
	Результат.Вставить("Порядок", Новый Соответствие);
	Результат.Вставить("ИзменилсяПорядок", СбросНастроек);
	
	ПорядковыйНомер = 0;
	Для Каждого СтрокаПорядка Из Порядок Цикл
		ПорядковыйНомер = ПорядковыйНомер + 1;
		
		ЗначениеПоляПорядка = Новый Структура("Поле, Представление");
		ЗаполнитьЗначенияСвойств(ЗначениеПоляПорядка, СтрокаПорядка);
		
		Результат.Порядок.Вставить(ПорядковыйНомер, ЗначениеПоляПорядка);
		
		Если ПорядковыйНомер <> СтрокаПорядка.Порядок Тогда
			Результат.ИзменилсяПорядок = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура УстановитьСтандартныеНастройки()
	
	Если ЭтоАдресВременногоХранилища(АдресСтандартныхНастроек) Тогда
		СтандартныеНастройки = ПолучитьИзВременногоХранилища(АдресСтандартныхНастроек);
		
		// Восстановление настройки состава
		Состав = СтандартныеНастройки.Состав;
		
		// Восстановление настроек порядка
		Порядок.Очистить();
		Для Каждого ЭлементПорядка Из СтандартныеНастройки.Порядок Цикл
			СтрокаПорядка = Порядок.Добавить();
			СтрокаПорядка.Порядок = ЭлементПорядка.Ключ;
			СтрокаПорядка.Представление = ЭлементПорядка.Значение.Представление;
			СтрокаПорядка.Поле = ЭлементПорядка.Значение.Поле;
			СтрокаПорядка.Видимость = Состав.НайтиПоЗначению(ЭлементПорядка.Значение.Поле).Пометка;
			СтрокаПорядка.Картинка = ?(СтрокаПорядка.Видимость, БиблиотекаКартинок.ВыборКомпоновкиДанных, 
				БиблиотекаКартинок.ВыборКомпоновкиДанныхНедоступный);
		КонецЦикла;
		
		Порядок.Сортировать("Порядок");
		
		СбросНастроек = Истина;
	Иначе
		ПоказатьПредупреждение(, "Не удалось восстановить настройки по умолчанию.");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
