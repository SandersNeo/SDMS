///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

&НаКлиенте
Перем КонтактнаяИнформацияСотрудников; // Кэш информации о сотруднике и руководителе

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(Параметры.Пользователь) = Тип("УникальныйИдентификатор") Тогда  
	    Пользователь = Справочники.Пользователи.ПолучитьСсылку(Параметры.Пользователь);  
	Иначе  
	    Пользователь = Параметры.Пользователь;  
	КонецЕсли;
	
	КонтактнаяИнформацияСотрудников = ПолучитьКонтактнуюИнформацию(Пользователь);
	Если КонтактнаяИнформацияСотрудников <> Неопределено Тогда
		АдресВременногоХранилища = ПоместитьВоВременноеХранилище(КонтактнаяИнформацияСотрудников, УникальныйИдентификатор);	
		
		ЗаполнитьКонтактнуюИнформацию(ЭтотОбъект, КонтактнаяИнформацияСотрудников);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	КонтактнаяИнформацияСотрудников = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	Если КонтактнаяИнформацияСотрудников = Неопределено Тогда
		Отказ = Истина;
		ПоказатьПредупреждение(, "Контактная информация сотрудника не найдена.", 30, "Контактная информация");
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура КонтактнаяИнформацияРуководителя(Команда)
		 
	ЗаполнитьКонтактнуюИнформацию(ЭтотОбъект, КонтактнаяИнформацияСотрудников, 1);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияСотрудника(Команда)
	
	ЗаполнитьКонтактнуюИнформацию(ЭтотОбъект, КонтактнаяИнформацияСотрудников, 0);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьКонтактнуюИнформацию(Знач Пользователь)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЛичныеДела.Сотрудник КАК Пользователь,
	|	ВЫРАЗИТЬ(ЛичныеДела.Данные КАК Справочник.Филиалы) КАК Филиал,
	|	Филиалы.Руководитель КАК Руководитель,
	|	ЛОЖЬ КАК Уволен,
	|	ВЫБОР
	|		КОГДА Филиалы.Руководитель = ЛичныеДела.Сотрудник
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЯвляетсяРуководителем
	|ПОМЕСТИТЬ ДанныеФилиалаПользователя
	|ИЗ
	|	РегистрСведений.ЛичныеДела.СрезПоследних(
	|			&ТекущаяДата,
	|			Сотрудник = &Пользователь
	|				И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПереведенВДругоеПодразделение)) КАК ЛичныеДела
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК Филиалы
	|		ПО ((ВЫРАЗИТЬ(ЛичныеДела.Данные КАК Справочник.Филиалы)) = Филиалы.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛичныеДела.Сотрудник КАК Пользователь,
	|	ЛичныеДела.Данные КАК Филиал
	|ПОМЕСТИТЬ ФилиалПередУвольнением
	|ИЗ
	|	РегистрСведений.ЛичныеДела.СрезПоследних(
	|			&ТекущаяДата,
	|			Сотрудник = &Пользователь
	|				И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПереведенВДругоеПодразделение)
	|				И НЕ (ВЫРАЗИТЬ(Данные КАК Справочник.Филиалы)) = ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка)) КАК ЛичныеДела
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК УровеньЗаписи,
	|	Пользователи.Ссылка КАК Пользователь,
	|	ЕСТЬNULL(ДанныеФилиалаПользователя.Уволен, ИСТИНА) КАК Уволен,
	|	Пользователи.Наименование КАК ФИО,
	|	ПРЕДСТАВЛЕНИЕ(Пользователи.Должность) КАК Должность,
	|	ЕСТЬNULL(ПРЕДСТАВЛЕНИЕССЫЛКИ(ДанныеФилиалаПользователя.Филиал), ""<не указан>"") КАК Филиал,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеФилиалаПользователя.ЯвляетсяРуководителем, ИСТИНА) = ЛОЖЬ
	|			ТОГДА ДанныеФилиалаПользователя.Руководитель
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Руководитель,
	|	Пользователи.Почта КАК ЭлектроннаяПочта,
	|	ЕСТЬNULL(АдресаПолучателей.Мессенджер, НЕОПРЕДЕЛЕНО) КАК Мессенджер,
	|	ЕСТЬNULL(АдресаПолучателей.Адрес, """") КАК АдресМессенджер,
	|	ЕСТЬNULL(Файлы.Наименование, """") КАК Картинка,
	|	ЕСТЬNULL(Файлы.ПолучатьИзMinio, Ложь) КАК ПолучатьИзMinio
	|ПОМЕСТИТЬ ДанныеПользователя
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеФилиалаПользователя КАК ДанныеФилиалаПользователя
	|		ПО Пользователи.Ссылка = ДанныеФилиалаПользователя.Пользователь
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АдресаПолучателей КАК АдресаПолучателей
	|		ПО Пользователи.Ссылка = АдресаПолучателей.Получатель
	|			И (АдресаПолучателей.Мессенджер = &ОсновнойМессенджер)
	|			И (АдресаПолучателей.Адрес <> """")
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрикрепленныеФайлы КАК ПрикрепленныеФайлы
	|		ПО Пользователи.Ссылка = ПрикрепленныеФайлы.Объект
	|			И (ПрикрепленныеФайлы.Назначение = ЗНАЧЕНИЕ(Перечисление.НазначенияФайлов.ОбрезанныйАватарПользователя))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК Файлы
	|		ПО (Файлы.Ссылка = ПрикрепленныеФайлы.Файл)
	|ГДЕ
	|	Пользователи.Ссылка = &Пользователь
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	Пользователи.Ссылка,
	|	ЛОЖЬ,
	|	Пользователи.Наименование,
	|	ПРЕДСТАВЛЕНИЕ(Пользователи.Должность),
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДанныеФилиалаПользователя.Филиал),
	|	НЕОПРЕДЕЛЕНО,
	|	Пользователи.Почта,
	|	ЕСТЬNULL(АдресаПолучателей.Мессенджер, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(АдресаПолучателей.Адрес, """"),
	|	ЕСТЬNULL(Файлы.Наименование, """"),
	|	ЕСТЬNULL(Файлы.ПолучатьИзMinio, Ложь)
	|ИЗ
	|	ДанныеФилиалаПользователя КАК ДанныеФилиалаПользователя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ДанныеФилиалаПользователя.Руководитель = Пользователи.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АдресаПолучателей КАК АдресаПолучателей
	|		ПО (Пользователи.Ссылка = АдресаПолучателей.Получатель)
	|			И (АдресаПолучателей.Мессенджер = &ОсновнойМессенджер)
	|			И (АдресаПолучателей.Адрес <> """")
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрикрепленныеФайлы КАК ПрикрепленныеФайлы
	|		ПО (Пользователи.Ссылка = ПрикрепленныеФайлы.Объект)
	|			И (ПрикрепленныеФайлы.Назначение = ЗНАЧЕНИЕ(Перечисление.НазначенияФайлов.ОбрезанныйАватарПользователя))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК Файлы
	|		ПО (Файлы.Ссылка = ПрикрепленныеФайлы.Файл)
	|ГДЕ
	|	НЕ ДанныеФилиалаПользователя.ЯвляетсяРуководителем
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПользователя.УровеньЗаписи КАК УровеньЗаписи,
	|	ДанныеПользователя.Пользователь КАК Пользователь,
	|	ДанныеПользователя.ФИО КАК ФИО,
	|	ДанныеПользователя.Должность КАК Должность,
	|	ДанныеПользователя.Филиал КАК Филиал,
	|	ДанныеПользователя.Уволен КАК Уволен,
	|	ЕСТЬNULL(ПРЕДСТАВЛЕНИЕССЫЛКИ(ФилиалПередУвольнением.Филиал), """") КАК ПрошлыйФилиал,
	|	ЕСТЬNULL(МестоРаботыРегл.Данные, """") КАК Город,
	|	ДанныеПользователя.Руководитель КАК Руководитель,
	|	ДанныеПользователя.ЭлектроннаяПочта КАК ЭлектроннаяПочта,
	|	ДанныеПользователя.Мессенджер КАК Мессенджер,
	|	ДанныеПользователя.АдресМессенджер КАК АдресМессенджер,
	|	ДанныеПользователя.Картинка КАК Картинка,
	|	ДанныеПользователя.ПолучатьИзMinio КАК ПолучатьИзMinio
	|ИЗ
	|	ДанныеПользователя КАК ДанныеПользователя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЛичныеДела.СрезПоследних(
	|				&ТекущаяДата,
	|				Сотрудник В
	|						(ВЫБРАТЬ
	|							ДанныеПользователя.Пользователь
	|						ИЗ
	|							ДанныеПользователя)
	|					И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.МестоРаботыРегл)) КАК МестоРаботыРегл
	|		ПО (МестоРаботыРегл.Сотрудник = ДанныеПользователя.Пользователь)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ФилиалПередУвольнением КАК ФилиалПередУвольнением
	|		ПО (ФилиалПередУвольнением.Пользователь = ДанныеПользователя.Пользователь)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеПользователя.УровеньЗаписи";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("ОсновнойМессенджер", Константы.ОсновнойМессенджер.Получить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		КонтактнаяИнформацияСотрудников = Новый Структура;
		
		ВнешнееХранилище = "";
		НастройкиПодключения = ИнтеграцияДополнительныхПодсистемПовтИсп.ПолучитьНастройкиПодключенияКMinio();
		Если НастройкиПодключения <> Неопределено Тогда
			Каталог = Константы.КаталогХраненияАватаровПользователей.Получить();
			ВнешнееХранилище = СтрШаблон("https://%1:%2/%3/", НастройкиПодключения.Сервер, НастройкиПодключения.Порт, Каталог);
		КонецЕсли;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			КлючСтруктуры = ?(Выборка.УровеньЗаписи = 0, "Сотрудник", "Руководитель");
			
			Если Выборка.Уволен Тогда
				Филиал = СтрШаблон("%1 (%2)",  Выборка.ПрошлыйФилиал, "Уволен");
			ИначеЕсли НЕ ПустаяСтрока(Выборка.Город) Тогда
				Филиал = СтрШаблон("%1 (%2)", Выборка.Филиал, Выборка.Город);
			Иначе     
				Филиал = Выборка.Филиал;
			КонецЕсли;
				
			КонтактнаяИнформация = Новый Структура;
			КонтактнаяИнформация.Вставить("ФИО", Выборка.ФИО);
			КонтактнаяИнформация.Вставить("Должность", Выборка.Должность); 				
			КонтактнаяИнформация.Вставить("Филиал", Филиал);
			КонтактнаяИнформация.Вставить("ЭлектроннаяПочта", Выборка.ЭлектроннаяПочта);
						
			Если ЗначениеЗаполнено(Выборка.Картинка) Тогда  
				ОбрезанныйАватар = Выборка.Картинка;
				Если Выборка.ПолучатьИзMinio Тогда
					Картинка = ВнешнееХранилище + Выборка.Картинка;
					КонтактнаяИнформация.Вставить("Аватарка", Картинка);
				Иначе
					ИД = Выборка.Пользователь.УникальныйИдентификатор();
					АдресХраненияАватаров = WebОкружениеВызовСервера.АдресХраненияАватаров(); 
					Картинка = АдресХраненияАватаров + "/" + ИД + "/" + Выборка.Картинка;
					КонтактнаяИнформация.Вставить("Аватарка", Картинка);
				КонецЕсли;
			Иначе
				КонтактнаяИнформация.Вставить("Аватарка", Неопределено);
			КонецЕсли;
			
			// Если у пользователя заполнено имя в Мессенже
			Если НЕ ПустаяСтрока(Выборка.АдресМессенджер) Тогда
				КонтактнаяИнформация.Вставить("Мессенджер", Выборка.Мессенджер);
				КонтактнаяИнформация.Вставить("АдресМессенджер", Выборка.АдресМессенджер);
			КонецЕсли;
			
			// Если на первом уровне присутствует руководитель, необходимо установить реквизит
			Если (Выборка.УровеньЗаписи = 0) И (Выборка.Руководитель <> Неопределено) Тогда
				Команды["КонтактнаяИнформацияРуководителя"].Заголовок = Выборка.Руководитель; 
			КонецЕсли;
			
			ЗаполнитьОтпуска(КонтактнаяИнформация, Выборка.Пользователь);				
				
			КонтактнаяИнформацияСотрудников.Вставить(КлючСтруктуры, КонтактнаяИнформация);
		КонецЦикла;		
			
		ЕстьРуководитель = КонтактнаяИнформацияСотрудников.Свойство("Руководитель");
	Иначе
		КонтактнаяИнформацияСотрудников = Неопределено;
	КонецЕсли;
	
	Возврат КонтактнаяИнформацияСотрудников;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьКонтактнуюИнформацию(Форма, Знач КонтактнаяИнформацияСотрудников, Знач РежимОтображения = 0)
	
	ДанныеСотрудника = Форма.ДанныеСотрудника;
	ДанныеСотрудника.Очистить();
	
	КлючСтруктуры = ?(РежимОтображения = 0, "Сотрудник", "Руководитель");
	КонтактнаяИнформация = КонтактнаяИнформацияСотрудников[КлючСтруктуры];
	
	НоваяСтрока = ДанныеСотрудника.Добавить();
	НоваяСтрока.Свойство = "ФИО:"; 
	НоваяСтрока.Значение = КонтактнаяИнформация.ФИО;
	
	НоваяСтрока = ДанныеСотрудника.Добавить();
	НоваяСтрока.Свойство = "Должность:"; 
	НоваяСтрока.Значение = КонтактнаяИнформация.Должность;
	
	НоваяСтрока = ДанныеСотрудника.Добавить();
	НоваяСтрока.Свойство = "Филиал:"; 
	НоваяСтрока.Значение = КонтактнаяИнформация.Филиал;
	
	НоваяСтрока = ДанныеСотрудника.Добавить();
	НоваяСтрока.Свойство = "Email:"; 
	НоваяСтрока.Значение = КонтактнаяИнформация.ЭлектроннаяПочта;
	
	Если КонтактнаяИнформация.Свойство("Мессенджер") Тогда 
		НоваяСтрока = ДанныеСотрудника.Добавить();
		НоваяСтрока.Свойство = КонтактнаяИнформация.Мессенджер; 
		НоваяСтрока.Значение = КонтактнаяИнформация.АдресМессенджер;
	КонецЕсли;
	
	Если КонтактнаяИнформация.Свойство("Отпуск") Тогда
		НоваяСтрока = ДанныеСотрудника.Добавить();
		НоваяСтрока.Свойство = "Отпуск:"; 
		НоваяСтрока.Значение = КонтактнаяИнформация.Отпуск;
	КонецЕсли;
	
	ОткрытСотрудник = (РежимОтображения = 0);
	Форма.Заголовок = "Информация о " + ?(ОткрытСотрудник, "сотруднике", "руководителе");
	
	Форма.Элементы.ГруппаРуководительСотрудника.Видимость = (ОткрытСотрудник И Форма.ЕстьРуководитель);
	Форма.Элементы.ГруппаСотрудник.Видимость = (НЕ ОткрытСотрудник И Форма.ЕстьРуководитель);
	
	ЗаполнитьАватарПользователя(Форма, КонтактнаяИнформация.Аватарка);
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьОтпуска(КонтактнаяИнформацияСотрудников, Знач Пользователь) 
	
	Запрос = Новый Запрос; 
	
	#Область ТекстЗапроса
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТабельУчетаРабочегоВремени.Дата КАК ДатаС,
	|	ДОБАВИТЬКДАТЕ(ТабельУчетаРабочегоВремени.Дата, ДЕНЬ, 1) КАК ДатаПо
	|ПОМЕСТИТЬ Даты
	|ИЗ
	|	РегистрСведений.ТабельУчетаРабочегоВремени КАК ТабельУчетаРабочегоВремени
	|ГДЕ
	|	ТабельУчетаРабочегоВремени.Сотрудник = &Сотрудник
	|	И ТабельУчетаРабочегоВремени.ВидВремени В(&Отпуска)
	|	И ТабельУчетаРабочегоВремени.Дата > ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Даты.ДатаС КАК ДатаС,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПо
	|ПОМЕСТИТЬ НегруппированныеДаты
	|ИЗ
	|	Даты КАК Даты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Даты КАК Даты1
	|		ПО Даты.ДатаС = Даты1.ДатаПо
	|ГДЕ
	|	Даты1.ДатаС ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	Даты.ДатаС
	|ИЗ
	|	Даты КАК Даты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Даты КАК Даты1
	|		ПО Даты.ДатаПо = Даты1.ДатаС
	|ГДЕ
	|	Даты1.ДатаС ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	НегруппированныеДаты.ДатаС КАК ДатаС,
	|	МИНИМУМ(НегруппированныеДаты1.ДатаПо) КАК ДатаПо
	|ИЗ
	|	НегруппированныеДаты КАК НегруппированныеДаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НегруппированныеДаты КАК НегруппированныеДаты1
	|		ПО НегруппированныеДаты.ДатаС <= НегруппированныеДаты1.ДатаПо
	|			И (НЕ НегруппированныеДаты.ДатаС = ДАТАВРЕМЯ(1, 1, 1))
	|
	|СГРУППИРОВАТЬ ПО
	|	НегруппированныеДаты.ДатаС
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(НегруппированныеДаты1.ДатаПо) >= &Период";
	#КонецОбласти
	
	Отпуска = УчетТрудозатратВызовСервера.ПолучитьВидыОтпусковСотрудника();
		
	Запрос.УстановитьПараметр("Период", НачалоДня(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("Сотрудник", Пользователь);
	Запрос.УстановитьПараметр("Отпуска", Отпуска);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		Формат = "ДФ=dd.MM.yyyy";
		Отпуск = "С " + Формат(Выборка.ДатаС, Формат) + " по " + Формат(Выборка.ДатаПо, Формат); 
		КонтактнаяИнформацияСотрудников.Вставить("Отпуск", Отпуск);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьАватарПользователя(Форма, ПутьККартинке)
	
    Текст =	
	"<!DOCTYPE html>
	|<html lang=""ru"">
	|<head>
	|<meta charset=""utf-8"" />
	|<meta name=""viewport"" content=""width=device-width"" />
	|<style>
	|	body {
	|     position: static;
	|     height: 100vh;                 
	|     width: 100vw;
	|	  margin: 0;
	|	}
	|    img {
	|		height: 100%%;
	|		width: auto;
	|		max-height: 100%%;
	|		max-width: 100%%;
	|		object-fit: contain;
	|    }
	|</style>
	|</head>
	|<body>
	|<img src=""%1"">
	|</body>
	|</html>"; 
	
	Если НЕ ЗначениеЗаполнено(ПутьККартинке) Тогда
		ПутьККартинке = СтрШаблон("%1/assets/img/noname.png", ОбщегоНазначенияВызовСервера.ПолучитьКонстанту("КорневойURL"));
	КонецЕсли;
	
	Форма.АватарПользователя = СтрШаблон(Текст, ПутьККартинке);
	
КонецПроцедуры

#КонецОбласти
