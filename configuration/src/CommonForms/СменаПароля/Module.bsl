///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВернутьПарольБезУстановки = Параметры.ВернутьПарольБезУстановки;
	ПриВходеВПрограмму        = Параметры.ПриВходеВПрограмму;
	
	Если ВернутьПарольБезУстановки ИЛИ ЗначениеЗаполнено(Параметры.Пользователь) Тогда
		Пользователь = Параметры.Пользователь;
	Иначе
		Пользователь = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	Если НЕ ВернутьПарольБезУстановки Тогда
		ДополнительныеПараметры.Вставить("ПроверятьДействительностьПользователя");
		ДополнительныеПараметры.Вставить("ПроверятьНаличиеПользователяИБ");
	КонецЕсли;
	
	Если НЕ ПользователиВызовСервера.ВозможноИзменитьПароль(Пользователь, ДополнительныеПараметры) Тогда
		ТекстОшибки = ДополнительныеПараметры.ТекстОшибки;
		Возврат;
	КонецЕсли;
	ЭтоТекущийПользовательИБ = ДополнительныеПараметры.ЭтоТекущийПользовательИБ;
	
	Если ПриВходеВПрограмму Тогда
		
		Если ДополнительныеПараметры.ПарольУстановлен Тогда
			КлючНазначенияФормы = "СменаПароляПриВходеВПрограмму";
		Иначе
			КлючНазначенияФормы = "УстановкаПароляПриВходеВПрограмму";
		КонецЕсли;
		
	Иначе
		Если НЕ ДополнительныеПараметры.ЭтоТекущийПользовательИБ ИЛИ НЕ ДополнительныеПараметры.ПарольУстановлен Тогда
			КлючНазначенияФормы = "УстановкаПароля";
		КонецЕсли;
		
		Элементы.ЗакрытьОкно.Заголовок = "Отмена";
	КонецЕсли;	
	
	Если НЕ ДополнительныеПараметры.ЭтоТекущийПользовательИБ ИЛИ НЕ ДополнительныеПараметры.ПарольУстановлен Тогда
		Элементы.СтарыйПароль.Видимость = Ложь;
		АвтоЗаголовок = Ложь;
		Заголовок = НСтр("ru = 'Установка пароля'");
	Иначе
		Если Параметры.СтарыйПароль <> Неопределено Тогда
			ТекущийЭлемент = Элементы.НовыйПароль;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		Отказ = Истина;
		ПодключитьОбработчикОжидания("ПоказатьТекстОшибкиИСообщитьОЗакрытии", 0.1, Истина);
	Иначе
		ПроверитьПодтверждениеПароля();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПарольИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ПроверитьПодтверждениеПароля(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	
	ПроверитьПодтверждениеПароля();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ЗакрытьОкно(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьНовыйПароль(Команда)
	
	ПоказыватьНовыйПароль = НЕ ПоказыватьНовыйПароль;
	
	ПоказыватьНовыйПарольПриИзмененииНаСервере();
	ПроверитьПодтверждениеПароля();	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПароль(Команда)
	
	Если НЕ ПоказыватьНовыйПароль И НовыйПароль <> Подтверждение Тогда
		ТекущийЭлемент = Элементы.Подтверждение;
		Элементы.Подтверждение.ВыделенныйТекст = Элементы.Подтверждение.ТекстРедактирования;
		ПоказатьПредупреждение(, "Новый пароль и его подтверждение не совпадают.");
		Возврат;
	КонецЕсли;
	
	УстановитьПарольЗавершение();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПоказатьТекстОшибкиИСообщитьОЗакрытии()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоказатьТекстОшибкиИСообщитьОЗакрытииЗавершение", ЭтотОбъект);
	ПоказатьПредупреждение(ОписаниеОповещения, ТекстОшибки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьТекстОшибкиИСообщитьОЗакрытииЗавершение(Контекст) Экспорт
	
	Если ЭтотОбъект.ОписаниеОповещенияОЗакрытии <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ЭтотОбъект.ОписаниеОповещенияОЗакрытии);
		ЭтотОбъект.ОписаниеОповещенияОЗакрытии = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказыватьНовыйПарольПриИзмененииНаСервере()
	
	Элементы.ПоказыватьНовыйПароль.Пометка = ПоказыватьНовыйПароль;
	
	Если ПоказыватьНовыйПароль Тогда
		Элементы.ПоказыватьНовыйПароль.Картинка = БиблиотекаКартинок.СкрытьПароль;
	Иначе
		Элементы.ПоказыватьНовыйПароль.Картинка = БиблиотекаКартинок.ПоказатьПароль;
	КонецЕсли;
	
	Элементы.Подтверждение.Доступность = НЕ ПоказыватьНовыйПароль;
	
	Элементы.НовыйПароль.Видимость  = НЕ ПоказыватьНовыйПароль;
	Элементы.НовыйПароль2.Видимость = ПоказыватьНовыйПароль;
	
	Если ПоказыватьНовыйПароль Тогда
		Подтверждение = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодтверждениеПароля(ПолеПароля = Неопределено)
	
	Если ПоказыватьНовыйПароль Тогда
		ПарольСовпадает = Истина;
	
	ИначеЕсли ПолеПароля = Элементы.НовыйПароль ИЛИ ПолеПароля = Элементы.НовыйПароль2 Тогда
		ПарольСовпадает = (ПолеПароля.ТекстРедактирования = Подтверждение);
		
	ИначеЕсли ПолеПароля = Элементы.Подтверждение Тогда
		ПарольСовпадает = (НовыйПароль = ПолеПароля.ТекстРедактирования);
	Иначе
		ПарольСовпадает = (НовыйПароль = Подтверждение);
	КонецЕсли;
	
	Элементы.ГруппаОшибки.ТекущаяСтраница = ?(ПарольСовпадает, Элементы.СтраницаПустая, Элементы.СтраницаОшибка);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПарольЗавершение()
	
	ТекстОшибки = УстановитьПарольНаСервере();
	Если ПустаяСтрока(ТекстОшибки) Тогда
		Результат = Новый Структура;
		Если ВернутьПарольБезУстановки Тогда
			Результат.Вставить("СтарыйПароль", ?(Элементы.СтарыйПароль.Видимость, СтарыйПароль, Неопределено));
			Результат.Вставить("НовыйПароль", НовыйПароль);
		Иначе
			Результат.Вставить("УстановленПустойПароль", НовыйПароль = "");
			
			ПоказатьОповещениеПользователя("Изменение пароля", , 
				"Пароль успешно изменен.", БиблиотекаКартинок.Информация32);
		КонецЕсли;
		Закрыть(Результат);
	Иначе
		ПоказатьПредупреждение(, ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция УстановитьПарольНаСервере()
	
	ТекстОшибки = "";
	
	УстановитьПривилегированныйРежим(Истина);
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Пользователь.ИдентификаторПользователяИБ);
	Если ПользовательИБ <> Неопределено Тогда
		
		Если НЕ ПользовательИБ.ЗапрещеноИзменятьПароль Тогда
			
			Если Элементы.СтарыйПароль.Видимость Тогда
				ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.SHA1);
				ХешированиеДанных.Добавить(СтарыйПароль);
				
				СохраняемоеЗначениеПароля = Base64Строка(ХешированиеДанных.ХешСумма);
				
				ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.SHA1);
				ХешированиеДанных.Добавить(ВРег(СтарыйПароль));
				
				СохраняемоеЗначениеПароля = СохраняемоеЗначениеПароля + "," + Base64Строка(ХешированиеДанных.ХешСумма);
				
				Если ПользовательИБ.СохраняемоеЗначениеПароля <> СохраняемоеЗначениеПароля Тогда
					ТекстОшибки = "Старый пароль указан неверно.";
				КонецЕсли;
				
			КонецЕсли;
			
			Если ПустаяСтрока(ТекстОшибки) И НЕ ВернутьПарольБезУстановки Тогда
				ПользовательИБ.Пароль = НовыйПароль; 
				
				БлокировкаДанных = Новый БлокировкаДанных;
				ЭлементБлокировки = БлокировкаДанных.Добавить("Справочник.Пользователи");
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Пользователь);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;				
				
				НачатьТранзакцию();

				Попытка
					БлокировкаДанных.Заблокировать();					
					ПользовательИБ.Записать();
					ЗафиксироватьТранзакцию();
				Исключение
					ОтменитьТранзакцию();
					ТекстОшибки = СтрШаблон("Ошибка при сохранении пароля: %1", ОписаниеОшибки());
				КонецПопытки;
				
			КонецЕсли;			
			
		Иначе
			ТекстОшибки = "Пользователю запрещено изменять пароль.";
		КонецЕсли;		
		
	Иначе
		ТекстОшибки = "Пользователь информационной базы не найден.";
	КонецЕсли;
	
	Возврат ТекстОшибки;
	
КонецФункции

#КонецОбласти
