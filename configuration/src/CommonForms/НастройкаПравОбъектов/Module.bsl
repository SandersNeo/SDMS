///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обрабатываем переданные параметры.
	ПолноеИмяФормы = Параметры.ПолноеИмяФормы;
	СсылкаНаОбъект = Параметры.СсылкаНаОбъект;

	// Безопасность SDMS. Стандартный блок вызова процедур.
	Безопасность.НастроитьФормуПослеОткрытия(ЭтотОбъект);
	
	// Процедура безопасности сформировала список прав, которые доступны
	// текущему пользователю для редактирования. Теперь заполним таблицу прав.	
	ЗаполнитьТаблицуПрав(ПолноеИмяФормы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПравПриАктивизацииСтроки(Элемент)
	
	// Устанавливаем отбор по значению строки в таблице пользователей.
	ТекущиеДанные = Элементы.СписокПрав.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыбранноеПраво = ТекущиеДанные.Значение;
	ПараметрыОтбора = Новый Структура("Право", ВыбранноеПраво);
	Элементы.ТаблицаНастройкиПравПользователей.ОтборСтрок = Новый ФиксированнаяСтруктура(ПараметрыОтбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНастройкиПравПользователейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаНастройкиПравПользователей.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено
		ИЛИ ТипЗнч(ТекущиеДанные.Пользователь) <> Тип("СправочникСсылка.ГруппыДоступа") Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура("Ключ", ТекущиеДанные.Пользователь);	
	ОткрытьФорму("Справочник.ГруппыДоступа.Форма.ФормаЭлемента", ПараметрыОткрытия, ЭтотОбъект, ЭтотОбъект.УникальныйИдентификатор,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНастройкиПравПользователейПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаНастройкиПравПользователей.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.КнопкаУдалить.Доступность = (НЕ ТекущиеДанные.СлужебнаяЗапись);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьПользователюПраво(Команда)
	
	ТекущиеДанные = Элементы.СписокПрав.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("Право", ТекущиеДанные.Значение);
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершениеВыбораПользователя", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора",, ЭтотОбъект, ЭтотОбъект.УникальныйИдентификатор,,, ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	ПроизошлаОшибка = СохранитьИзмененияНаСервере();
	Если НЕ ПроизошлаОшибка Тогда
		ПоказатьПредупреждение(, "Изменения успешно сохранены.");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗавершениеВыбораПользователя(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеДанныеПользователя = ПолучитьДополнительныеДанные(Результат, ТаблицаНастройкиПравПользователей, ДополнительныеПараметры.Право);
	
	СтрокаПравоПользователя = ТаблицаНастройкиПравПользователей.Добавить();
	СтрокаПравоПользователя.Право = ДополнительныеПараметры.Право; 
	СтрокаПравоПользователя.Пользователь = Результат;
	СтрокаПравоПользователя.ПредставлениеПользователь = ДополнительныеДанныеПользователя.ФИОПользователя;
	// Не совсем правильно устанавливать значение, но пока оставим так.
	// В дальнейшем можно рассчитать текущее значение права и установить противоположное.
	СтрокаПравоПользователя.Разрешение = ДополнительныеДанныеПользователя.РазрешениеПользователя
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПрав(Знач ПолноеИмяФормы)
	
	ТаблицаБезопасностей = Безопасность.ПолучитьТаблицуБезопасностейДляКонкретногоОбъекта(ПолноеИмяФормы, СсылкаНаОбъект, СписокПрав);		
	ТаблицаНастройкиПравПользователей.Очистить();
	
	Для Каждого ТекущаяБезопасность Из ТаблицаБезопасностей Цикл
		// Заполнение общей таблицы.
		СтрокаТаблицы = ТаблицаНастройкиПравПользователей.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ТекущаяБезопасность);
		СтрокаЗаполненаПользователем = (ТипЗнч(ТекущаяБезопасность.Пользователь) = Тип("СправочникСсылка.Пользователи") И
			ЗначениеЗаполнено(ТекущаяБезопасность.Пользователь));
		СтрокаТаблицы.КартинкаСтроки = ?(НЕ СтрокаЗаполненаПользователем, БиблиотекаКартинок.ГруппаПользователей, Неопределено);
		
		// Заполнение дерева списка прав.
		// Можно будет картинкой разграничить права, относящиеся к объекту и к конкретной форме..
		//...
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДополнительныеДанные(Знач ПользовательСсылка, Знач ТаблицаНастройкиПравПользователей, Знач Право)
	
	Результат = Новый Структура;
	Результат.Вставить("ФИОПользователя", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПользовательСсылка, "ФИО"));
	Результат.Вставить("РазрешениеПользователя", ПолучитьРазрешениеДляПользователя(ТаблицаНастройкиПравПользователей, Право));
	
	Возврат Результат;
		
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРазрешениеДляПользователя(Знач ТаблицаНастройкиПравПользователей, Знач Право) 
	
	Разрешение = Перечисления.ВидыПравДоступа.Разрешено;
	
	ПараметрыОтбора = Новый Структура("Право, ПредставлениеПользователь", Право, "<Все пользователи>"); 
	МассивСтрок = ТаблицаНастройкиПравПользователей.НайтиСтроки(ПараметрыОтбора);
	Если МассивСтрок.Количество() <> 0 Тогда
		// Разрешение для всех пользователей.
		ТекущееРазрешение = МассивСтрок[0].Разрешение;
		
		// Берем противоположное значение.
		ПравоРазрешеноВсем = (ТекущееРазрешение = Перечисления.ВидыПравДоступа.Разрешено);
		Разрешение = ?(ПравоРазрешеноВсем, Перечисления.ВидыПравДоступа.Запрещено, Перечисления.ВидыПравДоступа.Разрешено);
	КонецЕсли;
	
	Возврат Разрешение;
			
КонецФункции

&НаСервере
Функция СохранитьИзмененияНаСервере()
	
	ПроизошлаОшибка = Ложь;
	
	// Очищаем все записи по текущему объекту.
	НаборЗаписей = РегистрыСведений.НастройкиПравОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(СсылкаНаОбъект);
	
	Попытка
		НаборЗаписей.Записать();
		
		// Добавляем в регистр все записи, кроме служебных.
		Для Каждого СтрокаТаблицы Из ТаблицаНастройкиПравПользователей Цикл
			Если СтрокаТаблицы.СлужебнаяЗапись Тогда
				Продолжить;
			КонецЕсли;
			
			РегистрыСведений.НастройкиПравОбъектов.Добавить(СсылкаНаОбъект, СтрокаТаблицы.Пользователь, СтрокаТаблицы.Право, СтрокаТаблицы.Разрешение);
		КонецЦикла;
	Исключение
		ПроизошлаОшибка = Истина;
		ТекстСообщения = СтрШаблон("При сохранении изменений произошла ошибка:%1", ОписаниеОшибки());
		ЗаписьЖурналаРегистрации("РегистрСведений.НастройкиПравОбъектов", УровеньЖурналаРегистрации.Ошибка,,, ТекстСообщения);
	КонецПопытки;
	
	Возврат ПроизошлаОшибка;
	
КонецФункции

#КонецОбласти
