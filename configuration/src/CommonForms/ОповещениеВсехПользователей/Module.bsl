///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Пользователи.Ссылка КАК Ссылка,
	|	Пользователи.Наименование КАК Наименование,
	|	ИСТИНА КАК Отправить
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ПометкаУдаления = ЛОЖЬ
	|	И Пользователи.Недействителен = ЛОЖЬ
	|	И Пользователи.Служебный = ЛОЖЬ
	|	И Пользователи.Почта <> """"";	
	
	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(), "ТаблицаПользователей");	

КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправкаПисем(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаРезультатаВопроса", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, "Отправить письмо?", РежимДиалогаВопрос.ДаНет);
		
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	
	УстановитьПометки(Истина);
		
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	УстановитьПометки(Ложь);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура УстановитьПометки(Знач Пометка)
	
	Для Каждого СтрокаТаблицы Из ТаблицаПользователей Цикл
		СтрокаТаблицы.Отправить = Пометка;
	КонецЦикла;
	
КонецПроцедуры



#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ОтправитьПисьмоПользователям(Данные)
	
	ИмяСобытия = "Отправка электронных писем";
	УдачнаяОтправка = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пользователи.Почта КАК Почта
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.Ссылка В (&МассивПользователей)";
	
	Запрос.УстановитьПараметр("МассивПользователей", Данные.МассивПользователей);
	
	РезультатЗапроса = Запрос.Выполнить();
	СписокАдресовПользователей = РезультатЗапроса.Выбрать();
	
	Если СписокАдресовПользователей.Количество() > 0 Тогда		
		
		// Получим профиль почты
		ДанныеПочты = Справочники.УчетныеЗаписиЭлектроннойПочты.СвойстваСлужебногоЯщикаДляОтправкиПисем();
		
		Если НЕ ДанныеПочты.ПрофильЗаполнен Тогда
			СообщениеПользователю = "Почта отправителя не найдена";
			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , ,
			"В справочнике ""Учетные записи электронной почты"" не найдена учетная запись для отправки электронной почты.");
			Возврат СообщениеПользователю;
		КонецЕсли;
		
		// Пробуем подключиться к почтовому серверу
		ИнтернетПочта = Новый ИнтернетПочта;
		
		ШаблонЭлектронногоПисьма = РегистрыСведений.ОчередьОтправкиЭлектронныхПисем.ПолучитьМакет("ЭлектронноеПисьмо").ПолучитьТекст();
		
		Попытка
			ИмяФайлаКартинкиЗаголокаПисьма = ПолучитьИмяВременногоФайла("gif");
			БиблиотекаКартинок.КартинкаЗаголовкаЭлектронногоПисьма.Записать(ИмяФайлаКартинкиЗаголокаПисьма);
		Исключение
			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , 
			СтрШаблон("Не удалось сохранить картинку заголовка письма по причине: %1.", ОписаниеОшибки()));
			ИмяФайлаКартинкиЗаголокаПисьма = "";
		КонецПопытки;
		
		Попытка
			ИмяФайлаКартинкаИнформацииПисьма = ПолучитьИмяВременногоФайла("png");
			БиблиотекаКартинок.КартинкаИнформацииЭлектронногоПисьма.Записать(ИмяФайлаКартинкаИнформацииПисьма);
		Исключение
			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , 
			СтрШаблон("Не удалось сохранить картинку информации письма по причине: %1.", ОписаниеОшибки()));
			ИмяФайлаКартинкаИнформацииПисьма = "";
		КонецПопытки;
		
		Если НЕ ПустаяСтрока(ИмяФайлаКартинкиЗаголокаПисьма) Тогда
			ТекстСообщения = СтрЗаменить(ШаблонЭлектронногоПисьма, "%IconImage%", ИмяФайлаКартинкиЗаголокаПисьма);
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%MessageText%", Данные.ТекстСообщения);
		
		Если НЕ ПустаяСтрока(ИмяФайлаКартинкаИнформацииПисьма) Тогда
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ArticleImage%", ИмяФайлаКартинкаИнформацииПисьма);
		КонецЕсли;
		
		ТекущийГод = Формат(ТекущаяДатаСеанса(), "ДФ=yyyy");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%CurrentYear%", ТекущийГод);
		
		АдресПубликации = WebОкружениеВызовСервера.АдресПубликацииИнформационнойБазы();
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%publicationURL%", АдресПубликации);
		
		// Создаем почтовое сообщение
		Сообщение = Новый ИнтернетПочтовоеСообщение;
		Сообщение.ИмяОтправителя = ДанныеПочты.Отправитель.Имя;
		Сообщение.Отправитель    = ДанныеПочты.Отправитель.Адрес;
		Сообщение.Тема           = Данные.Тема;
		Сообщение.Тексты.Добавить(ТекстСообщения, ТипТекстаПочтовогоСообщения.HTML);	
		Пока СписокАдресовПользователей.Следующий() Цикл
			Сообщение.Получатели.Добавить(СписокАдресовПользователей.Почта);
		КонецЦикла;	
		Сообщение.ОбработатьТексты();	
		
		Попытка                                             
			ИнтернетПочта.Подключиться(ДанныеПочты.ПочтовыйПрофиль);
			ИнтернетПочта.Послать(Сообщение);
			УдачнаяОтправка = Истина;
			Если СписокАдресовПользователей.Количество() = 1 Тогда
				Возврат "Сообщение отправлено.";
			Иначе
				Возврат "Сообщения отправлены.";
			КонецЕсли;	
		Исключение
			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , 
			СтрШаблон("Неудалось отправить письмо пользователям по  причине: %1.", ОписаниеОшибки()));
			СообщениеПользователю = "Неудалось отправить письмо пользователям по  причине: "+ Строка(ОписаниеОшибки());
		КонецПопытки;
		
			ИнтернетПочта.Отключиться();
			
	КонецЕсли;
		
	Если УдачнаяОтправка = Истина Тогда
		Если СписокАдресовПользователей.Количество() = 1 Тогда
			СообщениеПользователю = "Сообщение отправлено.";
		Иначе
			СообщениеПользователю = "Сообщения отправлены.";
		КонецЕсли;
	ИначеЕсли СообщениеПользователю = НЕОПРЕДЕЛЕНО Тогда
		СообщениеПользователю = "Почта отправителя не найдена";
	КонецЕсли;
	
	Возврат СообщениеПользователю;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаРезультатаВопроса(РезультатВопроса, ДополнительныеДанные) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		МассивПользователей = Новый Массив;
		Для Каждого СтрокаКоллекции Из ТаблицаПользователей Цикл
			Если СтрокаКоллекции.Отправить = Истина Тогда
				МассивПользователей.Добавить(СтрокаКоллекции.Ссылка);
			КонецЕсли;
		КонецЦикла;
		
		Данные = Новый Структура;
		Данные.Вставить("МассивПользователей", МассивПользователей);
		Данные.Вставить("Тема", ТемаПисьма);
		Данные.Вставить("ТекстСообщения", ТекстСообщения.ПолучитьТекст());
		
		РезультатОтправки = ОтправитьПисьмоПользователям(Данные); 
		ПоказатьПредупреждение(, РезультатОтправки);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
