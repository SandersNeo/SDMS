///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

// Признак  необходимости сохранения настроек данных формы
&НаКлиенте
Перем СохранитьНастройки;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Текстовое представление объекта 
	ПредставлениеСсылки = Строка(Параметры.Объект);
	
	// Чтение настроек формы
	НастройкиФормы = ИнициализироватьНастройкиФормы();
	
	ВариантПредставленияСсылки = НастройкиФормы.ВариантПредставленияСсылки;
	
	//// Если переданный объект является задачей, заранее подготавливается короткая
	//// ссылка для хранилища 1С.
	Если ТипЗнч(Параметры.Объект) = Тип("ДокументСсылка.Задача") Тогда
		Элементы.ВариантПредставленияСсылки.СписокВыбора.Добавить(3, "1С-публикация");
	//	ТекстКороткойСсылки = Документы.Задача.СсылкаДляПубликации1С(Параметры.Объект);
	//ИначеЕсли ВариантПредставленияСсылки = 3 Тогда
	//	ВариантПредставленияСсылки = 0;
	КонецЕсли;
	
	ВариантыСсылок = ОбщегоНазначенияВызовСервера.СформироватьВариантыСсылок(Параметры.Объект);
	ВнешняяНавигационнаяСсылка = ВариантыСсылок.Внешняя;
	ВнутренняяНавигационнаяСсылка = ВариантыСсылок.Внутренняя;
	MarkdownСсылка = ВариантыСсылок.Markdown;
	ТекстКороткойСсылки = ВариантыСсылок.КороткаяСсылка;
	
	ОбновитьОтображаемыйТекст(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	// Выделим весь текст в поле
	ТекущийЭлемент = Элементы.ОтображаемыйТекст;
	Элементы.ОтображаемыйТекст.УстановитьГраницыВыделения(1, СтрДлина(ОтображаемыйТекст) + 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если НЕ ЗавершениеРаботы И СохранитьНастройки Тогда
		Настройки = НастройкиФормыПоУмолчанию();
		Настройки.ВариантПредставленияСсылки = ВариантПредставленияСсылки;
	
		СвойстваНастроек = ОбщегоНазначенияКлиентСервер.КлючиНастроекВариантовНавигационныхСсылок();
	
		ОбщегоНазначенияВызовСервера.СохранитьНастройкиДанныхФормы(
			СвойстваНастроек.КлючОбъекта, СвойстваНастроек.КлючНастроек, Настройки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВариантПредставленияСсылкиПриИзменении(Элемент)
	
	ОбновитьОтображаемыйТекст(ЭтотОбъект);
	СохранитьНастройки = Истина;
	
	ПодключитьОбработчикОжидания("ВыделитьТекстНавигационнойСсылки", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КопироватьВБуфер(Команда)
	
	ДанныеСсылки = Новый Структура("ВариантСсылки, НавигационнаяСсылка, Представление", ОтображаемыйТекст, ВнешняяНавигационнаяСсылка, ПредставлениеСсылки);
	
	ОбщегоНазначенияКлиент.КопироватьТекстВБуферОбмена(ДанныеСсылки);
				
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыделитьТекстНавигационнойСсылки()
	
	ТекущийЭлемент = Элементы.ОтображаемыйТекст;
	Элементы.ОтображаемыйТекст.УстановитьГраницыВыделения(1, СтрДлина(ОтображаемыйТекст) + 1);
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИнициализироватьНастройкиФормы()
	
	Перем ЗначениеНастройки;
	
	НастройкиФормы   = НастройкиФормыПоУмолчанию();
	СвойстваНастроек = ОбщегоНазначенияКлиентСервер.КлючиНастроекВариантовНавигационныхСсылок();
	
	// Чтение настроек из хранилища настроек данных формы
	Настройки = ОбщегоНазначенияВызовСервера.ЗагрузитьНастройкиДанныхФормы(
		СвойстваНастроек.КлючОбъекта, СвойстваНастроек.КлючНастроек);
		
	Если ТипЗнч(Настройки) = Тип("Структура") Тогда
		Для Каждого Настройка Из НастройкиФормы Цикл
			ИмяКлюча = Настройка.Ключ;
				
			// Если значение сохраненной настройки существует и ее тип соответствует типу
			// настройки по-умолчанию, присваиваем значение.
			Если Настройки.Свойство(ИмяКлюча, ЗначениеНастройки) 
				И ТипЗнч(Настройка.Значение) = ТипЗнч(ЗначениеНастройки) Тогда
				
				НастройкиФормы.Вставить(ИмяКлюча, ЗначениеНастройки);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат НастройкиФормы;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НастройкиФормыПоУмолчанию()
	
	НастройкиФормы = Новый Структура;
	НастройкиФормы.Вставить("ВариантПредставленияСсылки", 0);
	
	Возврат НастройкиФормы;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьОтображаемыйТекст(Форма)
	
	Если Форма.ВариантПредставленияСсылки = 0 Тогда
		Форма.ОтображаемыйТекст = Форма.ВнешняяНавигационнаяСсылка;
	ИначеЕсли Форма.ВариантПредставленияСсылки = 1 Тогда
		Форма.ОтображаемыйТекст = Форма.ВнутренняяНавигационнаяСсылка;
	ИначеЕсли Форма.ВариантПредставленияСсылки = 2 Тогда
		Форма.ОтображаемыйТекст = Форма.MarkdownСсылка;
	ИначеЕсли Форма.ВариантПредставленияСсылки = 3 Тогда
		Форма.ОтображаемыйТекст = Форма.ТекстКороткойСсылки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

#Если ТонкийКлиент ИЛИ ВебКлиент Тогда
СохранитьНастройки = Ложь;
#КонецЕсли

#КонецОбласти
