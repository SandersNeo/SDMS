///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////
  
#Область ОписаниеПеременных

// Хранит пользовательские настройки колонок для "Таблицы заявок"
&НаКлиенте
Перем НастройкиКолонок;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	ЗаполнитьСпискиЗначений();
	ЗагрузитьПользовательскиеНастройки();
	СформироватьТаблицуЗаявок();
	ИнициализацияНастроекТаблицаЗаявок();

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ЗавершениеРаботы Тогда
		СохранитьПользовательскиеНастройки();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ГруппаЗаказчиковНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = ИнтерфейсПриложенияКлиент.СформироватьПараметрыОткрытия();
	ПараметрыОткрытия.ГруппыЗаказчиков.Значение = ГруппаЗаказчиков.ВыгрузитьЗначения();
	ПараметрыОткрытия.ГруппыЗаказчиков.Использование = Истина;
	
	ДополнительныеПараметры = Новый Структура("ИмяРеквизита, КлючСтруктуры", "ГруппаЗаказчиков", "ВыбранныеГруппыЗаказчиков");
	
	ИнтерфейсПриложенияКлиент.ОткрытьФормуНастройкиИнструментов(ЭтотОбъект, ПараметрыОткрытия, , ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = ИнтерфейсПриложенияКлиент.СформироватьПараметрыОткрытия();
	ПараметрыОткрытия.Статусы.Значение = Статусы;
	ПараметрыОткрытия.Статусы.Использование = Истина;
	
	ДополнительныеПараметры = Новый Структура("ИмяРеквизита, КлючСтруктуры", "Статусы", "ВыбранныеСтатусы");

	ИнтерфейсПриложенияКлиент.ОткрытьФормуНастройкиИнструментов(ЭтотОбъект, ПараметрыОткрытия, , ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродуктыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = ИнтерфейсПриложенияКлиент.СформироватьПараметрыОткрытия();
	ПараметрыОткрытия.Продукты.Значение = Продукты;
	ПараметрыОткрытия.Продукты.Использование = Истина;
	
	ДополнительныеПараметры = Новый Структура("ИмяРеквизита, КлючСтруктуры", "Продукты", "ВыбранныеПродукты");
	
	ИнтерфейсПриложенияКлиент.ОткрытьФормуНастройкиИнструментов(ЭтотОбъект, ПараметрыОткрытия, , ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура СерьезностьОшибокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
		
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗаголовокОкна", "Выбор серьезности ошибки");
	ПараметрыОткрытия.Вставить("МножественныйВыбор", Истина);
	ПараметрыОткрытия.Вставить("ОтмеченныеЗначения", СерьезностьОшибок);
	ПараметрыОткрытия.Вставить("ВариантЗаполнения", 1);
	
	ОткрытьФормуПодбораЗначений(ПараметрыОткрытия, "СерьезностьОшибок", "ВыбранныеСерьезностьОшибокПредставление");
	
КонецПроцедуры

&НаКлиенте
Процедура СерьезностьОшибокОчистка(Элемент, СтандартнаяОбработка)
	
	СерьезностьОшибок.ЗаполнитьПометки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура СистемыРазработкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = ИнтерфейсПриложенияКлиент.СформироватьПараметрыОткрытия();	
	ПараметрыОткрытия.Системы.Значение = СистемыРазработки;
	ПараметрыОткрытия.Системы.Использование = Истина;
	
	ДополнительныеПараметры = Новый Структура("ИмяРеквизита, КлючСтруктуры", "СистемыРазработки", "ВыбранныеСистемы");
	
	ИнтерфейсПриложенияКлиент.ОткрытьФормуНастройкиИнструментов(ЭтотОбъект, ПараметрыОткрытия, , ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗаявокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	НайденнаяСтрока = ТаблицаЗаявок.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если НайденнаяСтрока <> Неопределено Тогда
		ПоказатьЗначение(, НайденнаяСтрока.Заявка);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗаявокПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Настройки(Команда)
	
	НастройкиОткрыты = Элементы.Настройки.Пометка; 
		
	Элементы.Настройки.Пометка = НЕ НастройкиОткрыты;
	Элементы.ГруппаНастройки.Видимость = НЕ НастройкиОткрыты;
	
	СкрыватьНастройкиПослеФормированияОтчета = НЕ СкрыватьНастройкиПослеФормированияОтчета;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиКолонок(Команда)
		
	Ключи = ПолучитьКлючиНастроекКолонокТаблицаЗаявок();
	НастройкиПоУмолчанию = НастройкиКолонокТаблицаЗаявокПоУмолчанию(Элементы.ТаблицаЗаявок.ПодчиненныеЭлементы);
	НастройкиКолонок = ИнтерфейсПриложенияВызовСервера.ЗаполнитьПользовательскиеНастройки(НастройкиПоУмолчанию, Ключи);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ДоступныеНастройки", НастройкиКолонок);
	ПараметрыОткрытия.Вставить("НастройкиПоУмолчанию", НастройкиПоУмолчанию);
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ИмяТаблицы", "ТаблицаЗаявок");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьИзменениеНастроекКолонок", ЭтотОбъект, ПараметрыОповещения);
	
	ОткрытьФорму("ОбщаяФорма.НастройкаКолонок", ПараметрыОткрытия, ЭтотОбъект,
		КлючУникальности, , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	
	СформироватьТаблицуЗаявок();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ВыбранныеЗначенияСписка(Знач СписокЗначений)
	
	ВыбранныеЭлементы = Новый Массив;
	Для Каждого ЭлементСписка Из СписокЗначений Цикл
		Если ЭлементСписка.Пометка Тогда
			ВыбранныеЭлементы.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВыбранныеЭлементы;
				
КонецФункции

&НаКлиенте
Процедура ЗавершитьВыборЭлементов(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	ПроставитьПометкиЭлементамСпискаЗначений(ЭтотОбъект[ДополнительныеПараметры.СписокЗначений], 
		Результат, ЭтотОбъект[ДополнительныеПараметры.ИмяЭлементПредставление]);
	
КонецПроцедуры
	
&НаСервере
Процедура ЗаполнитьСтатусы()
		
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатусыОбъектов.Ссылка КАК Ссылка,
	|	СтатусыОбъектов.Наименование КАК Наименование
	|ИЗ
	|	Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|ГДЕ
	|	НЕ СтатусыОбъектов.Ссылка В (&ИсключаемыеСтатусы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтатусыОбъектов.Порядок";
	
	Запрос.УстановитьПараметр("ИсключаемыеСтатусы", ИсключаемыеСтатусы());
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Статусы.Добавить(Выборка.Ссылка, Выборка.Наименование, Ложь);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСерьезностьОшибок()
	
	Список = Справочники.СерьезностьОшибок.Выбрать(,,, "Наименование");
	
	Пока Список.Следующий() Цикл   
		Если НЕ Список.ПометкаУдаления Тогда 
			СерьезностьОшибок.Добавить(Список.Ссылка, Список.Наименование, Ложь);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьСпискиЗначений()
	
	ЗаполнитьСтатусы();
	ЗаполнитьСерьезностьОшибок();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализацияНастроекТаблицаЗаявок()
	
	Ключи = ПолучитьКлючиНастроекКолонокТаблицаЗаявок();
	НастройкиПоУмолчанию = НастройкиКолонокТаблицаЗаявокПоУмолчанию(Элементы.ТаблицаЗаявок.ПодчиненныеЭлементы);
	НастройкиКолонок = ИнтерфейсПриложенияВызовСервера.ЗаполнитьПользовательскиеНастройки(НастройкиПоУмолчанию, Ключи);
		
	ИнтерфейсПриложенияКлиентСервер.ПрименитьПользовательскиеНастройки(Элементы, НастройкиКолонок);
	ОбновитьПорядокКолонок("ТаблицаЗаявок", НастройкиКолонок.Порядок);
	
КонецПроцедуры

&НаСервере
Функция ИсключаемыеСтатусы()
	
	ИсключаемыеСтатусы = Новый Массив;
	ИсключаемыеСтатусы.Добавить(Справочники.СтатусыОбъектов.Отклонен);

	Возврат ИсключаемыеСтатусы;	
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НастройкиКолонокТаблицаЗаявокПоУмолчанию(ТаблицаЗаявокПодчиненныеЭлементы)
	
	// Порядок колонок в коде влияет на заполнение по умолчанию
	Состав = Новый СписокЗначений;  
	Состав.Добавить("ТаблицаЗаявокСтатус", "Статус", Истина);
	Состав.Добавить("ТаблицаЗаявокАвтор", "Автор", Истина);
	Состав.Добавить("ТаблицаЗаявокДатаСоздания", "Дата создания", Истина);
	Состав.Добавить("ТаблицаЗаявокПродукт", "Продукт", Истина);	
	Состав.Добавить("ТаблицаЗаявокГруппаЗаказчиков", "Группа заказчиков", Истина);
	ПорядковыйНомер = 1;
	Порядок = Новый Соответствие;
	
	Для Каждого ЭлементСписка Из Состав Цикл
		СтруктураПоля = Новый Структура("Поле, Представление", ЭлементСписка.Значение, ЭлементСписка.Представление);
		Порядок.Вставить(ПорядковыйНомер, СтруктураПоля); 	
		ПорядковыйНомер = ПорядковыйНомер + 1;
	КонецЦикла;
	
	Результат = Новый Структура("Состав, Порядок", Состав, Порядок);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОбновитьПорядокКолонок(Знач ИмяТаблицы, Знач Порядок)
	
	ТаблицаЭлемента = Элементы[ИмяТаблицы];
	ИнтерфейсПриложения.ОбновитьПорядокКолонокНаСервере(Порядок, Элементы, ТаблицаЭлемента);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеНастроекКолонок(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполняемыеСвойства = "Состав, Порядок";
	
	ЗаполнитьЗначенияСвойств(НастройкиКолонок, Результат, ЗаполняемыеСвойства);
	Ключи = ПолучитьКлючиНастроекКолонокТаблицаЗаявок();
	
	Настройки = НастройкиКолонок;
	
	ИнтерфейсПриложенияКлиентСервер.ПрименитьПользовательскиеНастройки(Элементы, Настройки);
	
	Если Результат.ИзменилсяПорядок Тогда
		ОбновитьПорядокКолонок(ДополнительныеПараметры.ИмяТаблицы, Настройки.Порядок);
	КонецЕсли;
	
	// Сохранение пользовательских настроек
	ОбщегоНазначенияВызовСервера.СохранитьНастройкиДанныхФормы(Ключи.Объект, Ключи.Настройка, Настройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПодбораЗначений(Знач ПараметрыОткрытия, СписокЗначений, ЭлементПредставление)
		
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СписокЗначений", СписокЗначений);
	ДополнительныеПараметры.Вставить("ИмяЭлементПредставление", ЭлементПредставление);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьВыборЭлементов", ЭтотОбъект, ДополнительныеПараметры);

	ОткрытьФорму("ОбщаяФорма.ПодборЗначений", ПараметрыОткрытия, ЭтотОбъект, КлючУникальности, , , 
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьКлючиНастроекКолонокТаблицаЗаявок()
	
	Ключи = Новый Структура;
	Ключи.Вставить("Объект", "Отчет.АнализЗаявокПоОшибкам.ФормаОтчета");
	Ключи.Вставить("Настройка", "НастройкаКолонокТаблицаЗаявок");
	
	Возврат Ключи;
	
КонецФункции

&НаСервере
Процедура ПроставитьПометкиЭлементамСпискаЗначений(СписокЗначений, Знач Массив, ЭлементПредставление)
	
	ПредставленияЭлементов = Новый Массив;
	
	Если Массив = Неопределено Тогда 
		Массив = Новый Массив;
	КонецЕсли;
	
	Для Каждого Элемент Из СписокЗначений Цикл
		Если Массив.Найти(Элемент.Значение) <> Неопределено Тогда
			Элемент.Пометка = Истина;
			ПредставленияЭлементов.Добавить(Элемент.Представление);
		Иначе
			Элемент.Пометка = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ЭлементПредставление = СтрСоединить(ПредставленияЭлементов, ", ");
	
КонецПроцедуры

&НаСервере
Процедура СформироватьТаблицуЗаявок()
	
	ТаблицаЗаявок.Очистить();
					
	Запрос = Новый Запрос;
	Запрос.Текст =
	#Область ТекстЗапроса
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаявкаНаРазработку.Ссылка КАК Ссылка,
	|	ЗаявкаНаРазработку.Номер КАК Номер,
	|	ЗаявкаНаРазработку.Автор КАК Автор,
	|	ЗаявкаНаРазработку.Дата КАК ДатаСоздания,
	|	ЗаявкаНаРазработку.Наименование КАК Наименование,
	|	ЗаявкаНаРазработкуСистемыРазработки.Система КАК Система,
	|	ЗаявкаНаРазработку.Продукт КАК Продукт,
	|	СерьезностьОшибок.Наименование КАК Серьезность,
	|	СерьезностьОшибок.ИмяКартинки КАК СерьезностьИмяКартинки
	|ПОМЕСТИТЬ ИсходнаяТаблицаЗаявок
	|ИЗ
	|	Документ.ЗаявкаНаРазработку КАК ЗаявкаНаРазработку
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку.СистемыРазработки КАК ЗаявкаНаРазработкуСистемыРазработки
	|		ПО (ЗаявкаНаРазработкуСистемыРазработки.Ссылка = ЗаявкаНаРазработку.Ссылка)
	|			И (ЗаявкаНаРазработкуСистемыРазработки.Система В (&СистемыРазработки))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерьезностьОшибок КАК СерьезностьОшибок
	|		ПО ЗаявкаНаРазработку.СерьезностьОшибки = СерьезностьОшибок.Ссылка
	|ГДЕ
	|	ЗаявкаНаРазработку.Назначение = ЗНАЧЕНИЕ(Справочник.НазначенияЗадач.Ошибка)
	|	И ЗаявкаНаРазработку.Направление = &Направление
	|	И ВЫБОР
	|			КОГДА &ФильтрПоСерьезностьОшибок
	|				ТОГДА ЗаявкаНаРазработку.СерьезностьОшибки В (&ВыбранныеСерьезностьОшибок)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Система
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК ПриоритетСтроки,
	|	СтатусыЗаявокПоСистемам.Заявка КАК Заявка,
	|	СтатусыЗаявокПоСистемам.Статус.Порядок КАК ПорядокСтатуса,
	|	СтатусыЗаявокПоСистемам.Статус КАК Статус
	|ПОМЕСТИТЬ СтатусыЗаявокПоПриоритетам
	|ИЗ
	|	РегистрСведений.СтатусыЗаявокПоСистемам КАК СтатусыЗаявокПоСистемам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсходнаяТаблицаЗаявок КАК ИсходнаяТаблицаЗаявок
	|		ПО СтатусыЗаявокПоСистемам.Заявка = ИсходнаяТаблицаЗаявок.Ссылка
	|			И СтатусыЗаявокПоСистемам.Система = ИсходнаяТаблицаЗаявок.Система
	|			И (СтатусыЗаявокПоСистемам.Система В (&РазрабатываемыеСистемы))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	МинимальныеСтатусыЗаявок.Заявка,
	|	МинимальныеСтатусыЗаявок.Статус.Порядок,
	|	МинимальныеСтатусыЗаявок.Статус
	|ИЗ
	|	РегистрСведений.МинимальныеСтатусыЗаявок КАК МинимальныеСтатусыЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсходнаяТаблицаЗаявок КАК ИсходнаяТаблицаЗаявок
	|		ПО МинимальныеСтатусыЗаявок.Заявка = ИсходнаяТаблицаЗаявок.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыЗаявокПоПриоритетам.ПриоритетСтроки КАК ПриоритетСтроки,
	|	СтатусыЗаявокПоПриоритетам.Заявка КАК Заявка,
	|	МИНИМУМ(СтатусыЗаявокПоПриоритетам.ПорядокСтатуса) КАК ПорядокСтатуса,
	|	СтатусыЗаявокПоПриоритетам.Статус КАК Статус
	|ПОМЕСТИТЬ МинимальныеСтатусыЗаявокПоПриоритетам
	|ИЗ
	|	СтатусыЗаявокПоПриоритетам КАК СтатусыЗаявокПоПриоритетам
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатусыЗаявокПоПриоритетам.ПриоритетСтроки,
	|	СтатусыЗаявокПоПриоритетам.Заявка,
	|	СтатусыЗаявокПоПриоритетам.Статус
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(МинимальныеСтатусыЗаявокПоПриоритетам.ПриоритетСтроки) КАК ПриоритетСтроки,
	|	МинимальныеСтатусыЗаявокПоПриоритетам.Заявка КАК Заявка
	|ПОМЕСТИТЬ СтатусыЗаявокМинимальныйПриоритет
	|ИЗ
	|	МинимальныеСтатусыЗаявокПоПриоритетам КАК МинимальныеСтатусыЗаявокПоПриоритетам
	|
	|СГРУППИРОВАТЬ ПО
	|	МинимальныеСтатусыЗаявокПоПриоритетам.Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МинимальныеСтатусыЗаявокПоПриоритетам.Заявка КАК Заявка,
	|	СтатусыОбъектов.Ссылка КАК Статус,
	|	СтатусыОбъектов.ИндексКартинки КАК ИндексКартинки
	|ПОМЕСТИТЬ ДополнительныеДанныеЗаявок
	|ИЗ
	|	МинимальныеСтатусыЗаявокПоПриоритетам КАК МинимальныеСтатусыЗаявокПоПриоритетам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтатусыЗаявокМинимальныйПриоритет КАК СтатусыЗаявокМинимальныйПриоритет
	|		ПО МинимальныеСтатусыЗаявокПоПриоритетам.Заявка = СтатусыЗаявокМинимальныйПриоритет.Заявка
	|			И МинимальныеСтатусыЗаявокПоПриоритетам.ПриоритетСтроки = СтатусыЗаявокМинимальныйПриоритет.ПриоритетСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО МинимальныеСтатусыЗаявокПоПриоритетам.Статус = СтатусыОбъектов.Ссылка
	|ГДЕ
	|	НЕ СтатусыОбъектов.Ссылка В (&ИсключаемыеСтатусы)
	|	И ВЫБОР
	|			КОГДА &ФильтрПоСтатусам
	|				ТОГДА СтатусыОбъектов.Ссылка В (&ВыбранныеСтатусы)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсходнаяТаблицаЗаявок.Ссылка КАК Ссылка,
	|	ГруппыЗаказчиковНаправлений.Ссылка КАК ГруппаЗаказчиков,
	|	ГруппыЗаказчиковНаправлений.Наименование КАК НаименованиеГруппаЗаказчиков
	|ПОМЕСТИТЬ ГруппыЗаказчиковОбъектов
	|ИЗ
	|	ИсходнаяТаблицаЗаявок КАК ИсходнаяТаблицаЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку.СистемыРазработки КАК СистемыЗаявки
	|		ПО ИсходнаяТаблицаЗаявок.Ссылка = СистемыЗаявки.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыЗаказчиковНаправлений КАК ГруппыЗаказчиковНаправлений
	|		ПО (СистемыЗаявки.ГруппаЗаказчиков = ГруппыЗаказчиковНаправлений.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсходнаяТаблицаЗаявок.Ссылка КАК Заявка,
	|	ИсходнаяТаблицаЗаявок.Наименование КАК Наименование,
	|	ИсходнаяТаблицаЗаявок.Номер КАК Номер,
	|	ЕСТЬNULL(Пользователи.ФИО, ""<Ошибка получения представления>"") КАК Автор,
	|	ИсходнаяТаблицаЗаявок.ДатаСоздания КАК ДатаСоздания,
	|	ПРЕДСТАВЛЕНИЕ(ИсходнаяТаблицаЗаявок.Продукт) КАК Продукт,
	|	ИсходнаяТаблицаЗаявок.Серьезность КАК Серьезность,
	|	ИсходнаяТаблицаЗаявок.СерьезностьИмяКартинки КАК СерьезностьИмяКартинки,
	|	ПРЕДСТАВЛЕНИЕ(ВЫБОР
	|			КОГДА СтатусыОбъектов.Родитель = ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ПустаяСсылка)
	|				ТОГДА СтатусыОбъектов.Ссылка
	|			ИНАЧЕ СтатусыОбъектов.Родитель
	|		КОНЕЦ) КАК Статус,
	|	ДополнительныеДанныеЗаявок.ИндексКартинки КАК ИндексКартинки,
	|	ЕСТЬNULL(ГруппыЗаказчиковОбъектов.НаименованиеГруппаЗаказчиков, """") КАК НаименованиеГруппаЗаказчиков
	|ИЗ
	|	ИсходнаяТаблицаЗаявок КАК ИсходнаяТаблицаЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДополнительныеДанныеЗаявок КАК ДополнительныеДанныеЗаявок
	|		ПО ИсходнаяТаблицаЗаявок.Ссылка = ДополнительныеДанныеЗаявок.Заявка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО (СтатусыОбъектов.Ссылка = ДополнительныеДанныеЗаявок.Статус)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ИсходнаяТаблицаЗаявок.Автор = Пользователи.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГруппыЗаказчиковОбъектов КАК ГруппыЗаказчиковОбъектов
	|		ПО (ГруппыЗаказчиковОбъектов.Ссылка = ИсходнаяТаблицаЗаявок.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Продукты КАК Продукты
	|		ПО ИсходнаяТаблицаЗаявок.Продукт = Продукты.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ &ОтборПродуктГруппаЗаказчиков
	|				ТОГДА ИСТИНА
	|			КОГДА НЕ Продукты.Ссылка ЕСТЬ NULL
	|				ТОГДА Продукты.Ссылка В (&СписокПродуктГруппаЗаказчиков)
	|			ИНАЧЕ ЕСТЬNULL(ГруппыЗаказчиковОбъектов.ГруппаЗаказчиков, НЕОПРЕДЕЛЕНО) В (&СписокПродуктГруппаЗаказчиков)
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер УБЫВ
	|ИТОГИ
	|	МАКСИМУМ(Номер)
	|ПО
	|	Заявка";
	#КонецОбласти
	
	ВыбранныеСерьезностьОшибок = ВыбранныеЗначенияСписка(СерьезностьОшибок);
	ИсключаемыеСтатусы = ИсключаемыеСтатусы();
		
	СписокПродуктГруппаЗаказчиков = Новый СписокЗначений;
	
	Если ГруппаЗаказчиков.Количество() > 0 Тогда
		Для Каждого Элемент Из ГруппаЗаказчиков Цикл
			СписокПродуктГруппаЗаказчиков.Добавить(Элемент.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Если Продукты.Количество() > 0 Тогда
		Для Каждого Элемент Из Продукты Цикл
			СписокПродуктГруппаЗаказчиков.Добавить(Элемент.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Направление", Направление);
	Запрос.УстановитьПараметр("СистемыРазработки", СистемыРазработки);
	Запрос.УстановитьПараметр("РазрабатываемыеСистемы", ПараметрыСеанса.РазрабатываемыеСистемы);
	Запрос.УстановитьПараметр("ИсключаемыеСтатусы", ИсключаемыеСтатусы);
	Запрос.УстановитьПараметр("ВыбранныеСтатусы", Статусы);
	Запрос.УстановитьПараметр("ФильтрПоСтатусам", Статусы.Количество() > 0);
	Запрос.УстановитьПараметр("ВыбранныеСерьезностьОшибок", ВыбранныеСерьезностьОшибок);
	Запрос.УстановитьПараметр("ФильтрПоСерьезностьОшибок", ВыбранныеСерьезностьОшибок.Количество() > 0); 
	Запрос.УстановитьПараметр("ОтборПродуктГруппаЗаказчиков", СписокПродуктГруппаЗаказчиков.Количество() > 0);
	Запрос.УстановитьПараметр("СписокПродуктГруппаЗаказчиков", СписокПродуктГруппаЗаказчиков);

	РезультатЗапроса = Запрос.Выполнить();
		
	Если НЕ РезультатЗапроса.Пустой() Тогда
		НомерСтроки = 1;
		ВыборкаЗаявки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
		Пока ВыборкаЗаявки.Следующий() Цикл
			
			Выборка = ВыборкаЗаявки.Выбрать();
			
			МассивГруппЗаказчиков = Новый Массив;
			Пока Выборка.Следующий() Цикл
				МассивГруппЗаказчиков.Добавить(Выборка.НаименованиеГруппаЗаказчиков);
			КонецЦикла;
			
			ПредставлениеГруппЗаказчиков = СтрСоединить(МассивГруппЗаказчиков, ", ");
			
			Выборка.Сбросить();
			Выборка.Следующий();
			
			НоваяСтрока = ТаблицаЗаявок.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			НоваяСтрока.Автор = Выборка.Автор;
			НоваяСтрока.ПредставлениеЗаявки = СтрШаблон("[%1] %2", Выборка.Номер, Выборка.Наименование);
			НоваяСтрока.НомерСтроки = НомерСтроки;
			НоваяСтрока.СерьезностьКартинка = БиблиотекаКартинок[Выборка.СерьезностьИмяКартинки];
			НоваяСтрока.ГруппаЗаказчиков = ПредставлениеГруппЗаказчиков;
	
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
	КонецЕсли;	
	
	Если СкрыватьНастройкиПослеФормированияОтчета Тогда
		Элементы.Настройки.Пометка = Ложь;
		Элементы.ГруппаНастройки.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Пользовательские настройки

&НаСервере
Процедура ЗагрузитьПользовательскиеНастройки()
	
	Ключи = ПолучитьКлючиНастроек();	
	Настройки = ОбщегоНазначенияВызовСервера.ЗагрузитьНастройкиДанныхФормы(Ключи.КлючОбъекта, Ключи.КлючНастроек);
	
	Если Настройки <> Неопределено Тогда
		Направление = Настройки.Получить("Направление");
		СистемыРазработки = Настройки.Получить("СистемыРазработки");
		ГруппаЗаказчиков = Настройки.Получить("ГруппаЗаказчиков");
		Статусы = Настройки.Получить("Статусы");
		ВыбранныеСерьезностьОшибок = Настройки.Получить("СерьезностьОшибок");
		СкрыватьНастройкиПослеФормированияОтчета = Настройки.Получить("СкрыватьНастройкиПослеФормированияОтчета");
		
		ПроставитьПометкиЭлементамСпискаЗначений(СерьезностьОшибок, ВыбранныеСерьезностьОшибок, 
			ВыбранныеСерьезностьОшибокПредставление);
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКлючиНастроек()
	
	Ключи = Новый Структура;
	Ключи.Вставить("КлючОбъекта", "Отчет.АнализЗаявокПоОшибкам.Форма.ФормаОтчета");
	Ключи.Вставить("КлючНастроек", "НастройкиФормы");
	
	Возврат Ключи;
	
КонецФункции

&НаКлиенте
Процедура СохранитьПользовательскиеНастройки()
	
	Настройки = Новый Соответствие;
	Настройки.Вставить("Направление", Направление);
	Настройки.Вставить("СистемыРазработки", СистемыРазработки);
	Настройки.Вставить("ГруппаЗаказчиков", ГруппаЗаказчиков);
	Настройки.Вставить("Статусы", Статусы);
	Настройки.Вставить("СкрыватьНастройкиПослеФормированияОтчета", СкрыватьНастройкиПослеФормированияОтчета);
	Настройки.Вставить("СерьезностьОшибок", ВыбранныеЗначенияСписка(СерьезностьОшибок));

	СохранитьПользовательскиеНастройкиНаСервере(Настройки);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьПользовательскиеНастройкиНаСервере(Знач Настройки)
	
	Ключи = ПолучитьКлючиНастроек();
	ОбщегоНазначенияВызовСервера.СохранитьНастройкиДанныхФормы(Ключи.КлючОбъекта, Ключи.КлючНастроек, Настройки);
	
КонецПроцедуры

#КонецОбласти
