///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

// Хранит дополнительные данные для клиента, чтобы избежать постоянных обращений к серверу.
&НаКлиенте
Перем КэшДанных;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РегистрыСведений.ОтслеживаниеИспользованияФункциональности.ОткрытиеФормы(ЭтотОбъект.ИмяФормы);
	
	Период = Параметры.Период;
	Периодичность = Параметры.Периодичность;
	СохранятьПериод = Параметры.СохранятьПериод;
	ПоказыватьПлан = Параметры.ПоказыватьПлан;
	ОтображатьВнутренниеТрудозатраты = Параметры.ОтображатьВнутренниеТрудозатраты;
	ОтображатьКомментарии = Параметры.ОтображатьКомментарии;	
	ОтображатьВыходные = Параметры.ОтображатьВыходные;
	ЗагружатьСохраненныеНастройки = НЕ Параметры.НастройкиЗаполнены;
	ОтображатьТолькоПодсвеченныеТрудозатраты = Параметры.ОтображатьТолькоПодсвеченныеТрудозатраты;
	
	Элементы.ВидыДеятельностиВТ.Видимость = ОтображатьВнутренниеТрудозатраты;
	
	Если Параметры.Пользователь.Количество() <> 0 Тогда
		СписокПользователи.ЗагрузитьЗначения(Параметры.Пользователь);
	КонецЕсли;
	
	Если Параметры.ВыбранныеФилиалы.Количество() <> 0 Тогда
		СписокФилиалы.ЗагрузитьЗначения(Параметры.ВыбранныеФилиалы);
	КонецЕсли;
	
	ИнициализироватьСпискиЗначений();
		
	ПроставитьПометкиЭлементамСпискаЗначений(СписокВидыДеятельности, 
		Параметры.ВыбранныеВидыДеятельности, ВидыДеятельностиПредставление);

	ПроставитьПометкиЭлементамСпискаЗначений(СписокВидыДеятельностиВТ, 
		Параметры.ВыбранныеВидыДеятельностиВТ, ВидыДеятельностиВТ);
	
	Если Параметры.НастройкиЗаполнены Тогда
		ПроставитьПометкиЭлементамСпискаЗначений(СписокСтатусы, 
			Параметры.ВыбранныеСтатусы, ВыбранныеСтатусыПредставление);
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	КэшДанных = ПолучитьКэшДанных();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВидыДеятельностиПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
		
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗаголовокОкна", "Выбор видов деятельности");
	ПараметрыОткрытия.Вставить("МножественныйВыбор", Истина);
	ПараметрыОткрытия.Вставить("ОтмеченныеЗначения", СписокВидыДеятельности);
	ПараметрыОткрытия.Вставить("ВариантЗаполнения", 1);
	
	ОткрытьФормуПодбораЗначений(ПараметрыОткрытия, "СписокВидыДеятельности", "ВидыДеятельностиПредставление");

КонецПроцедуры

&НаКлиенте
Процедура ВидыДеятельностиПредставлениеОчистка(Элемент, СтандартнаяОбработка)
	
	СписокВидыДеятельности.ЗаполнитьПометки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДеятельностиВТНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
		
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗаголовокОкна", "Выбор видов деятельности внутренних трудозатрат");
	ПараметрыОткрытия.Вставить("МножественныйВыбор", Истина);
	ПараметрыОткрытия.Вставить("ОтмеченныеЗначения", СписокВидыДеятельностиВТ);
	ПараметрыОткрытия.Вставить("ВариантЗаполнения", 1);
	
	ОткрытьФормуПодбораЗначений(ПараметрыОткрытия, "СписокВидыДеятельностиВТ", "ВидыДеятельностиВТ");
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДеятельностиВТОчистка(Элемент, СтандартнаяОбработка)
	
	СписокВидыДеятельностиВТ.ЗаполнитьПометки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеСтатусыПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗаголовокОкна", "Выбор статусов");
	ПараметрыОткрытия.Вставить("МножественныйВыбор", Истина);
	ПараметрыОткрытия.Вставить("ОтмеченныеЗначения", СписокСтатусы);
	ПараметрыОткрытия.Вставить("ВариантЗаполнения", 1);
	
	ОткрытьФормуПодбораЗначений(ПараметрыОткрытия, "СписокСтатусы", "ВыбранныеСтатусыПредставление");

КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеСтатусыПредставлениеОчистка(Элемент, СтандартнаяОбработка)
	
	СписокСтатусы.ЗаполнитьПометки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОткрытия = Новый Структура("ВыбранныеПользователи", СписокПользователи);
	ОткрытьФорму("Справочник.Пользователи.Форма.МножественныйВыбор", ПараметрыОткрытия, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
		
	СписокПользователи.ЗагрузитьЗначения(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокФилиалыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура("ВыбранныеФилиалы", СписокФилиалы);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФилиалов", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.Филиалы.Форма.МножественныйВыбор", ПараметрыОткрытия, ЭтотОбъект, КлючУникальности, , ,
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры
	
&НаКлиенте
Процедура ОбработатьВыборФилиалов(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокФилиалы = Результат;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьВнутренниеТрудозатратыПриИзменении(Элемент)
	
	Элементы.ВидыДеятельностиВТ.Видимость = ОтображатьВнутренниеТрудозатраты;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаДобавитьМойФилиал(Команда)
	
	СписокФилиалы.Очистить();
	
	СписокФилиалы.Добавить(КэшДанных.ПараметрыСеансаФилиал);
		
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПрименить(Команда)
	
	ВыбранныеНастройки = Новый Структура;
	ВыбранныеНастройки.Вставить("ВыбранныеВидыДеятельности", ПолучитьВыбранныеЗначенияСписка(СписокВидыДеятельности));
	ВыбранныеНастройки.Вставить("ВыбранныеСтатусы", ПолучитьВыбранныеЗначенияСписка(СписокСтатусы));
	ВыбранныеНастройки.Вставить("ВыбранныеФилиалы", СписокФилиалы.ВыгрузитьЗначения());
	ВыбранныеНастройки.Вставить("ОтображатьВнутренниеТрудозатраты", ОтображатьВнутренниеТрудозатраты);
	ВыбранныеНастройки.Вставить("ВыбранныеВидыДеятельностиВТ", ПолучитьВыбранныеЗначенияСписка(СписокВидыДеятельностиВТ));
	ВыбранныеНастройки.Вставить("ОтображатьКомментарии", ОтображатьКомментарии);
	ВыбранныеНастройки.Вставить("ОтображатьВыходные", ОтображатьВыходные);
	ВыбранныеНастройки.Вставить("Период", Период);
	ВыбранныеНастройки.Вставить("Периодичность", Периодичность);
	ВыбранныеНастройки.Вставить("Пользователь", СписокПользователи.ВыгрузитьЗначения());
	ВыбранныеНастройки.Вставить("СохранятьПериод", СохранятьПериодВНастройках);
	ВыбранныеНастройки.Вставить("ПоказыватьПлан", ПоказыватьПлан);
	ВыбранныеНастройки.Вставить("ОтображатьТолькоПодсвеченныеТрудозатраты", ОтображатьТолькоПодсвеченныеТрудозатраты);
	
	Закрыть(ВыбранныеНастройки);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтандартныеНастройки(Команда)
	
	УстановитьСтандартныеНастройкиНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗавершитьВыборЭлементов(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	ПроставитьПометкиЭлементамСпискаЗначений(ЭтотОбъект[ДополнительныеПараметры.СписокЗначений], 
		Результат, ЭтотОбъект[ДополнительныеПараметры.ИмяЭлементПредставление]);
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьСпискиЗначений()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	#Область ТекстЗапроса
	"ВЫБРАТЬ
	|	СтатусыОбъектов.Ссылка КАК Ссылка,
	|	СтатусыОбъектов.Наименование КАК Наименование
	|ИЗ
	|	Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|ГДЕ
	|	НЕ СтатусыОбъектов.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыДеятельности.Ссылка КАК Ссылка,
	|	ВидыДеятельности.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ВидыДеятельности КАК ВидыДеятельности
	|ГДЕ
	|	НЕ ВидыДеятельности.ПометкаУдаления
	|	И ВидыДеятельности.Назначение = &Назначение
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыДеятельности.Ссылка КАК Ссылка,
	|	ВидыДеятельности.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ВидыДеятельности КАК ВидыДеятельности
	|ГДЕ
	|	НЕ ВидыДеятельности.ПометкаУдаления
	|	И ВидыДеятельности.Назначение = ЗНАЧЕНИЕ(Перечисление.НазначенияВидовДеятельности.ВнутренниеТрудозатраты)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";

	#КонецОбласти
	
	ПользовательПринадлежитIT = Пользователи.ПринадлежитIT(ПараметрыСеанса.ТекущийПользователь);
	
	Если ПользовательПринадлежитIT Тогда
		Назначение = Перечисления.НазначенияВидовДеятельности.ITПодразделение;
	Иначе
		Назначение = Перечисления.НазначенияВидовДеятельности.Общее;
	КонецЕсли;

	Запрос.УстановитьПараметр("Назначение", Назначение);	
	РезультатПакеты = Запрос.ВыполнитьПакет();
	
	ВыборкаСтатусы          = РезультатПакеты[0].Выбрать();
	ВыборкаВидыДеятельности = РезультатПакеты[1].Выбрать();
	ВыборкаВидыДеятельностиВТ = РезультатПакеты[2].Выбрать();
				
	Пока ВыборкаСтатусы.Следующий() Цикл
		СписокСтатусы.Добавить(ВыборкаСтатусы.Ссылка, ВыборкаСтатусы.Наименование, Ложь);
	КонецЦикла;
	
	Пока ВыборкаВидыДеятельности.Следующий() Цикл
		СписокВидыДеятельности.Добавить(ВыборкаВидыДеятельности.Ссылка, ВыборкаВидыДеятельности.Наименование, Ложь);
	КонецЦикла;

	Пока ВыборкаВидыДеятельностиВТ.Следующий() Цикл
		СписокВидыДеятельностиВТ.Добавить(ВыборкаВидыДеятельностиВТ.Ссылка, ВыборкаВидыДеятельностиВТ.Наименование, Ложь);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПодбораЗначений(Знач ПараметрыОткрытия, СписокЗначений, ЭлементПредставление)
		
	ДополнительныеПараметры = Новый Структура("СписокЗначений, ИмяЭлементПредставление", СписокЗначений, ЭлементПредставление);
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьВыборЭлементов", ЭтотОбъект, ДополнительныеПараметры);

	ОткрытьФорму("ОбщаяФорма.ПодборЗначений", ПараметрыОткрытия, ЭтотОбъект, КлючУникальности, , , 
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры
	
&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьВыбранныеЗначенияСписка(Знач СписокЗначений)
	
	ВыбранныеЭлементы = Новый Массив;
	Для Каждого ЭлементСписка Из СписокЗначений Цикл
		Если ЭлементСписка.Пометка Тогда
			ВыбранныеЭлементы.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВыбранныеЭлементы;
				
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКэшДанных()
	
	КэшДанных = Новый Структура;
	КэшДанных.Вставить("ПараметрыСеансаФилиал", ПараметрыСеанса.Филиал);

	Возврат КэшДанных;

КонецФункции

&НаСервере
Процедура ПроставитьПометкиЭлементамСпискаЗначений(СписокЗначений, Знач Массив, ЭлементПредставление)
	
	ПредставленияЭлементов = Новый Массив;
	
	Для Каждого Элемент Из СписокЗначений Цикл
		Если Массив.Найти(Элемент.Значение) <> Неопределено Тогда
			Элемент.Пометка = Истина;
			ПредставленияЭлементов.Добавить(Элемент.Представление);
		Иначе
			Элемент.Пометка = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ЭлементПредставление = СтрСоединить(ПредставленияЭлементов, ", ");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Управление настройками

&НаСервере
Процедура ПередЗагрузкойПользовательскихНастроекНаСервере(Настройки)
	
	// Если уже были установлены какие-то настройки, 
	// то не нужно загружать сохраненные.
	Если НЕ ЗагружатьСохраненныеНастройки Тогда
		ЗагружатьСохраненныеНастройки = Истина;
		Возврат;
	КонецЕсли;
	
	СтруктураСохраненныхРеквизитов = Новый Структура;	
	
	Если Настройки.ДополнительныеСвойства.Свойство("НастройкиОтчета", СтруктураСохраненныхРеквизитов) Тогда
		СписокФилиалы.ЗагрузитьЗначения(СтруктураСохраненныхРеквизитов.ВыбранныеФилиалы);
		
		ВыбранныеВидыДеятельности = СтруктураСохраненныхРеквизитов.ВыбранныеВидыДеятельности;
		ПроставитьПометкиЭлементамСпискаЗначений(СписокВидыДеятельности, ВыбранныеВидыДеятельности, 
			ВидыДеятельностиПредставление);
			
		ТипЗначения = ТипЗнч(СтруктураСохраненныхРеквизитов.Пользователь);
			
		СписокПользователи.Очистить();
		Если ТипЗначения = Тип("СправочникСсылка.Пользователи") Тогда
			СписокПользователи.Добавить(СтруктураСохраненныхРеквизитов.Пользователь);
		ИначеЕсли ТипЗначения = Тип("Массив") Тогда
			СписокПользователи.ЗагрузитьЗначения(СтруктураСохраненныхРеквизитов.Пользователь);
		КонецЕсли;
		
		Период = СтруктураСохраненныхРеквизитов.Период;
		ПоказыватьПлан = СтруктураСохраненныхРеквизитов.ПоказыватьПлан;
		ОтображатьВнутренниеТрудозатраты = СтруктураСохраненныхРеквизитов.ОтображатьВнутренниеТрудозатраты;
		СтруктураСохраненныхРеквизитов.Свойство("ОтображатьКомментарии", ОтображатьКомментарии); 
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСохраненииПользовательскихНастроекНаСервере(Настройки)
	
	ВыбранныеНастройки = Новый Структура;
	ВыбранныеНастройки.Вставить("ВыбранныеВидыДеятельности", ПолучитьВыбранныеЗначенияСписка(СписокВидыДеятельности));
	ВыбранныеНастройки.Вставить("ВыбранныеФилиалы", СписокФилиалы.ВыгрузитьЗначения()); 
	ВыбранныеНастройки.Вставить("ПоказыватьПлан", ПоказыватьПлан);
	ВыбранныеНастройки.Вставить("ОтображатьВнутренниеТрудозатраты", ОтображатьВнутренниеТрудозатраты);
	ВыбранныеНастройки.Вставить("ОтображатьКомментарии", ОтображатьКомментарии);
	ВыбранныеНастройки.Вставить("Период", Период);
	ВыбранныеНастройки.Вставить("Пользователь", СписокПользователи.ВыгрузитьЗначения());
	
	Настройки.ДополнительныеСвойства.Очистить();	
	Настройки.ДополнительныеСвойства.Вставить("НастройкиОтчета", ВыбранныеНастройки);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтандартныеНастройкиНаСервере()
	
	СписокФилиалы.Очистить();
	
	// Сброс "Виды деятельности"
	ВидыДеятельностиПредставление = "";
	СписокВидыДеятельности.ЗаполнитьПометки(Ложь);
			
	Период.Вариант = ВариантСтандартногоПериода.Сегодня;
	
	ТекущийФилиал = ПараметрыСеанса.Филиал;
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	РуководительФилиала = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийФилиал, "Руководитель");
	
	Если ТекущийПользователь = РуководительФилиала Тогда
		СписокФилиалы.Добавить(ТекущийФилиал);
	Иначе
		Пользователь = ТекущийПользователь;
	КонецЕсли;
	
	ОтображатьВнутренниеТрудозатраты = Истина;
	ОтображатьКомментарии = Ложь;
	ПоказыватьПлан = Ложь;
	ОтображатьТолькоПодсвеченныеТрудозатраты = Ложь;
			
КонецПроцедуры

#КонецОбласти
