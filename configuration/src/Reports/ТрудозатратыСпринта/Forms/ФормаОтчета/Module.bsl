///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Найти(Врег(КлючТекущегоВарианта), "ДЕТАЛЬНЫЙ") > 0 Тогда
		ВыбранныйКлючВарианта = "ТрудозатратыСпринтаДетализация";
	Иначе
		ВыбранныйКлючВарианта = "ТрудозатратыСпринта";
	КонецЕсли;    
	
	ВариантОтчета = СтрРазделить(КлючТекущегоВарианта, "_")[0]; 
	УстановитьПометкуДляВыбранногоВарианта(ВыбранныйКлючВарианта, Элементы, ВыбранныйКлючВарианта);
	Спринт = Параметры.Спринт;
	УстановитьЗаголовок(); 
	
	ПользовательскиеНастройки = ОбщегоНазначенияВызовСервера.ЗагрузитьСистемнуюНастройку(ПолучитьКлючНастроек(), "");
	
	Если ПользовательскиеНастройки <> Неопределено Тогда   
		
		Для Каждого Элемент Из ПользовательскиеНастройки.Элементы Цикл    
			
			Массив = Новый Массив; 
			
			Если ТипЗнч(Элемент.Значение) = Тип("СписокЗначений") Тогда 
				Массив = Элемент.Значение.ВыгрузитьЗначения();
			ИначеЕсли ЗначениеЗаполнено(Элемент.Значение) Тогда
				Массив.Добавить(Элемент.Значение);
			КонецЕсли;
			
			Если Элемент.Параметр = Новый ПараметрКомпоновкиДанных("Продукт") Тогда 
				ВыбранныеПродукты.ЗагрузитьЗначения(Массив);
			ИначеЕсли Элемент.Параметр = Новый ПараметрКомпоновкиДанных("ГруппыЗаказчиков") Тогда
				ВыбранныеГруппыЗаказчиков.ЗагрузитьЗначения(Массив);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеВариантаНаСервере(Настройки)
	
	УстановитьПользовательскиеНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ) 
	
	Если ЗначениеЗаполнено(ВыбранныйКлючВарианта) И ЗначениеЗаполнено(Спринт) Тогда
		СформироватьОтчетНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВариантОтчетаПриИзменении(Элемент)
	
	УстановитьВариантОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура СпринтПриИзменении(Элемент)
	
	УстановитьЗаголовок();
	ОтобразитьСостояниеОтчета(НСтр("ru = 'Выбран другой спринт. Нажмите ""Сформировать"" для получения отчета.'"),
		БиблиотекаКартинок.Информация32);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ЗагрузитьВариантОтчета(Знач Команда)
	
	УстановитьПометкуДляВыбранногоВарианта(Команда.Имя, Элементы, ВыбранныйКлючВарианта);
	УстановитьВариантОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
	
	ПараметрыОткрытия = ИнтерфейсПриложенияКлиент.СформироватьПараметрыОткрытия();
	
	ПараметрыОткрытия.ГруппыЗаказчиков.Значение = ВыбранныеГруппыЗаказчиков.ВыгрузитьЗначения();
	ПараметрыОткрытия.ГруппыЗаказчиков.Использование = Истина;
	
	ПараметрыОткрытия.Продукты.Значение = ВыбранныеПродукты.ВыгрузитьЗначения();
	ПараметрыОткрытия.Продукты.Использование = Истина;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьВыборНастроек", ЭтотОбъект);
	ИнтерфейсПриложенияКлиент.ОткрытьФормуНастройкиИнструментов(ЭтотОбъект, ПараметрыОткрытия, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	СтандартнаяОбработка = Ложь;		
	ЗначениеРасшифровки = ПолучитьЗначениеРасшифровки(АдресДанныеРасшифровки, Расшифровка); 
	
	Если ЗначениеЗаполнено(ЗначениеРасшифровки) Тогда
		ПоказатьЗначение(, ЗначениеРасшифровки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	СформироватьОтчетНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗавершитьВыборНастроек(Результат, ДополнительныеНастройки) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;	
	
	ВыбранныеГруппыЗаказчиков = Результат.ВыбранныеГруппыЗаказчиков;
	ВыбранныеПродукты = Результат.ВыбранныеПродукты;
    УстановитьПользовательскиеНастройки(Истина);
	
	ОтобразитьСостояниеОтчета(НСтр("ru = 'Выбраны другие отборы. Нажмите ""Сформировать"" для получения отчета.'"),
		БиблиотекаКартинок.Информация32);

КонецПроцедуры

&НаСервере
Процедура ОтобразитьСостояниеОтчета(Знач ТекстСостояния = "", Знач КартинкаСостояния = Неопределено)
	
	ОтображатьСостояние = НЕ ПустаяСтрока(ТекстСостояния);
	Если КартинкаСостояния = Неопределено 
		ИЛИ НЕ ОтображатьСостояние Тогда 

		КартинкаСостояния = Новый Картинка;
	КонецЕсли;
	
	ОтображениеСостояния = Элементы.Результат.ОтображениеСостояния;
	ОтображениеСостояния.Видимость = ОтображатьСостояние;
	ОтображениеСостояния.Картинка = КартинкаСостояния;
	ОтображениеСостояния.Текст = ТекстСостояния;
	ОтображениеСостояния.ДополнительныйРежимОтображения = ?(ОтображатьСостояние, ДополнительныйРежимОтображения.Неактуальность, 
		ДополнительныйРежимОтображения.НеИспользовать);
	
	Элементы.Результат.ТолькоПросмотр = (ОтображатьСостояние 
										ИЛИ (Элементы.Результат.Вывод = ИспользованиеВывода.Запретить));
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначениеРасшифровки(Знач АдресДанныеРасшифровки, Знач ИдентификаторРасшифровки)
	
	ЗначениеРасшифровки = Неопределено;
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(АдресДанныеРасшифровки);
	СтрокаРасшифровки = ДанныеРасшифровки.Элементы[ИдентификаторРасшифровки];
	
	КоллекцияПолейРасшифровки = СтрокаРасшифровки.ПолучитьПоля();
	
	Если КоллекцияПолейРасшифровки.Количество() <> 0 Тогда
		ТекущееПоле = КоллекцияПолейРасшифровки[0].Поле;
		
		Если ТекущееПоле <> "Процент" И ТекущееПоле <> "Факт" И ТекущееПоле <> "План" Тогда
			ЗначениеРасшифровки = КоллекцияПолейРасшифровки[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЗначениеРасшифровки;
	
КонецФункции

&НаСервере
Функция ПолучитьКлючНастроек()
	
	Возврат СтрШаблон("Отчет.ТрудозатратыСпринта/%1/ТекущиеПользовательскиеНастройки", ВыбранныйКлючВарианта);
	
КонецФункции

&НаСервере
Процедура СохранитьНастройкиТекущегоВарианта()
	
	ПользовательскиеНастройки = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки;
	ОбщегоНазначенияВызовСервера.СохранитьСистемнуюНастройку(ПолучитьКлючНастроек(), , ПользовательскиеНастройки);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетНаСервере()
	
	ДанныеРасшифровкиКомпоновкиДанных = Новый ДанныеРасшифровкиКомпоновкиДанных;
	Результат.Очистить();
	
	Если НЕ ЗначениеЗаполнено(Спринт) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяДата = ТекущаяДатаСеанса();
	ДатаОкончанияСпринта = ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(Спринт, "ДатаОкончания");

	// Используем настройки компоновщика настроек.
	НастройкиСКД = Отчет.КомпоновщикНастроек.Настройки;
	
	// Заполняем параметры схемы.
	Параметр = НастройкиСКД.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Спринт"));	
	Параметр.Значение = Спринт;    
	
	Параметр = НастройкиСКД.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаСреза"));	
	Параметр.Значение = ?(ДатаОкончанияСпринта < ТекущаяДата, ДатаОкончанияСпринта, ТекущаяДата);    
	
	// Указываем вариант отчета.
	НастройкиСКД.ДополнительныеСвойства.Вставить("КлючВарианта", ВыбранныйКлючВарианта);
		
	// Вызываем процедуру компоновки отчета.
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	ОтчетОбъект.СкомпоноватьРезультат(Результат, ДанныеРасшифровкиКомпоновкиДанных);
	
	// Сохраним адрес данных расшифровки во временном хранилище
	АдресДанныеРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровкиКомпоновкиДанных, ЭтотОбъект.УникальныйИдентификатор);
	
	СохранитьНастройкиТекущегоВарианта();
    ОтобразитьСостояниеОтчета();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовок()

	ДанныеСпринта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Спринт, "Номер");
	ЭтотОбъект.Заголовок = СтрШаблон("Трудозатраты спринта #%1", ДанныеСпринта.Номер);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВариантОтчета()   
	
	КлючВарианта = ВариантОтчета + ?(ВыбранныйКлючВарианта = "ТрудозатратыСпринтаДетализация", "_Детальный", "");
	ЭтотОбъект.УстановитьТекущийВариант(КлючВарианта); 
	
	// Текстовая подсказка состояния отчета.
	ОтобразитьСостояниеОтчета(НСтр("ru = 'Выбран другой вариант отчета. Нажмите ""Сформировать"" для получения отчета.'"),
		БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПользовательскиеНастройки(Сохранять = Ложь)
	
	Для Каждого Элемент Из Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл   
		Если Элемент.Параметр = Новый ПараметрКомпоновкиДанных("Продукт") Тогда
			Элемент.Значение = ВыбранныеПродукты;  
			Элемент.Использование = ВыбранныеПродукты.Количество() > 0;
		ИначеЕсли Элемент.Параметр = Новый ПараметрКомпоновкиДанных("ГруппыЗаказчиков") Тогда
			Элемент.Значение = ВыбранныеГруппыЗаказчиков;  
			Элемент.Использование = ВыбранныеГруппыЗаказчиков.Количество() > 0;
		КонецЕсли;
	КонецЦикла;
	
	Если Сохранять Тогда 
		СохранитьНастройкиТекущегоВарианта();
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПометкуДляВыбранногоВарианта(ВыбранныйВариант, Элементы, ВыбранныйКлючВарианта)
	
	ВыбранныйКлючВарианта = ВыбранныйВариант;
	
	Для Каждого КнопкаВыбораВарианта Из Элементы.ГруппаВариантыОтчета.ПодчиненныеЭлементы Цикл 
		КнопкаВыбораВарианта.Пометка = (КнопкаВыбораВарианта.Имя = ВыбранныйВариант);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
