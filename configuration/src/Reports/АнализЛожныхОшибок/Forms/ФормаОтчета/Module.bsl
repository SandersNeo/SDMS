///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	ЗагрузитьПользовательскиеНастройки();
	СформироватьТаблицуЗаявок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ЗавершениеРаботы Тогда
		СохранитьПользовательскиеНастройки();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВыборПериода(Команда)
	
	Диалог             = Новый ДиалогРедактированияСтандартногоПериода();                                 
	Диалог.Период      = Период;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборПериода", ЭтотОбъект);

	Диалог.Показать(ОписаниеОповещения); 
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗаявокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	НайденнаяСтрока = ТаблицаЗаявок.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если НайденнаяСтрока <> Неопределено Тогда
		ПоказатьЗначение(, НайденнаяСтрока.Заявка);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗаявокПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбработатьВыборПериода(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Период.ДатаНачала    = Результат.ДатаНачала;
		Период.ДатаОкончания = Результат.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если ЗначениеЗаполнено(Период.ДатаНачала) И ЗначениеЗаполнено(Период.ДатаОкончания)
		И Период.ДатаОкончания > Период.ДатаНачала Тогда
		
		СформироватьТаблицуЗаявок();
	Иначе
		ПоказатьОповещениеПользователя("Неверно выбран период");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОткрытьФормуПодбораЗначений(Знач ПараметрыОткрытия, СписокЗначений, ЭлементПредставление)
		
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СписокЗначений", СписокЗначений);
	ДополнительныеПараметры.Вставить("ИмяЭлементПредставление", ЭлементПредставление);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьВыборЭлементов", ЭтотОбъект, ДополнительныеПараметры);

	ОткрытьФорму("ОбщаяФорма.ПодборЗначений", ПараметрыОткрытия, ЭтотОбъект, КлючУникальности, , , 
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьТаблицуЗаявок()
	
	ТаблицаЗаявок.Очистить();
					
	Запрос = Новый Запрос;
	Запрос.Текст =
	#Область ТекстЗапроса
	"ВЫБРАТЬ
	|	ЗаявкаНаРазработку.Ссылка КАК Ссылка,
	|	ЗаявкаНаРазработку.Номер КАК Номер,
	|	Пользователи.ФИО КАК Автор,
	|	ЗаявкаНаРазработку.ДатаСоздания КАК ДатаСоздания,
	|	ЗаявкаНаРазработку.Наименование КАК Наименование,
	|	ЗаявкаНаРазработку.Направление КАК Направление,
	|	ЗаявкаНаРазработкуСистемыРазработки.Система КАК Система,
	|	СтатусыЗаявокПоСистемам.Статус КАК Статус
	|ИЗ
	|	Документ.ЗаявкаНаРазработку КАК ЗаявкаНаРазработку
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку.СистемыРазработки КАК ЗаявкаНаРазработкуСистемыРазработки
	|		ПО (ЗаявкаНаРазработкуСистемыРазработки.Ссылка = ЗаявкаНаРазработку.Ссылка)
	|			И (ЗаявкаНаРазработкуСистемыРазработки.Система = &Система)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияИзмененийОбъектовПоСобытиям КАК ИсторияИзмененийОбъектовПоСобытиям
	|		ПО ЗаявкаНаРазработку.Ссылка = ИсторияИзмененийОбъектовПоСобытиям.Объект
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаявокПоСистемам КАК СтатусыЗаявокПоСистемам
	|		ПО (СтатусыЗаявокПоСистемам.Заявка = ЗаявкаНаРазработку.Ссылка)
	|			И (СтатусыЗаявокПоСистемам.Система = &Система)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ЗаявкаНаРазработку.Автор = Пользователи.Ссылка
	|ГДЕ
	|	ЗаявкаНаРазработку.Направление = &Направление
	|	И ЗаявкаНаРазработку.Дата > &ДатаНачала
	|	И ЗаявкаНаРазработку.Дата < &ДатаОкончания
	|	И ИсторияИзмененийОбъектовПоСобытиям.Данные ПОДОБНО &Подобно
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер УБЫВ";
	#КонецОбласти
	
	Запрос.УстановитьПараметр("Направление",   Направление);
	Запрос.УстановитьПараметр("Система",       Система);
	Запрос.УстановитьПараметр("ДатаНачала",    Период.ДатаНачала);                
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Подобно", "%Назначение%СтароеЗначение%Ошибка%НовоеЗначение%");
	
	РезультатЗапроса = Запрос.Выполнить();
		
	Если НЕ РезультатЗапроса.Пустой() Тогда
		НомерСтроки = 1;
		Выборка = РезультатЗапроса.Выбрать();
				
		Пока Выборка.Следующий() Цикл	
			НоваяСтрока = ТаблицаЗаявок.Добавить();
			
			НоваяСтрока.Автор               = Выборка.Автор;
			НоваяСтрока.ПредставлениеЗаявки = СтрШаблон("[%1] %2", Выборка.Номер, Выборка.Наименование);
			НоваяСтрока.НомерСтроки         = НомерСтроки;
			НоваяСтрока.Статус              = Выборка.Статус;
			НоваяСтрока.ДатаСоздания        = Выборка.ДатаСоздания;
			НоваяСтрока.Заявка              = Выборка.Ссылка;
				
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПользовательскиеНастройки()
	
	Ключи     = ПолучитьКлючиНастроек();	
	Настройки = ОбщегоНазначенияВызовСервера.ЗагрузитьНастройкиДанныхФормы(Ключи.КлючОбъекта, Ключи.КлючНастроек);
	
	Если Настройки <> Неопределено Тогда
		Направление = Настройки.Получить("Направление");
		Система     = Настройки.Получить("Система");
		
		Период.ДатаНачала    = Настройки.Получить("ДатаНачала");
		Период.ДатаОкончания = Настройки.Получить("ДатаОкончания");
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКлючиНастроек()
	
	Ключи = Новый Структура;

	Ключи.Вставить("КлючОбъекта",  "Отчет.АнализЛожныхОшибок.Формы.ФормаОтчета");
	Ключи.Вставить("КлючНастроек", "НастройкиФормы");
	
	Возврат Ключи;
	
КонецФункции

&НаКлиенте
Процедура СохранитьПользовательскиеНастройки()
	
	Настройки = Новый Соответствие;

	Настройки.Вставить("Направление",   Направление);
	Настройки.Вставить("Система",       Система);
	Настройки.Вставить("ДатаНачала",    Период.ДатаНачала);
	Настройки.Вставить("ДатаОкончания", Период.ДатаОкончания);
	
	СохранитьПользовательскиеНастройкиНаСервере(Настройки);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьПользовательскиеНастройкиНаСервере(Знач Настройки)
	
	Ключи = ПолучитьКлючиНастроек();
	
	ОбщегоНазначенияВызовСервера.СохранитьНастройкиДанныхФормы(Ключи.КлючОбъекта, Ключи.КлючНастроек, Настройки);
	
КонецПроцедуры

#КонецОбласти
