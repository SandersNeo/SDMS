///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ПолучитьДанныеОтчета(АдресРезультата, УИДЗамера) Экспорт
	
	ВремяНачала = ОценкаПроизводительности.НачатьЗамерВремени();
	
	ТекстHTML = СформироватьТекстHTML();
	ИнструментыСервер.ОповеститьИнструментОбОбновлении(ТекстHTML, АдресРезультата, УИДЗамера);
	
	ОценкаПроизводительности.ЗакончитьЗамерВремениТехнологический("Отчеты.ЗадачиНаТестирование.ПолучитьДанныеОтчета.ВыполнениеФонового", ВремяНачала, , Строка(УИДЗамера));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПодготовитьПредставлениеЗадачи(Знач Номер, Знач Наименование)
	
	ДлинаЧисла = 10;
	ОписаниеТипаЧисло = ОбщегоНазначенияКлиентСервер.ОписаниеТипаЧисло(ДлинаЧисла, 0);
	Номер = Формат(ОписаниеТипаЧисло.ПривестиЗначение(СтрЗаменить(Номер, Документы.Задача.ПолучитьПрефикс(), "")), "ЧГ=");
	
	Возврат СтрШаблон("%1. %2", Номер, Наименование);
	
КонецФункции

Функция СформироватьТекстHTML()
	
	ТекстHTML = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст =
#Область ТекстЗапроса
	"ВЫБРАТЬ
	|	ДокументЗадача.Ссылка КАК Задача,
	|	ДокументЗадача.Номер КАК Номер,
	|	ДокументЗадача.Наименование КАК Наименование,
	|	МАКСИМУМ(СвойстваЗадач.Период) КАК ДатаСтатуса,
	|	РАЗНОСТЬДАТ(МАКСИМУМ(СвойстваЗадач.Период), &ТекущаяДата, ДЕНЬ) КАК СрокТестирования
	|ИЗ
	|	Документ.Задача КАК ДокументЗадача
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваЗадач КАК СвойстваЗадач
	|		ПО ДокументЗадача.Ссылка = СвойстваЗадач.Объект
	|ГДЕ
	|	НЕ ДокументЗадача.ПометкаУдаления
	|	И ДокументЗадача.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.Тестирование)
	|	И ДокументЗадача.Назначена = &Назначена
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументЗадача.Ссылка,
	|	ДокументЗадача.Номер,
	|	ДокументЗадача.Наименование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументЗадача.Ссылка,
	|	ДокументЗадача.Номер,
	|	ДокументЗадача.Наименование,
	|	МАКСИМУМ(СвойстваЗадач.Период),
	|	РАЗНОСТЬДАТ(МАКСИМУМ(СвойстваЗадач.Период), &ТекущаяДата, ДЕНЬ)
	|ИЗ
	|	Документ.Задача КАК ДокументЗадача
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваЗадач КАК СвойстваЗадач
	|		ПО ДокументЗадача.Ссылка = СвойстваЗадач.Объект
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО ДокументЗадача.Статус = СтатусыОбъектов.Ссылка
	|ГДЕ
	|	НЕ ДокументЗадача.ПометкаУдаления
	|	И СтатусыОбъектов.Родитель = ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.Тестирование)
	|	И ДокументЗадача.Назначена = &Назначена
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументЗадача.Ссылка,
	|	ДокументЗадача.Номер,
	|	ДокументЗадача.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер";
#КонецОбласти
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Назначена", ПараметрыСеанса.ТекущийПользователь);			
	РезультатЗапроса = Запрос.Выполнить();
			
	Если НЕ РезультатЗапроса.Пустой() Тогда	
		ТекстHTML = ШаблонСтраницы();
						
		ВыборкаЗадачи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаЗадачи.Следующий() Цикл
			// Подготовка данных
			ИдентификаторЗадачи = СтрЗаменить(Строка(ВыборкаЗадачи.Задача.УникальныйИдентификатор()), "-", "");			
			ПредставлениеЗадачи = ПодготовитьПредставлениеЗадачи(ВыборкаЗадачи.Номер, ВыборкаЗадачи.Наименование);
			
			// Формирование HTML шаблона Задачи 
			ШаблонЗадачи = ШаблонЗадачи();
			ШаблонЗадачи = СтрЗаменить(ШаблонЗадачи, "<!--taskGUID-->", ИдентификаторЗадачи);
			ШаблонЗадачи = СтрЗаменить(ШаблонЗадачи, "<!--taskLink-->", ПолучитьНавигационнуюСсылку(ВыборкаЗадачи.Задача));
			ШаблонЗадачи = СтрЗаменить(ШаблонЗадачи, "<!--taskPreview-->", ПредставлениеЗадачи);
			ШаблонЗадачи = СтрЗаменить(ШаблонЗадачи, "<!--dateStatusTest-->", Формат(ВыборкаЗадачи.ДатаСтатуса, "ДФ=dd.MM.yyyy"));
			ШаблонЗадачи = СтрЗаменить(ШаблонЗадачи, "<!--periodTest-->", ВыборкаЗадачи.СрокТестирования);
			
			// Помещение шаблона Задачи в общий HTML страницы
			ТекстHTML = СтрЗаменить(ТекстHTML, "<!--taskRow-->", ШаблонЗадачи);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТекстHTML;
	
КонецФункции

Функция ШаблонЗадачи()
	
	// Параметры шаблона:
	// <!--taskGUID-->		 - GUID ссылки задачи	  - уникальный идентификатор без разделителей
	// <!--taskLink-->		 - Ссылка на задачу		  - внешняя ссылка на задачу
	// <!--taskPreview-->	 - Представление задачи	  - строка формата "12345. Тема задачи"
	// <!--dateStatusTest--> - Дата установки статуса - дата установки статуса Тестирование
	// <!--periodTest-->	 - Срок в статусе		  - срок с даты установки статуса Тестирование до текущей даты
			
	Шаблон =
	"<tr id=""taskRow_<!--taskGUID-->"">
	|	<td>
	|		<tr>
	|			<td class=""task""><a href=""<!--taskLink-->""><!--taskPreview--></a></td>
	|		</tr>
	|		<tr>
	|			<td>
	|				<table>
	|					<tr>
	|						<td class=""firstColumn"">Дата перевода в тестирование:</td>
	|						<td class=""secondColumn""><!--dateStatusTest--></td>
	|					</tr>
	|				</table>
	|			</td>
	|		</tr>
	|		<tr>
	|			<td>
	|				<table>
	|					<tr>
	|						<td class=""firstColumn"">Срок в статусе тестирование:</td>
	|						<td class=""secondColumn""><!--periodTest--> дней</td>
	|					</tr>
	|				</table>
	|			</td>
	|		</tr>
	|		<tr><td class=""divider""></td></tr>
	|	</td>
	|</tr>
	|<!--taskRow-->";
			
	Возврат Шаблон;
	
КонецФункции

Функция ШаблонСтраницы() 
	
	// Параметры шаблона:
	// <!--taskRow--> - строки задач
	
	Шаблон = 
	"<!DOCTYPE HTML>
	|<html lang=""ru"">
	|	<head>
	|		<meta charset=""UTF-8"">
	|		<meta http-equiv=""X-UA-Compatible"" content=""IE=9""/>
	|		<title></title>
	|		<style>
	|			td, a, div { padding: 2px 20px 0px 0px; vertical-align: text-top; font-family: Verdana, Arial, sans-serif; }
	|			.firstColumn { width: 220px; font-weight: 600; color: dimgray; font-size: 12px; padding-left: 21px; }
	|			.secondColumn { width: 100px; font-weight: 600; color: dimgray; font-size: 12px; padding-left: 21px; }
	|			.task { color: #2c77ff; font-weight: 600; font-size: 18px; }
	|			.task a {text-decoration: none; color: inherit; }
	|			.divider { padding: 10px; }
	|			.content { padding-bottom: 50px; }
	|		</style>
	|	</head>
	|	<body>
	|		<div class=""content"">
	|			<table>
	|				<!--taskRow-->
	|			</table>
	|		</div>
	|	</body>
	|</html>";
	
	Возврат Шаблон;
	
КонецФункции

#КонецОбласти

#КонецЕсли
