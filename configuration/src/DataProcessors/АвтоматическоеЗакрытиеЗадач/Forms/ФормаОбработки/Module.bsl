///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

// Адрес временном хранилище, куда фоновое задание будет помещать данные для клиента
&НаКлиенте
Перем АдресВоВременномХранилище;

&НаКлиенте
Перем ЗначениеПометки;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВерсияОбработки = "1.5.3";
	Заголовок = СтрШаблон("Автоматическое закрытие задач (версия %1)", ВерсияОбработки);
	
	КонецПериода = КонецМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(), -1));;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ЗакрываемыеЗадачи

&НаКлиенте
Процедура ЗакрываемыеЗадачиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	НайденнаяСтрока = ЗакрываемыеЗадачи.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если НайденнаяСтрока <> Неопределено И Поле.Имя <> "Пометка" Тогда
		ПоказатьЗначение(, НайденнаяСтрока.Задача);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗакрываемыеЗадачиПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ЗакрываемыеЗадачи.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если ТекущиеДанные.Закрыта = Истина Тогда
			ТекущиеДанные.Пометка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗакрытьОтмеченныеЗадачи(Команда)
	
	НайденныеСтроки = ЗакрываемыеЗадачи.НайтиСтроки(Новый Структура("Пометка", Истина));
	Если НайденныеСтроки.Количество() = 0 Тогда
		ПоказатьПредупреждение(, "Нет отмеченных задач для закрытия.", , "Автоматическое закрытие задач");
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ОбработатьОтветНаВопрос", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, "Отмеченные задачи будут переведены в статус ""Решена"". Продолжить?",
		РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, "Автоматическое закрытие задач");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокЗадач(Команда)
	
	Элементы.НадписьДлительнаяОперация.Заголовок = "Пожалуйста, подождите. Выполняется формирование списка задач...";
	Элементы.ОсновныеСтраницы.ТекущаяСтраница = Элементы.СтраницаДлительнойОперации;
	
	ЗакрываемыеЗадачи.Очистить();
	
	АдресВоВременномХранилище = ЗаполнитьСписокЗадачНаСервере(КонецПериода, УникальныйИдентификатор);
	ПодключитьОбработчикОжидания("ПроверитьНаличиеДанныхЗадачВоВременномХранилище", 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСправочнуюИнформацию(Команда)
	
	ПерейтиПоНавигационнойСсылке(
		ОбщегоНазначенияВызовСервера.ПолучитьКонстанту("КорневойURL") + "/docs/common/automatic-closing");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)

	УстановитьПометки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	
	УстановитьПометки(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЗакрытьЗадачиНаСервере()
	
	АдресВоВременномХранилище = Неопределено;
	
	ЗадачиНаОбработку = Новый Массив;
	Для Каждого СтрокаТаблицы Из ЗакрываемыеЗадачи Цикл
		Если СтрокаТаблицы.Пометка Тогда
			СвойстваЗадачи = Новый Структура;
			СвойстваЗадачи.Вставить("ИдентификаторСтроки", СтрокаТаблицы.ПолучитьИдентификатор());
			СвойстваЗадачи.Вставить("Задача", СтрокаТаблицы.Задача);
			СвойстваЗадачи.Вставить("Статус", СтрокаТаблицы.Статус);
			
			ЗадачиНаОбработку.Добавить(СвойстваЗадачи);
		КонецЕсли;
	КонецЦикла;
	
	Если ЗадачиНаОбработку.Количество() > 0 Тогда
		АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	
		ПараметрыФоновогоЗадания = Новый Массив;
		ПараметрыФоновогоЗадания.Добавить(ЗадачиНаОбработку);
		ПараметрыФоновогоЗадания.Добавить(АдресВоВременномХранилище);
	
		ОбщегоНазначения.СоздатьФоновоеЗадание("Обработки.АвтоматическоеЗакрытиеЗадач.ЗакрытьОтмеченныеЗадачи",
			ПараметрыФоновогоЗадания, "Закрытие задач обработкой ""Автоматическое закрытие задач""",
			УникальныйИдентификатор);
	КонецЕсли;
		
	Возврат АдресВоВременномХранилище;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗаполнитьСписокЗадачНаСервере(Знач КонецПериода, Знач ИдентификаторФормы)
	
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(Неопределено, ИдентификаторФормы);
	
	ПараметрыФоновогоЗадания = Новый Массив;
	ПараметрыФоновогоЗадания.Добавить(КонецПериода);
	ПараметрыФоновогоЗадания.Добавить(АдресВоВременномХранилище);
	
	ОбщегоНазначения.СоздатьФоновоеЗадание("Обработки.АвтоматическоеЗакрытиеЗадач.НайтиНезакрытыеЗадачи",
		ПараметрыФоновогоЗадания, "Поиск незакрытых задач обработкой ""Автоматическое закрытие задач""",
		ИдентификаторФормы);
		
	Возврат АдресВоВременномХранилище;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьОтветНаВопрос(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		АдресВоВременномХранилище = ЗакрытьЗадачиНаСервере();
		
		Если АдресВоВременномХранилище = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Элементы.НадписьДлительнаяОперация.Заголовок = "Пожалуйста, подождите. Выполняется операция закрытия задач...";
		Элементы.ОсновныеСтраницы.ТекущаяСтраница = Элементы.СтраницаДлительнойОперации;
		
		ПодключитьОбработчикОжидания("ПроверитьВоВременномХранилищеРезультатЗакрытияЗадач", 1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикИзменениеПометок()
	
	Для Каждого СтрокаТаблицы Из ЗакрываемыеЗадачи Цикл
		Если НЕ СтрокаТаблицы.Закрыта Тогда
			СтрокаТаблицы.Пометка = ЗначениеПометки;
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеПометки = Неопределено;
	
	Элементы.ОсновныеСтраницы.ТекущаяСтраница = Элементы.СтраницаСпискаЗадач;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНаличиеДанныхЗадачВоВременномХранилище()
	
	ДанныеХранилища = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	Если ТипЗнч(ДанныеХранилища) = Тип("Массив") Тогда
		ОтключитьОбработчикОжидания("ПроверитьНаличиеДанныхЗадачВоВременномХранилище");
		
		Для Каждого ЭлементКоллекции Из ДанныеХранилища Цикл
			ЗаполнитьЗначенияСвойств(ЗакрываемыеЗадачи.Добавить(), ЭлементКоллекции);
		КонецЦикла;
		
		УдалитьИзВременногоХранилища(АдресВоВременномХранилище);
		АдресВоВременномХранилище = Неопределено;
		
		Элементы.ОсновныеСтраницы.ТекущаяСтраница = Элементы.СтраницаСпискаЗадач;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВоВременномХранилищеРезультатЗакрытияЗадач()

	ДанныеХранилища = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	Если ТипЗнч(ДанныеХранилища) = Тип("Структура") Тогда
		
		Если ДанныеХранилища.Завершена = Истина Тогда
			ОтключитьОбработчикОжидания("ПроверитьВоВременномХранилищеРезультатЗакрытияЗадач");
			
			Если ПустаяСтрока(ДанныеХранилища.ТекстОшибки) Тогда
				
				Для Каждого СвойстваЗадачи Из ДанныеХранилища.ОбработанныеЗадачи Цикл
					СтрокаТаблицы = ЗакрываемыеЗадачи.НайтиПоИдентификатору(СвойстваЗадачи.ИдентификаторСтроки);
					
					Если СтрокаТаблицы <> Неопределено Тогда
						СтрокаТаблицы.ИндексКартинки = СвойстваЗадачи.ИндексКартинки;
						СтрокаТаблицы.Статус  = СвойстваЗадачи.Статус;
						СтрокаТаблицы.Пометка = СвойстваЗадачи.Пометка;
						СтрокаТаблицы.Закрыта = СвойстваЗадачи.Закрыта;
					КонецЕсли;
				КонецЦикла;
			Иначе
				ПоказатьПредупреждение(, "Во время операции закрытия задач возникла ошибка:
					|" + ДанныеХранилища.ТекстОшибки, , "Автоматическое закрытие задач");
			КонецЕсли;
		
			УдалитьИзВременногоХранилища(АдресВоВременномХранилище);
			АдресВоВременномХранилище = Неопределено;
		
			Элементы.ОсновныеСтраницы.ТекущаяСтраница = Элементы.СтраницаСпискаЗадач;
		Иначе
			Элементы.НадписьДлительнаяОперация.Заголовок = ДанныеХранилища.Сообщение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Знач Пометка)
	
	Элементы.НадписьДлительнаяОперация.Заголовок = "Пожалуйста, подождите. Выполняется изменение пометок...";
	Элементы.ОсновныеСтраницы.ТекущаяСтраница    = Элементы.СтраницаДлительнойОперации;
	
	ЗначениеПометки = Пометка;
	
	ПодключитьОбработчикОжидания("ОбработчикИзменениеПометок", 0.5, Истина);
	
КонецПроцедуры

#КонецОбласти
