///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

Процедура ПолучитьДанныеЗаявкиВРазработке(Фильтр, Направления, Статусы, Системы, АдресРезультата, УИДЗамера) Экспорт
	
	ВремяНачала = ОценкаПроизводительности.НачатьЗамерВремени();
	
	ДанныеДерева = СформироватьСписокЗаявкиВРазработке(Фильтр, Направления, Статусы, Системы);
	ИнструментыСервер.ОповеститьИнструментОбОбновлении(ДанныеДерева, АдресРезультата, УИДЗамера);
	
	ОценкаПроизводительности.ЗакончитьЗамерВремениТехнологический("Обработки.Разработка.ПолучитьДанныеЗаявкиВРазработке.ВыполнениеФонового", ВремяНачала, , Строка(УИДЗамера));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьСписокЗаявкиВРазработке(Фильтр, Направления, Статусы, Системы)
	
	КолонкиИнструмента = Новый Массив;
	КолонкиИнструмента.Добавить("Направление");
	КолонкиИнструмента.Добавить("Заявка");
	КолонкиИнструмента.Добавить("НесколькоСистем");
	КолонкиИнструмента.Добавить("Назначение");
	КолонкиИнструмента.Добавить("ИндексКартинки");
	КолонкиИнструмента.Добавить("Наименование");
	КолонкиИнструмента.Добавить("Назначена");
	КолонкиИнструмента.Добавить("Порядок");
	КолонкиИнструмента.Добавить("ОбъектКомментарий");
	КолонкиИнструмента.Добавить("UID");
	КолонкиИнструмента.Добавить("ЭтоГруппа");
	КолонкиИнструмента.Добавить("ПланируемыеТрудозатраты");
	КолонкиИнструмента.Добавить("ФактическиеТрудозатраты");
	КолонкиИнструмента.Добавить("СписокСистем");
	КолонкиИнструмента.Добавить("НесколькоСистемКартинка");
	КолонкиИнструмента.Добавить("ПревышениеТрудозатрат");
	КолонкиИнструмента.Добавить("Система");
	КолонкиИнструмента.Добавить("ЦелеваяЗаявка");
	
	Дерево = Новый ДеревоЗначений;
	Для Каждого Колонка Из КолонкиИнструмента Цикл
		Дерево.Колонки.Добавить(Колонка);
	КонецЦикла;
	
	ИндексКартинки_Группа = Справочники.СтатусыОбъектов.ИндексКартинкиГруппа();
		
	ДоступныеНаправления = Новый Массив;
	Для Каждого ЭлементКоллекции Из Направления Цикл
		Если ЭлементКоллекции.Значение.Использование = Истина Тогда
			ДоступныеНаправления.Добавить(ЭлементКоллекции.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	СписокСтатусов = Новый СписокЗначений;
	Для Каждого ЭлементКоллекции Из Статусы Цикл
		Если ЭлементКоллекции.Значение.Использование Тогда
			СписокСтатусов.Добавить(ЭлементКоллекции.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	ДоступныеСистемы = Новый СписокЗначений;
	Для Каждого ЭлементКоллекции Из Системы Цикл
		Если ЭлементКоллекции.Значение.Использование Тогда
			ДоступныеСистемы.Добавить(ЭлементКоллекции.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	ОтображатьГруппуСистемы = (ДоступныеСистемы.Количество() <> 1);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 	
#Область ТекстЗапроса
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЗаявкаНаРазработку.Ссылка КАК Заявка,
	|	СистемыЗаявки.Система КАК Система
	|ПОМЕСТИТЬ ЗаявкиСистемы
	|ИЗ
	|	Документ.ЗаявкаНаРазработку КАК ЗаявкаНаРазработку
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку.СистемыРазработки КАК СистемыЗаявки
	|		ПО ЗаявкаНаРазработку.Ссылка = СистемыЗаявки.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ОтборПоНаправлениям
	|				ТОГДА ЗаявкаНаРазработку.Направление В (&Направление)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ОтборПоСистемам
	|				ТОГДА СистемыЗаявки.Система В (&ВыбранныеСистемы)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И НЕ ЗаявкаНаРазработку.Черновик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкиСистемы.Заявка КАК Заявка,
	|	ЗаявкиСистемы.Система КАК Система,
	|	СтатусыОбъектов.Ссылка КАК Статус,
	|	СтатусыОбъектов.ИндексКартинки КАК ИндексКартинки,
	|	СтатусыОбъектов.Порядок КАК ПорядокСтатуса
	|ПОМЕСТИТЬ МинимальныеСтатусы
	|ИЗ
	|	ЗаявкиСистемы КАК ЗаявкиСистемы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МинимальныеСтатусыЗаявок КАК МинимальныеСтатусыЗаявок
	|		ПО ЗаявкиСистемы.Заявка = МинимальныеСтатусыЗаявок.Заявка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО (МинимальныеСтатусыЗаявок.Статус = СтатусыОбъектов.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкиСистемы.Заявка КАК Заявка,
	|	СтатусыОбъектов.Порядок КАК ПорядокСтатуса,
	|	СтатусыОбъектов.ИндексКартинки КАК ИндексКартинки,
	|	СтатусыЗаявокПоСистемам.Система КАК Система,
	|	СтатусыЗаявокПоСистемам.Статус КАК Статус
	|ПОМЕСТИТЬ СтатусыПоСистемам
	|ИЗ
	|	ЗаявкиСистемы КАК ЗаявкиСистемы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаявокПоСистемам КАК СтатусыЗаявокПоСистемам
	|		ПО ЗаявкиСистемы.Заявка = СтатусыЗаявокПоСистемам.Заявка
	|			И ЗаявкиСистемы.Система = СтатусыЗаявокПоСистемам.Система
	|			И (ЗаявкиСистемы.Система В (&СистемыПользователя))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО (СтатусыЗаявокПоСистемам.Статус = СтатусыОбъектов.Ссылка)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ОтборПоСтатусам
	|				ТОГДА СтатусыОбъектов.Ссылка В (&ВыбранныеСтатусы)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыПоСистемам.Заявка КАК Заявка,
	|	ВЫБОР
	|		КОГДА СтатусыПоСистемам.Заявка ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(МинимальныеСтатусы.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ПустаяСсылка))
	|		ИНАЧЕ СтатусыПоСистемам.Статус
	|	КОНЕЦ КАК СтатусЗаявки,
	|	ВЫБОР
	|		КОГДА СтатусыПоСистемам.Заявка ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(МинимальныеСтатусы.ИндексКартинки, 0)
	|		ИНАЧЕ СтатусыПоСистемам.ИндексКартинки
	|	КОНЕЦ КАК ИндексКартинки,
	|	ВЫБОР
	|		КОГДА СтатусыПоСистемам.Заявка ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(МинимальныеСтатусы.ПорядокСтатуса, 0)
	|		ИНАЧЕ СтатусыПоСистемам.ПорядокСтатуса
	|	КОНЕЦ КАК ПорядокСтатуса,
	|	СтатусыПоСистемам.Система КАК Система
	|ПОМЕСТИТЬ СтатусыЗаявок
	|ИЗ
	|	СтатусыПоСистемам КАК СтатусыПоСистемам
	|		ЛЕВОЕ СОЕДИНЕНИЕ МинимальныеСтатусы КАК МинимальныеСтатусы
	|		ПО (МинимальныеСтатусы.Заявка = СтатусыПоСистемам.Заявка)
	|			И (МинимальныеСтатусы.Система = СтатусыПоСистемам.Система)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыЗаявок.Заявка КАК Заявка,
	|	СУММА(ВЫБОР
	|			КОГДА Сообщения.КатегорияСообщения = ЗНАЧЕНИЕ(Перечисление.КатегорииСообщенийПользователя.Комментарии)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Комментарии
	|ПОМЕСТИТЬ СобытияЗаявок
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		СтатусыЗаявок.Заявка КАК Заявка
	|	ИЗ
	|		СтатусыЗаявок КАК СтатусыЗаявок) КАК СтатусыЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПодготовленныеСообщенияПользователяПоКатегориям КАК Сообщения
	|		ПО (СтатусыЗаявок.Заявка = (ВЫРАЗИТЬ(Сообщения.Объект КАК Документ.ЗаявкаНаРазработку)))
	|ГДЕ
	|	Сообщения.Пользователь = &Пользователь
	|	И НЕ Сообщения.Отправлено
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатусыЗаявок.Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	ЗаявкиСистемы.Заявка КАК Заявка,
	|	МАКСИМУМ(ОчередьЗаявок.Порядок) КАК Порядок,
	|	ЗаявкиСистемы.Система КАК Система
	|ПОМЕСТИТЬ ПорядкиЗаявок
	|ИЗ
	|	ЗаявкиСистемы КАК ЗаявкиСистемы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОчередиЗаявок КАК ОчередьЗаявок
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючОчереди КАК КлючОчереди
	|			ПО (КлючОчереди.Ссылка = ОчередьЗаявок.КлючОчередиОбъекта)
	|				И (КлючОчереди.ВидОчереди = ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.НаправлениеСистемаГруппаЗаказчиков))
	|		ПО ЗаявкиСистемы.Заявка = ОчередьЗаявок.Заявка
	|			И (ЗаявкиСистемы.Система = КлючОчереди.Система)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкиСистемы.Заявка,
	|	ЗаявкиСистемы.Система
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ЗаявкиСистемы.Заявка,
	|	ОчередьЗаявок.Порядок,
	|	ЗаявкиСистемы.Система
	|ИЗ
	|	ЗаявкиСистемы КАК ЗаявкиСистемы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОчередиЗаявок КАК ОчередьЗаявок
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючОчереди КАК КлючОчереди
	|			ПО (КлючОчереди.Ссылка = ОчередьЗаявок.КлючОчередиОбъекта)
	|				И (КлючОчереди.ВидОчереди = ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.НаправлениеСистемаГруппаЗаказчиков))
	|		ПО ЗаявкиСистемы.Заявка = ОчередьЗаявок.Заявка
	|			И (ЗаявкиСистемы.Система = КлючОчереди.Система)
	|			И (КлючОчереди.Система В (&СистемыПользователя))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ПорядкиЗаявок.Приоритет) КАК МинимальныйПриоритет,
	|	ПорядкиЗаявок.Система КАК Система,
	|	ПорядкиЗаявок.Заявка КАК Заявка
	|ПОМЕСТИТЬ МинимальныеПорядкиЗаявок
	|ИЗ
	|	ПорядкиЗаявок КАК ПорядкиЗаявок
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядкиЗаявок.Заявка,
	|	ПорядкиЗаявок.Система
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядкиЗаявок.Заявка КАК Заявка,
	|	ПорядкиЗаявок.Система КАК Система,
	|	ПорядкиЗаявок.Порядок КАК Порядок
	|ПОМЕСТИТЬ ПодготовленныеПорядкиЗаявок
	|ИЗ
	|	ПорядкиЗаявок КАК ПорядкиЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МинимальныеПорядкиЗаявок КАК МинимальныеПорядки
	|		ПО ПорядкиЗаявок.Заявка = МинимальныеПорядки.Заявка
	|			И ПорядкиЗаявок.Система = МинимальныеПорядки.Система
	|			И ПорядкиЗаявок.Приоритет = МинимальныеПорядки.МинимальныйПриоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛичныеДелаСрезПоследних.Сотрудник КАК Пользователь,
	|	ВЫРАЗИТЬ(ЛичныеДелаСрезПоследних.Данные КАК Справочник.Филиалы) КАК Филиал
	|ПОМЕСТИТЬ ЛичныеДелаФилиалы
	|ИЗ
	|	РегистрСведений.ЛичныеДела.СрезПоследних(&ТекущаяДата, Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПереведенВДругоеПодразделение)) КАК ЛичныеДелаСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МинимальныеСтатусы.Заявка КАК Заявка,
	|	Задача.Ссылка КАК Задача,
	|	Задача.СистемаУчета КАК Система,
	|	Задача.Статус КАК СтатусЗадачи,
	|	ЕСТЬNULL(ПланируемыеТрудозатраты.Трудозатраты, 0) КАК ПланТрудозатрат,
	|	ВЫБОР
	|		КОГДА Задача.Назначена = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗадачаНазначена,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Задача.Назначена, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) = &Пользователь
	|			ТОГДА ""На мне""
	|		КОГДА ЕСТЬNULL(Задача.Назначена, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) = Задача.Заказчик
	|			ТОГДА ""Заказчик""
	|		КОГДА НЕ Филиалы.ТипФилиала ЕСТЬ NULL
	|				И Филиалы.ТипФилиала <> ЗНАЧЕНИЕ(Перечисление.ТипыФилиалов.НеIT)
	|			ТОГДА ""IT""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Назначена,
	|	ВЫБОР
	|		КОГДА Задача.Филиал = &Филиал
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НаМоемФилиале
	|ПОМЕСТИТЬ ЗадачиЗаявок
	|ИЗ
	|	МинимальныеСтатусы КАК МинимальныеСтатусы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Задача КАК Задача
	|		ПО (МинимальныеСтатусы.Заявка = (ВЫРАЗИТЬ(Задача.ОбъектОснование КАК Документ.ЗаявкаНаРазработку)))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЛичныеДелаФилиалы КАК ЛичныеДелаФилиалы
	|		ПО (Задача.Назначена = ЛичныеДелаФилиалы.Пользователь)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК Филиалы
	|		ПО (ЛичныеДелаФилиалы.Филиал = Филиалы.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПланируемыеТрудозатраты КАК ПланируемыеТрудозатраты
	|		ПО (Задача.Ссылка = ПланируемыеТрудозатраты.Объект)
	|			И (ПланируемыеТрудозатраты.ТипТрудозатрат = ЗНАЧЕНИЕ(Перечисление.ТипыТрудозатрат.Разработка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗадачиЗаявок.Задача КАК Задача,
	|	СУММА(ЕСТЬNULL(Трудозатраты.Затрата, 0)) КАК Затрата
	|ПОМЕСТИТЬ ТрудозатратыЗадач
	|ИЗ
	|	ЗадачиЗаявок КАК ЗадачиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Трудозатраты КАК Трудозатраты
	|		ПО (ЗадачиЗаявок.Задача = (ВЫРАЗИТЬ(Трудозатраты.Объект КАК Документ.Задача)))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗадачиЗаявок.Задача
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗадачиЗаявок.Заявка КАК Заявка,
	|	СУММА(ЗадачиЗаявок.ПланТрудозатрат) КАК ПланТрудозатрат,
	|	СУММА(ЕСТЬNULL(ТрудозатратыЗадач.Затрата, 0)) КАК Затрата
	|ПОМЕСТИТЬ ТрудозатратыЗаявок
	|ИЗ
	|	ЗадачиЗаявок КАК ЗадачиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТрудозатратыЗадач КАК ТрудозатратыЗадач
	|		ПО ЗадачиЗаявок.Задача = ТрудозатратыЗадач.Задача
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗадачиЗаявок.Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗадачиЗаявок.Заявка КАК Заявка,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗадачиЗаявок.Система) = 1
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК НесколькоСистем
	|ПОМЕСТИТЬ КоличествоСистемЗаявок
	|ИЗ
	|	ЗадачиЗаявок КАК ЗадачиЗаявок
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗадачиЗаявок.Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтатусыЗаявок.Заявка КАК Заявка,
	|	""["" + ЗаявкаНаРазработку.Номер + ""] "" + ЗаявкаНаРазработку.Наименование КАК Наименование,
	|	ЗаявкаНаРазработку.Направление КАК Направление,
	|	ЗаявкаНаРазработку.Направление.Наименование КАК НаправлениеНаименование,
	|	ЗаявкаНаРазработку.СрокРеализации КАК СрокРеализации,
	|	ЕСТЬNULL(СерьезностьОшибок.ИмяКартинки, НазначенияЗадач.ИмяКартинки) КАК НазначениеИмяКартинки,
	|	СтатусыЗаявок.ПорядокСтатуса КАК ПорядокСтатуса,
	|	СтатусыЗаявок.ИндексКартинки КАК ИндексКартинки,
	|	ЕСТЬNULL(ТрудозатратыЗаявок.ПланТрудозатрат, 0) КАК ПланируемыеТрудозатраты,
	|	ЕСТЬNULL(ТрудозатратыЗаявок.Затрата, 0) КАК ФактическиеТрудозатраты,
	|	ЕСТЬNULL(СобытияЗаявок.Комментарии, 0) КАК Комментарии,
	|	ВЫБОР
	|		КОГДА НЕ ОчередьЗаявокПродуктСистема.Порядок ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(ОчередьЗаявокПродуктСистема.Порядок, 0)
	|		КОГДА НЕ ОчередьЗаявокПродукт.Порядок ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(ОчередьЗаявокПродукт.Порядок, 0)
	|		ИНАЧЕ ЕСТЬNULL(ПорядкиЗаявок.Порядок, 0)
	|	КОНЕЦ КАК Порядок,
	|	ЕСТЬNULL(КоличествоСистем.НесколькоСистем, ЛОЖЬ) КАК НесколькоСистем,
	|	СтатусыЗаявок.Система КАК Система,
	|	ЕСТЬNULL(ЗначенияДополнительныхРеквизитовОбъектов.Значение, ЛОЖЬ) КАК ЦелеваяЗаявка
	|ИЗ
	|	СтатусыЗаявок КАК СтатусыЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку КАК ЗаявкаНаРазработку
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НазначенияЗадач КАК НазначенияЗадач
	|			ПО ЗаявкаНаРазработку.Назначение = НазначенияЗадач.Ссылка
	|				И (НазначенияЗадач.ПометкаУдаления = ЛОЖЬ)
	|		ПО СтатусыЗаявок.Заявка = ЗаявкаНаРазработку.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияДополнительныхРеквизитовОбъектов КАК ЗначенияДополнительныхРеквизитовОбъектов
	|		ПО СтатусыЗаявок.Заявка = ЗначенияДополнительныхРеквизитовОбъектов.Объект
	|			И (ЗначенияДополнительныхРеквизитовОбъектов.Реквизит = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДополнительныхРеквизитов.ЦелеваяЗаявка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерьезностьОшибок КАК СерьезностьОшибок
	|		ПО (ЗаявкаНаРазработку.СерьезностьОшибки = СерьезностьОшибок.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТрудозатратыЗаявок КАК ТрудозатратыЗаявок
	|		ПО СтатусыЗаявок.Заявка = ТрудозатратыЗаявок.Заявка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СобытияЗаявок КАК СобытияЗаявок
	|		ПО СтатусыЗаявок.Заявка = СобытияЗаявок.Заявка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПодготовленныеПорядкиЗаявок КАК ПорядкиЗаявок
	|		ПО СтатусыЗаявок.Заявка = ПорядкиЗаявок.Заявка
	|			И СтатусыЗаявок.Система = ПорядкиЗаявок.Система
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоСистемЗаявок КАК КоличествоСистем
	|		ПО СтатусыЗаявок.Заявка = КоличествоСистем.Заявка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Продукты КАК Продукты
	|		ПО (Продукты.Ссылка = ЗаявкаНаРазработку.Продукт)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОчередиЗаявок КАК ОчередьЗаявокПродукт
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючОчереди КАК КлючОчередиПродукт
	|			ПО (КлючОчередиПродукт.Ссылка = ОчередьЗаявокПродукт.КлючОчередиОбъекта)
	|				И (КлючОчередиПродукт.ВидОчереди = ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.Продукт))
	|		ПО (ЗаявкаНаРазработку.Ссылка = ОчередьЗаявокПродукт.Заявка)
	|			И (ЕСТЬNULL(Продукты.Ссылка, НЕОПРЕДЕЛЕНО) = КлючОчередиПродукт.Продукт)
	|			И (ЕСТЬNULL(Продукты.ВидОчереди, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.Продукт))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОчередиЗаявок КАК ОчередьЗаявокПродуктСистема
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючОчереди КАК КлючОчередиПродуктСистема
	|			ПО (КлючОчередиПродуктСистема.Ссылка = ОчередьЗаявокПродуктСистема.КлючОчередиОбъекта)
	|				И (КлючОчередиПродуктСистема.ВидОчереди = ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.ПродуктСистема))
	|		ПО (ЗаявкаНаРазработку.Ссылка = ОчередьЗаявокПродуктСистема.Заявка)
	|			И (ЕСТЬNULL(Продукты.ВидОчереди, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.ПродуктСистема))
	|			И (КлючОчередиПродуктСистема.Система = СтатусыЗаявок.Система)
	|			И (ЕСТЬNULL(Продукты.Ссылка, НЕОПРЕДЕЛЕНО) = КлючОчередиПродуктСистема.Продукт)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НаправлениеНаименование,
	|	Система,
	|	ПорядокСтатуса,
	|	Порядок УБЫВ
	|ИТОГИ ПО
	|	Направление,
	|	Система
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗадачиЗаявок.Заявка КАК Заявка,
	|	ЗадачиЗаявок.Назначена КАК Назначена,
	|	ЗадачиЗаявок.НаМоемФилиале КАК НаМоемФилиале
	|ИЗ
	|	ЗадачиЗаявок КАК ЗадачиЗаявок
	|ГДЕ
	|	ЗадачиЗаявок.ЗадачаНазначена
	|	И НЕ ЗадачиЗаявок.СтатусЗадачи В (ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.Отклонен), ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.Решен))";	
#КонецОбласти

	Запрос.УстановитьПараметр("ВыбранныеСистемы", ДоступныеСистемы);
	Запрос.УстановитьПараметр("СистемыПользователя", ПараметрыСеанса.РазрабатываемыеСистемы);
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("Филиал", ПараметрыСеанса.Филиал);
	Запрос.УстановитьПараметр("Направление", ДоступныеНаправления);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ВыбранныеСтатусы", СписокСтатусов);   
	
	Запрос.УстановитьПараметр("ОтборПоНаправлениям", ДоступныеНаправления.Количество() > 0);
	Запрос.УстановитьПараметр("ОтборПоСистемам", ДоступныеСистемы.Количество() > 0);
	Запрос.УстановитьПараметр("ОтборПоСтатусам", СписокСтатусов.Количество() > 0);
	
	Пакеты = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	ДанныеЗаявок = Пакеты.Получить(Пакеты.Количество() - 2);
	ТаблицаНазначена = Пакеты.Получить(Пакеты.Количество() - 1).Выгрузить();
	
	ВыборкаНаправление = ДанныеЗаявок.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНаправление.Следующий() Цикл
		СтрокаНаправление = Дерево.Строки.Добавить(); 
		СтрокаНаправление.Направление = ВыборкаНаправление.Направление;
		СтрокаНаправление.ИндексКартинки = ИндексКартинки_Группа;
		
		СтрокаНаправление.Наименование = Строка(ВыборкаНаправление.Направление);
			
		СтрокаНаправление.ЭтоГруппа = Истина;
		ИдентификаторНаправления = Строка(СтрокаНаправление.Направление.УникальныйИдентификатор());
		СтрокаНаправление.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторНаправления);
		
		ВыборкаСистем = ВыборкаНаправление.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСистем.Следующий() Цикл
			Если ОтображатьГруппуСистемы Тогда
				СтрокаСистема = СтрокаНаправление.Строки.Добавить();
				СтрокаСистема.Система = ВыборкаСистем.Система;
				СтрокаСистема.Наименование = Строка(ВыборкаСистем.Система);
				СтрокаСистема.ИндексКартинки = ИндексКартинки_Группа;
				СтрокаСистема.ЭтоГруппа = Истина;
				
				ИдентификаторНаправления = Строка(СтрокаСистема.Система.УникальныйИдентификатор());
				СтрокаСистема.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторНаправления);
				
			Иначе
				СтрокаСистема = СтрокаНаправление; 
			КонецЕсли;
			
			ВыборкаЗаявка = ВыборкаСистем.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
 		
			Пока ВыборкаЗаявка.Следующий() Цикл
				Назначена = "";
				НаМне = Ложь;
				НаМоемФилиале = Ложь;
				НайденныеСтроки = ТаблицаНазначена.НайтиСтроки(Новый Структура("Заявка", ВыборкаЗаявка.Заявка));
				Если НайденныеСтроки.Количество() > 0 Тогда
					МассивНазначена = Новый Массив;
					Для Каждого Строка Из НайденныеСтроки Цикл
						НаМоемФилиале = НаМоемФилиале ИЛИ Строка.НаМоемФилиале;
						НаМне = НаМне ИЛИ (Строка.Назначена = "На мне");
						
						Если МассивНазначена.Найти(Строка.Назначена) = Неопределено Тогда
							МассивНазначена.Добавить(Строка.Назначена);
						КонецЕсли;
					КонецЦикла;
					Назначена = СтрСоединить(МассивНазначена, " / ");
				КонецЕсли;
				
				Если Фильтр = 1 И НЕ НаМне Тогда
					Продолжить;
				ИначеЕсли Фильтр = 2 И НЕ НаМоемФилиале Тогда
					Продолжить;
				КонецЕсли;
				
				СтрокаЗаявка = СтрокаСистема.Строки.Добавить();
				
				ЗаполнитьЗначенияСвойств(СтрокаЗаявка, ВыборкаЗаявка);
				СтрокаЗаявка.Назначение = БиблиотекаКартинок[ВыборкаЗаявка.НазначениеИмяКартинки];
				
				Если ВыборкаЗаявка.Порядок = 0 Тогда
					СтрокаЗаявка.Порядок = "";
				КонецЕсли;
				
				// Количество комментариев для пользователя.
				СтрокаЗаявка.ОбъектКомментарий = ?(ВыборкаЗаявка.Комментарии = 0, "", ВыборкаЗаявка.Комментарии);
				СтрокаЗаявка.НесколькоСистемКартинка = ?(СтрокаЗаявка.НесколькоСистем, БиблиотекаКартинок.СтатусРешен, Неопределено);
				СтрокаЗаявка.Назначена = Назначена;
				
				СтрокаЗаявка.ЭтоГруппа = Ложь;
				ИдентификаторЗаявки = Строка(ВыборкаЗаявка.Заявка.УникальныйИдентификатор());
				
				СтрокаЗаявка.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(СтрШаблон("%1;%2", 
					ИдентификаторНаправления, ИдентификаторЗаявки));
				
				Если ЗначениеЗаполнено(ВыборкаЗаявка.СрокРеализации) Тогда
					ПредставлениеЗаявки = СтрШаблон("%1 (срок до %2)",
						СтрокаЗаявка.Наименование, Формат(ВыборкаЗаявка.СрокРеализации,"ДФ=dd.MM.yyyy"));
				КонецЕсли;
			КонецЦикла;
			
			Если ОтображатьГруппуСистемы И СтрокаСистема.Строки.Количество() = 0 Тогда
				СтрокаНаправление.Строки.Удалить(СтрокаСистема);
			КонецЕсли;
		КонецЦикла;
		
		Если СтрокаНаправление.Строки.Количество() = 0 Тогда
			Дерево.Строки.Удалить(СтрокаНаправление);
		КонецЕсли;
	КонецЦикла;
	
	ДанныеДерева = ИнструментыСервер.ПодготовитьДанныеИнструментаДляКлиента(Дерево, КолонкиИнструмента);
	
	Возврат ДанныеДерева;
	
КонецФункции

#КонецОбласти

#КонецЕсли
