///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВыполнитьПолнотекстовыйПоиск(Знач ПараметрыПоиска) Экспорт
	
	СтрокаПоиска   = ПараметрыПоиска.СтрокаПоиска;
	Направление    = ПараметрыПоиска.НаправлениеПоиска;
	ТекущаяПозиция = ПараметрыПоиска.ТекущаяПозиция;
	
	РазмерПорции   = 10;
	ОписаниеОшибки = "";
	КодОшибки      = "";
	
	СписокПоиска = ПолнотекстовыйПоиск.СоздатьСписок(СтрокаПоиска, РазмерПорции);
	Если ПараметрыПоиска.СемантическийАнализ Тогда
		СписокПоиска.ОбластьПоиска.Добавить(Метаданные.РегистрыСведений.ТекстыОбъектовДляСемантическогоАнализа);
	ИначеЕсли ПараметрыПоиска.ПоискПоНомеру Тогда
		СписокПоиска.ОбластьПоиска.Добавить(Метаданные.Справочники.Проекты);
		СписокПоиска.ОбластьПоиска.Добавить(Метаданные.Документы.ВнутреннееЗадание);
		СписокПоиска.ОбластьПоиска.Добавить(Метаданные.Документы.Задача);
		СписокПоиска.ОбластьПоиска.Добавить(Метаданные.Документы.ЗаявкаНаРазработку);
		СписокПоиска.СтрокаПоиска = "номер РЯДОМ *" + СписокПоиска.СтрокаПоиска;
	ИначеЕсли ПараметрыПоиска.ПоискПоТегу Тогда
		СписокПоиска.ОбластьПоиска.Добавить(Метаданные.РегистрыСведений.ТегиОбъектов);
		СписокПоиска.СтрокаПоиска = Сред(СтрокаПоиска, 2);
	КонецЕсли;
	
	Попытка
		Если Направление = "ПерваяЧасть" Тогда
			СписокПоиска.ПерваяЧасть();
		ИначеЕсли Направление = "ПредыдущаяЧасть" Тогда
			СписокПоиска.ПредыдущаяЧасть(ТекущаяПозиция);
		ИначеЕсли Направление = "СледующаяЧасть" Тогда
			СписокПоиска.СледующаяЧасть(ТекущаяПозиция);
		Иначе 
			ВызватьИсключение НСтр("ru = 'Параметр НаправлениеПоиска задан неверно.'");
		КонецЕсли;
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		КодОшибки = "ОшибкаПоиска";
	КонецПопытки;
	
	Если СписокПоиска.СлишкомМногоРезультатов() Тогда 
		ОписаниеОшибки = НСтр("ru = 'Слишком много результатов, необходимо уточнить запрос'");
		КодОшибки = "СлишкомМногоРезультатов";
	КонецЕсли;
	
	ПолноеКоличество = СписокПоиска.ПолноеКоличество();
	
	Если ПолноеКоличество = 0 Тогда
		ОписаниеОшибки = НСтр("ru = 'По запросу ничего не найдено'");
		КодОшибки = "НичегоНеНайдено";
	КонецЕсли;
	
	Если ПустаяСтрока(КодОшибки) Тогда 
		РезультатыПоиска = РезультатыПолнотекстовогоПоиска(СписокПоиска, ПараметрыПоиска.ПоискПоТегу, ПараметрыПоиска.СемантическийАнализ);
	Иначе 
		РезультатыПоиска = Новый Массив;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ТекущаяПозиция",   СписокПоиска.НачальнаяПозиция());
	Результат.Вставить("Количество",       СписокПоиска.Количество());
	Результат.Вставить("ПолноеКоличество", ПолноеКоличество);
	Результат.Вставить("КодОшибки",        КодОшибки);
	Результат.Вставить("ОписаниеОшибки",   ОписаниеОшибки);
	Результат.Вставить("РезультатыПоиска", РезультатыПоиска);
	
	Возврат Результат;	
	
КонецФункции

Функция ПараметрыПоиска() Экспорт 
	
	Параметры = Новый Структура;
	Параметры.Вставить("СтрокаПоиска", 0);
	Параметры.Вставить("НаправлениеПоиска", "ПерваяЧасть");
	Параметры.Вставить("ТекущаяПозиция", 0);
	Параметры.Вставить("ИскатьВРазделах", Ложь);
	Параметры.Вставить("ОбластиПоиска", Новый Массив);
	Параметры.Вставить("ПоискПоНомеру", Ложь);
	Параметры.Вставить("ПоискПоТегу", Ложь);
	Параметры.Вставить("СемантическийАнализ", Ложь);
	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция РезультатыПолнотекстовогоПоиска(СписокПоиска, Знач ПоискПоТегу = Ложь, Знач СемантическийАнализ = Ложь)
	
	// Разбор списка посредством выделения блока описания HTML.
	СтрокиПоискаHTML = СтрокиРезультатаПоискаHTML(СписокПоиска);
	
	Результат = Новый Массив;
	
	// Обход строк списка поиска.
	Для Индекс = 0 По СписокПоиска.Количество() - 1 Цикл
		
		ОписаниеHTML  = СтрокиПоискаHTML.ОписанияHTML.Получить(Индекс);
		СтрокаСпискаПоиска = СписокПоиска.Получить(Индекс);
		
		Если СемантическийАнализ Тогда
			Значение = СтрокаСпискаПоиска.Значение;
			Ссылка = СтрокаСпискаПоиска.Значение.Объект;
			
		ИначеЕсли ПоискПоТегу Тогда
			Значение = СтрокаСпискаПоиска.Значение.Объект;
			
			ПредставлениеТега = СтрЗаменить(СтрокаСпискаПоиска.Описание, "Тег: ", "Теги объектов: ") + "; "; 
			ОбрезаемыеСимволы = СтрДлина(ПредставлениеТега); 
			Представление = Сред(СтрокиПоискаHTML.Представления.Получить(Индекс), ОбрезаемыеСимволы);
		Иначе			
			Значение      = СтрокаСпискаПоиска.Значение;
			Представление = СтрокиПоискаHTML.Представления.Получить(Индекс);
		КонецЕсли;
		
		СтрокаРезультата = Новый Структура;
		СтрокаРезультата.Вставить("Представление", Представление);
		
		Если СемантическийАнализ Тогда
			СтрокаРезультата.Вставить("КлючЗаписи", Значение);
			СтрокаРезультата.Вставить("ОписаниеHTML", СтрЗаменить(ОписаниеHTML, "Индексируемый текст: ", ""));
		Иначе
			Ссылка = "";
			Попытка
				Ссылка = ПолучитьНавигационнуюСсылку(Значение);
			Исключение
				Ссылка = "#"; // Непредусмотренное для открытия.
			КонецПопытки;
			
			СтрокаРезультата.Вставить("ОписаниеHTML", ОписаниеHTML);
		КонецЕсли;
		
		СтрокаРезультата.Вставить("Ссылка", Ссылка);
		
		Результат.Добавить(СтрокаРезультата);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция СтрокиОписанияHTML(СписокЭлементовDivDOM)
	
	СтрокиОписанияHTML = Новый Массив;
	Для каждого ЭлементDOM Из СписокЭлементовDivDOM Цикл 
		
		Если ЭлементDOM.ИмяКласса = "textPortion" Тогда 
			
			ЗаписьDOM = Новый ЗаписьDOM;
			ЗаписьHTML = Новый ЗаписьHTML;
			ЗаписьHTML.УстановитьСтроку();
			ЗаписьDOM.Записать(ЭлементDOM, ЗаписьHTML);
			
			ОписаниеHTMLСтрокиРезультата = ЗаписьHTML.Закрыть();
			
			СтрокиОписанияHTML.Добавить(ОписаниеHTMLСтрокиРезультата);
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрокиОписанияHTML;
	
КонецФункции

Функция СтрокиПредставления(СписокЭлементовAnchorDOM)
	
	СтрокиПредставления = Новый Массив;
	Для каждого ЭлементDOM Из СписокЭлементовAnchorDOM Цикл
		
		Представление = ЭлементDOM.ТекстовоеСодержимое;
		СтрокиПредставления.Добавить(Представление);
		
	КонецЦикла;
	
	Возврат СтрокиПредставления;
	
КонецФункции

Функция СтрокиРезультатаПоискаHTML(СписокПоиска)
	
	ОтображениеСпискаHTML = СписокПоиска.ПолучитьОтображение(ВидОтображенияПолнотекстовогоПоиска.HTMLТекст);
	ОтображениеСпискаHTML = СтрЗаменить(ОтображениеСпискаHTML, ">Индексируемые тексты описаний объектов: ", ">");
	
	// Получение DOM для отображения списка.
	// Нельзя выносить в отдельную функцию получения DOM из-за ошибки платформы в стеке вызовов потока чтения DOM.
	ЧтениеHTML = Новый ЧтениеHTML;
	ЧтениеHTML.УстановитьСтроку(ОтображениеСпискаHTML);
	ПостроительDOM = Новый ПостроительDOM;
	ОтображениеСпискаDOM = ПостроительDOM.Прочитать(ЧтениеHTML);
	ЧтениеHTML.Закрыть();
	
	СписокЭлементовDivDOM = ОтображениеСпискаDOM.ПолучитьЭлементыПоИмени("div");
	СтрокиОписанияHTML = СтрокиОписанияHTML(СписокЭлементовDivDOM);
	
	СписокЭлементовAnchorDOM = ОтображениеСпискаDOM.ПолучитьЭлементыПоИмени("a");
	СтрокиПредставления = СтрокиПредставления(СписокЭлементовAnchorDOM);
	
	Результат = Новый Структура;
	Результат.Вставить("ОписанияHTML", СтрокиОписанияHTML);
	Результат.Вставить("Представления", СтрокиПредставления);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
