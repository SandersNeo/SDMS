///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

// Пользовательские настройки
&НаКлиенте
Перем НастройкиФормы;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВремяНачалаЗамера = ИнтеграцияДополнительныхПодсистем.НачатьЗамерВремени();
	
	Настройки = ПолучитьНастройкиФормы();
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(Настройки);

	ОбновлениеПользовательскихНастроекДинамическогоСписка();

	ОбновитьСписокНаСервере(Настройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЭтоАдресВременногоХранилища(АдресВоВременномХранилище) Тогда
		НастройкиФормы = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	КонецЕсли;
	
	ИнтеграцияДополнительныхПодсистем.ЗакончитьЗамерВремени("ВернутсяНаТестирование.ОткрытиеФормы", ВремяНачалаЗамера);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура Список_ВернутсяНаТестВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Список_ВернутсяНаТест.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;		
	КонецЕсли;
	
	Задача = ТекущиеДанные.Задача;
	ОткрытьЗначениеАсинх(Задача);
		
КонецПроцедуры

&НаКлиенте
Процедура Список_ВернутсяНаТестПриАктивизацииСтроки(Элемент)
	
	УправлениеИнструментамиРазработкиКлиент.ОбработкаАктивизацииСтроки(Элемент.ТекущиеДанные, НастройкиФормы.Список_ВернутсяНаТест); 
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура КопироватьВБуфер(Команда)
	
	Если ТекущийЭлемент = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ОбъектСсылка = Неопределено;
	
	Если ТекущийЭлемент.ТекущиеДанные <> Неопределено Тогда 
		
		ТекущиеДанные = ТекущийЭлемент.ТекущиеДанные;
		
		Если ТекущиеДанные.Свойство("Задача") Тогда
			ОбъектСсылка = ТекущиеДанные.Задача;
		ИначеЕсли ТекущиеДанные.Свойство("Заявка") Тогда
			ОбъектСсылка = ТекущиеДанные.Заявка;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбъектСсылка) Тогда
		ОбщегоНазначенияКлиент.КопироватьНавигационнуюСсылкуВБуферОбмена(ОбъектСсылка);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НастроитьСписок(Команда)
	
	Системы = НастройкиФормы.ВыбранныеСистемы; 
	
	ПараметрыОткрытия = ИнтерфейсПриложенияКлиент.СформироватьПараметрыОткрытия();

	ПараметрыОткрытия.Системы.Значение = Системы;
	ПараметрыОткрытия.Системы.Использование = Истина;
		
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборНастроек", ЭтотОбъект, ЭтотОбъект);
	
	ИнтерфейсПриложенияКлиент.ОткрытьФормуНастройкиИнструментов(ЭтотОбъект, ПараметрыОткрытия, ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок()
		
	ОбновитьСписокНаСервере(НастройкиФормы);

	УправлениеИнструментамиРазработкиКлиент.ВосcтановитьСписокВПредыдущееСостояние_Таблица(Список_ВернутсяНаТест, Элементы.Список_ВернутсяНаТест,
		НастройкиФормы.Список_ВернутсяНаТест);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВариантыСсылок(Команда)
	
	Если ТекущийЭлемент = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ОбъектСсылка = Неопределено;
	
	Если ТекущийЭлемент.ТекущиеДанные <> Неопределено Тогда 
		
		ТекущиеДанные = ТекущийЭлемент.ТекущиеДанные;
	
		Если ТекущиеДанные.Свойство("Задача") Тогда
			ОбъектСсылка = ТекущиеДанные.Задача;
		ИначеЕсли ТекущиеДанные.Свойство("Заявка") Тогда
			ОбъектСсылка = ТекущиеДанные.Заявка;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбъектСсылка) Тогда	
		ИнтерфейсПриложенияКлиент.ОткрытьОкноНавигационнойСсылки(ОбъектСсылка, ЭтотОбъект, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСохраненныеНастройки(Команда)
	
	ПараметрыОткрытия = Новый Структура("КлючХранилища, ПользовательскиеНастройки", КлючНастроекСписка(), НастройкиФормы);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьСохранениеНастроек", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.НастройкиДинамическогоСписка", ПараметрыОткрытия, ЭтотОбъект, , , ,
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьНастройкуДинамическогоСписка(Команда)
	
	НастройкиОтборов = ОбщегоНазначенияВызовСервера.ПолучитьНастройкиХранилищеНастроекДинамическихСписков(
		КлючНастроекСписка(), ВариантыНастроек, Команда.Имя);	 
	
	Если НастройкиОтборов <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(НастройкиФормы, НастройкиОтборов);
		ОбновитьСписок();
	КонецЕсли;		
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция КлючНастроекСписка()
	
	Возврат "Обработка.ВернутсяНаТестирование.Форма.ФормаОбработки.Настройки_ВерутьсяНаТест";
	
КонецФункции

&НаСервере
Процедура ОбновитьСписокНаСервере(Настройки)
	
	Список_ВернутсяНаТест.Очистить();	
	ВыбранныеСистемы = Настройки.ВыбранныеСистемы;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Задача.Ссылка КАК Задача,
	|	Задача.Номер КАК Номер,
	|	Задача.Наименование КАК Наименование,
	|	Задача.СистемаУчета КАК СистемаУчета,
	|	Задача.Статус КАК ТекущийСтатус,
	|	Задача.Назначена КАК ТекущийИсполнитель,
	|	Задача.Дата КАК Дата,
	|	Задача.ДатаИзмененияСтатуса КАК ИзменениеСтатуса,
	|	Задача.Автор КАК Автор
	|ПОМЕСТИТЬ ОтобранныеЗадачи
	|ИЗ
	|	Документ.Задача КАК Задача
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО Задача.Статус = СтатусыОбъектов.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА Задача.Статус В (ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ВРаботе), ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.Приостановлен), ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.CodeReview))
	|					ИЛИ СтатусыОбъектов.Родитель В (ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ВРаботе), ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.Приостановлен), ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.CodeReview))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И Задача.СистемаУчета В(&ВыбранныеСистемы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Задача
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтобранныеЗадачи.Задача КАК Задача,
	|	ОтобранныеЗадачи.Номер КАК Номер,
	|	ОтобранныеЗадачи.Наименование КАК Наименование,
	|	ОтобранныеЗадачи.СистемаУчета КАК СистемаУчета,
	|	ОтобранныеЗадачи.ТекущийСтатус КАК ТекущийСтатус,
	|	ОтобранныеЗадачи.ТекущийИсполнитель КАК ТекущийИсполнитель,
	|	ОтобранныеЗадачи.Дата КАК Дата,
	|	ОтобранныеЗадачи.ИзменениеСтатуса КАК ИзменениеСтатуса,
	|	ОтобранныеЗадачи.Автор КАК Автор,
	|	СвойстваЗадач.Период КАК ПериодТестирования,
	|	СвойстваЗадач.Исполнитель КАК Исполнитель,
	|	СвойстваЗадач.Статус КАК СтатусРегистра
	|ПОМЕСТИТЬ ОбщиеДанныеПоЗадачам
	|ИЗ
	|	ОтобранныеЗадачи КАК ОтобранныеЗадачи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваЗадач КАК СвойстваЗадач
	|		ПО ОтобранныеЗадачи.Задача = СвойстваЗадач.Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбщиеДанныеПоЗадачам.Задача КАК Задача,
	|	МАКСИМУМ(ОбщиеДанныеПоЗадачам.ПериодТестирования) КАК ПериодТестирования
	|ПОМЕСТИТЬ ПоследняяЗаписьРегистра
	|ИЗ
	|	ОбщиеДанныеПоЗадачам КАК ОбщиеДанныеПоЗадачам
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбщиеДанныеПоЗадачам.Задача
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбщиеДанныеПоЗадачам.Задача КАК Задача,
	|	МАКСИМУМ(ОбщиеДанныеПоЗадачам.ПериодТестирования) КАК ПериодТестирования
	|ПОМЕСТИТЬ ПоследнееТестированиеЗадач
	|ИЗ
	|	ОбщиеДанныеПоЗадачам КАК ОбщиеДанныеПоЗадачам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследняяЗаписьРегистра КАК ПоследняяЗаписьРегистра
	|		ПО ОбщиеДанныеПоЗадачам.Задача = ПоследняяЗаписьРегистра.Задача
	|ГДЕ
	|	ОбщиеДанныеПоЗадачам.ПериодТестирования <> ПоследняяЗаписьРегистра.ПериодТестирования
	|	И ОбщиеДанныеПоЗадачам.СтатусРегистра = ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.Тестирование)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбщиеДанныеПоЗадачам.Задача
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбщиеДанныеПоЗадачам.Задача КАК Задача,
	|	ОбщиеДанныеПоЗадачам.Номер КАК Номер,
	|	ОбщиеДанныеПоЗадачам.Наименование КАК Наименование,
	|	ПРЕДСТАВЛЕНИЕ(ОбщиеДанныеПоЗадачам.СистемаУчета) КАК СистемаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ОбщиеДанныеПоЗадачам.ТекущийИсполнитель) КАК Назначена,
	|	ОбщиеДанныеПоЗадачам.Дата КАК Создана,
	|	ОбщиеДанныеПоЗадачам.ИзменениеСтатуса КАК ИзменениеСтатуса,
	|	ПРЕДСТАВЛЕНИЕ(ОбщиеДанныеПоЗадачам.Автор) КАК Автор,
	|	СтатусыОбъектов.ИндексКартинки КАК ИндексКартинки,
	|	СтатусыОбъектов.Наименование КАК СтатусПредставление
	|ИЗ
	|	ОбщиеДанныеПоЗадачам КАК ОбщиеДанныеПоЗадачам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследнееТестированиеЗадач КАК ПоследнееТестированиеЗадач
	|		ПО ОбщиеДанныеПоЗадачам.Задача = ПоследнееТестированиеЗадач.Задача
	|			И ОбщиеДанныеПоЗадачам.ПериодТестирования = ПоследнееТестированиеЗадач.ПериодТестирования
	|			И (ОбщиеДанныеПоЗадачам.Исполнитель = &Пользователь)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО ОбщиеДанныеПоЗадачам.ТекущийСтатус = СтатусыОбъектов.Ссылка
	|ГДЕ
	|	ОбщиеДанныеПоЗадачам.ТекущийИсполнитель <> ОбщиеДанныеПоЗадачам.Исполнитель";
	
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("ВыбранныеСистемы", ВыбранныеСистемы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаТаблицы = Список_ВернутсяНаТест.Добавить();
		
		СтрокаТаблицы.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(Строка(Выборка.Задача), Истина);
		СтрокаТаблицы.Задача = Выборка.Задача;
		СтрокаТаблицы.ЗадачаПредставление = СтрШаблон("[%1] %2", Выборка.Номер, Выборка.Наименование);
		СтрокаТаблицы.Назначена = ОбщегоНазначенияКлиентСервер.ПолучитьФамилиюИнициалыПользователя(Выборка.Назначена);
		СтрокаТаблицы.Автор = ОбщегоНазначенияКлиентСервер.ПолучитьФамилиюИнициалыПользователя(Выборка.Автор);
		СтрокаТаблицы.СистемаПредставление = Выборка.СистемаПредставление;
		СтрокаТаблицы.Создана = Выборка.Создана;
		СтрокаТаблицы.ИзменениеСтатуса = Выборка.ИзменениеСтатуса;
		СтрокаТаблицы.ИндексКартинки = Выборка.ИндексКартинки;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборНастроек(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиИзменены = Ложь;
	
	// Проверка изменения отбора по системе
	СтарыйОтбор =  НастройкиФормы.ВыбранныеСистемы;
	НовыйОтбор = Результат.ВыбранныеСистемы;
	СпискиРазличаются = ОбщегоНазначенияКлиент.СпискиЗначенийРазличаются(СтарыйОтбор, НовыйОтбор);
	
	Если СпискиРазличаются Тогда
		НастройкиФормы.ВыбранныеСистемы = Результат.ВыбранныеСистемы;
		НастройкиИзменены = Истина;
	КонецЕсли;
		
	Если НастройкиИзменены Тогда
		ОбновитьСписок();
	КонецЕсли;

	СохранитьНастройкиФормы(НастройкиФормы);
	
КонецПроцедуры

&НаСервере
Процедура ОбновлениеПользовательскихНастроекДинамическогоСписка()
	
	Свойства = Новый Структура("КлючНастройкиСписка, ПользовательскиеНастройкиСписка");	
	
	Свойства.КлючНастройкиСписка = Новый Массив;
	Свойства.КлючНастройкиСписка.Добавить(КлючНастроекСписка());
	
	Свойства.ПользовательскиеНастройкиСписка = Новый Массив;
	Свойства.ПользовательскиеНастройкиСписка.Добавить(Элементы.ПользовательскиеНастройки);

	ОбщегоНазначенияВызовСервера.ПользовательскиеНастройкиДинамическогоСписка(
		Свойства.КлючНастройкиСписка, ВариантыНастроек, ЭтотОбъект,
		Свойства.ПользовательскиеНастройкиСписка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСохранениеНастроек(Результат, ПараметрыОткрытия) Экспорт
	
	ОбновлениеПользовательскихНастроекДинамическогоСписка();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНастройкиФормы()
	
	Перем ЗначениеНастройки;
	
	// Создание пустой структуры настроек
	НастройкиФормы = Новый Структура;

	ПолныйСписокСистем = УправлениеИнструментамиРазработкиПовтИсп.ПолучитьСписокДоступныхСистемQA();
	
	// Параметры таблицы
	НастройкиТаблицы = Новый Структура("ВыделеннаяСтрока", Неопределено);

	НастройкиФормы.Вставить("Список_ВернутсяНаТест", НастройкиТаблицы);
	НастройкиФормы.Вставить("ВыбранныеСистемы", ПолныйСписокСистем);

	СвойстваНастройки = СвойстваСохраняемойНастройки();
	
	// Восстановление сохраненных параметров
	СохраненныеНастройки = ОбщегоНазначенияВызовСервера.ЗагрузитьНастройкиДанныхФормы(
		СвойстваНастройки.КлючОбъекта, СвойстваНастройки.КлючНастроек);
		
	Если ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда
		
		// Перебор всех элементом структуры настроек. Если элемент найден в сохраненной
		// настройке, его значение присваивается исходному свойству. В противном случае
		// используется значение по-умолчанию.
		Для Каждого Настройка Из НастройкиФормы Цикл
			ИмяКлюча = Настройка.Ключ;
			
			// Если значение сохраненной настройки не существует
			Если НЕ СохраненныеНастройки.Свойство(ИмяКлюча, ЗначениеНастройки) Тогда
				Продолжить;
			КонецЕсли;
			
			// Если типы настроек соответствуют, присваиваем значение
			Если ТипЗнч(Настройка.Значение) = ТипЗнч(ЗначениеНастройки) Тогда
				НастройкиФормы.Вставить(ИмяКлюча, ЗначениеНастройки);
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
	
	НастройкиФормы.Вставить("ВсегоСистем", ПолныйСписокСистем.Количество());
	
	Возврат НастройкиФормы;
	
КонецФункции

&НаСервереБезКонтекста
Функция СвойстваСохраняемойНастройки()
	
	Возврат Новый Структура("КлючОбъекта, КлючНастроек", 
		"Обработка.ВернутсяНаТестирование.Форма.ФормаОбработки", "НастройкиФормы");
	
КонецФункции

&НаСервереБезКонтекста
Процедура СохранитьНастройкиФормы(Знач Настройки)
	
	СвойстваНастроек = СвойстваСохраняемойНастройки();
	ОбщегоНазначенияВызовСервера.СохранитьНастройкиДанныхФормы(СвойстваНастроек.КлючОбъекта, СвойстваНастроек.КлючНастроек, Настройки)
	
КонецПроцедуры

#КонецОбласти
