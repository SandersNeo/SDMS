///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокПользователейИБ();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДеревоНастроекВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ДеревоНастроек.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ПараметрыОткрытия = Новый Структура;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.АдресВременногоХранилища) Тогда
		ПараметрыОткрытия.Вставить("АдресВременногоХранилищаКоллекции", ТекущиеДанные.АдресВременногоХранилища);
		
	ИначеЕсли ТипЗнч(ТекущиеДанные.Настройки) = Тип("Строка") Тогда
		ПараметрыОткрытия.Вставить("ТекстНастройки", ТекущиеДанные.Настройки);
	КонецЕсли;
	
	ОткрытьФорму("Обработка.ПросмотрНастроекПользователей.Форма.ФормаОтображенияКоллекции", ПараметрыОткрытия,
			ЭтотОбъект, КлючУникальности, , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	
	ЗаполнитьНастройкиНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьНастройкиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьНастройки(Команда)
	
	ЗаполнитьНастройкиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьПользователям(Команда)
	
	ТекущиеДанные = Элементы.ДеревоНастроек.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено ИЛИ ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	СписокДляОтметки = СписокПользователей.Скопировать();
		
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Хранилище", ТекущиеДанные.ПолучитьРодителя().КлючОбъекта);
	ПараметрыОповещения.Вставить("КлючОбъекта", ТекущиеДанные.КлючОбъекта);
	ПараметрыОповещения.Вставить("КлючНастроек", ТекущиеДанные.ключНастроек);
	ПараметрыОповещения.Вставить("Пользователь", Пользователь);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьКопированиеНастройки", ЭтотОбъект, ПараметрыОповещения);
	
	ОткрытьФорму("Обработка.ПросмотрНастроекПользователей.Форма.ПодборЗначений", 
		Новый Структура("ОтмеченныеЗначения", СписокДляОтметки), ЭтотОбъект, КлючУникальности, , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНастройку(Команда)
	
	ТекущиеДанные = Элементы.ДеревоНастроек.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено ИЛИ ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьНастройкуНаСервере(ТекущиеДанные.ПолучитьРодителя().КлючОбъекта, ТекущиеДанные.КлючОбъекта, ТекущиеДанные.КлючНастроек, Пользователь);
	
	Родитель = ТекущиеДанные.ПолучитьРодителя();
	Родитель.ПолучитьЭлементы().Удалить(ТекущиеДанные);
	
	Если Родитель.ПолучитьЭлементы().Количество() = 0 Тогда
		ДеревоНастроек.ПолучитьЭлементы().Удалить(Родитель);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьНастройкиИзХранилища(Знач Хранилище, Знач Пользователь, Дерево)
	
	СтруктураОтбора = Новый Структура("Пользователь", Пользователь);
	
	СтрокаГруппы = Дерево.Строки.Добавить();
	СтрокаГруппы.ЭтоГруппа = Истина;
	СтрокаГруппы.КлючОбъекта = Хранилище;
	
	ВыборкаНастроек = ПолучитьМенеджерХранилища(Хранилище).Выбрать(СтруктураОтбора);
	
	Пока ВыборкаНастроек.Следующий() Цикл
		
		Попытка
			Настройки = ВыборкаНастроек.Настройки;
		Исключение
			НоваяСтрока = СтрокаГруппы.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНастроек, "КлючОбъекта, КлючНастроек");
			НоваяСтрока.Представление = "Ошибка настроек";
			НоваяСтрока.Настройки = ОписаниеОшибки();
			Продолжить;
		КонецПопытки;		
		
		Если Настройки <> Неопределено Тогда
			НоваяСтрока = СтрокаГруппы.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНастроек, "КлючОбъекта, КлючНастроек, Представление");

			ТипЗначенияНастройки = ТипЗнч(Настройки);
			
			Если ТипЗначенияНастройки = Тип("Строка")
				ИЛИ ТипЗначенияНастройки = Тип("Дата")
				ИЛИ ТипЗначенияНастройки = Тип("Число")
				ИЛИ ТипЗначенияНастройки = Тип("Булево") Тогда
				
				НоваяСтрока.Настройки = Настройки;
			Иначе
				Если ТипЗначенияНастройки = Тип("НастройкиФормы") 
					ИЛИ ТипЗначенияНастройки = Тип("НастройкиИсторииВыбора")
					ИЛИ ТипЗначенияНастройки = Тип("ИзбранноеРаботыПользователя")
					ИЛИ ТипЗначенияНастройки = Тип("НастройкиИнтерфейсаКлиентскогоПриложения")
					ИЛИ ТипЗначенияНастройки = Тип("НастройкиНачальнойСтраницы")
					ИЛИ ТипЗначенияНастройки = Тип("ОформлениеЗначений") Тогда
					
					НоваяСтрока.Настройки = "< Системные данные >";
				Иначе
					НоваяСтрока.Настройки = Строка(ТипЗначенияНастройки);
					НоваяСтрока.АдресВременногоХранилища = ПоместитьВоВременноеХранилище(Настройки, Новый УникальныйИдентификатор);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если СтрокаГруппы.Строки.Количество() = 0 Тогда
		Дерево.Строки.Удалить(СтрокаГруппы);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройкиНаСервере()
	
	Дерево = РеквизитФормыВЗначение("ДеревоНастроек", Тип("ДеревоЗначений"));
	
	Дерево.Строки.Очистить();
	
	ЗаполнитьНастройкиИзХранилища("ХранилищеВариантовОтчетов", Пользователь, Дерево);
	ЗаполнитьНастройкиИзХранилища("ХранилищеНастроекДанныхФорм", Пользователь, Дерево);
	ЗаполнитьНастройкиИзХранилища("ХранилищеОбщихНастроек", Пользователь, Дерево);
	ЗаполнитьНастройкиИзХранилища("ХранилищеПользовательскихНастроекДинамическихСписков", Пользователь, Дерево);
	ЗаполнитьНастройкиИзХранилища("ХранилищеПользовательскихНастроекОтчетов", Пользователь, Дерево);
	ЗаполнитьНастройкиИзХранилища("ХранилищеСистемныхНастроек", Пользователь, Дерево);
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоНастроек");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокПользователейИБ()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПользователиБазы = ПользователиИнформационнойБазы.ПолучитьПользователей();
	Для Каждого ПользовательИБ Из ПользователиБазы Цикл
		СписокПользователей.Добавить(ПользовательИБ.Имя, ПользовательИБ.Имя);
		Элементы.Пользователь.СписокВыбора.Добавить(ПользовательИБ.Имя, ПользовательИБ.Имя);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьКопированиеНастройки(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено ИЛИ Результат.Количество() > 0 Тогда
		СкопироватьНастройкиПользователям(ДополнительныеПараметры, Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМенеджерХранилища(Знач Хранилище)
	
	Если Хранилище = "ХранилищеВариантовОтчетов" Тогда
		Возврат ХранилищеВариантовОтчетов;
	ИначеЕсли Хранилище = "ХранилищеНастроекДанныхФорм" Тогда
		Возврат ХранилищеНастроекДанныхФорм;
	ИначеЕсли Хранилище = "ХранилищеОбщихНастроек" Тогда
		Возврат ХранилищеОбщихНастроек;
	ИначеЕсли Хранилище = "ХранилищеПользовательскихНастроекДинамическихСписков" Тогда
		Возврат ХранилищеПользовательскихНастроекДинамическихСписков;
	ИначеЕсли Хранилище = "ХранилищеПользовательскихНастроекОтчетов" Тогда
		Возврат ХранилищеПользовательскихНастроекОтчетов;
	ИначеЕсли Хранилище = "ХранилищеСистемныхНастроек" Тогда
		Возврат ХранилищеСистемныхНастроек;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура СкопироватьНастройкиПользователям(Знач ДанныеНастроек, Знач СписокПользователей)
	
	// Определение менеджера настроек
	МенеджерХранилища = ПолучитьМенеджерХранилища(ДанныеНастроек.Хранилище);
	
	// Чтение настроек
	Настройки = МенеджерХранилища.Загрузить(ДанныеНастроек.КлючОбъекта, ДанныеНастроек.КлючНастроек, , ДанныеНастроек.Пользователь);
	
	Если Настройки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Установка настроек другим пользователям
	Для Каждого ПользовательИБ Из СписокПользователей Цикл
		МенеджерХранилища.Сохранить(ДанныеНастроек.КлючОбъекта, ДанныеНастроек.КлючНастроек, Настройки, , ПользовательИБ);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьНастройкуНаСервере(Хранилище, КлючОбъекта, КлючНастроек, Пользователь)
	
	ПолучитьМенеджерХранилища(Хранилище).Удалить(КлючОбъекта, ?(ЗначениеЗаполнено(КлючНастроек), КлючНастроек, Неопределено), Пользователь);
	
КонецПроцедуры

#КонецОбласти
