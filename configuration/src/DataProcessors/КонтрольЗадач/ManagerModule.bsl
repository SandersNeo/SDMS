///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Процедура ПолучитьДанныеСписок_Контроль(НастройкиСписка, АдресРезультата, УИДЗамера) Экспорт
	
	ВремяНачала = ОценкаПроизводительности.НачатьЗамерВремени();
	
	ДанныеДерева = СформироватьСписок_Контроль(НастройкиСписка);
	ИнструментыСервер.ОповеститьИнструментОбОбновлении(ДанныеДерева, АдресРезультата, УИДЗамера);
	
	ОценкаПроизводительности.ЗакончитьЗамерВремениТехнологический("Обработки.КонтрольЗадач.ПолучитьДанныеСписок_Контроль.ВыполнениеФонового", ВремяНачала, , Строка(УИДЗамера));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

Функция СформироватьСписок_Контроль(Знач НастройкиСписка) 
	
	КолонкиИнструмента = Новый Массив;
	КолонкиИнструмента.Добавить("Задача");
	КолонкиИнструмента.Добавить("Назначена");
	КолонкиИнструмента.Добавить("Статус");
	КолонкиИнструмента.Добавить("ДнейНа");
	КолонкиИнструмента.Добавить("Активность");
	КолонкиИнструмента.Добавить("Публикация");
	КолонкиИнструмента.Добавить("НазначенаПредставление");
	КолонкиИнструмента.Добавить("ИндексКартинки");
	КолонкиИнструмента.Добавить("ЭтоГруппа");
	КолонкиИнструмента.Добавить("UID");
	КолонкиИнструмента.Добавить("ТребуетсяПубликация");
	КолонкиИнструмента.Добавить("ОбъектОснование");
	КолонкиИнструмента.Добавить("ГруппаЗаказчиков");
	КолонкиИнструмента.Добавить("Система");
	КолонкиИнструмента.Добавить("Исполнитель");
	КолонкиИнструмента.Добавить("Продукт");
	КолонкиИнструмента.Добавить("Наименование");
	
	Дерево = Новый ДеревоЗначений;
	Для Каждого Колонка Из КолонкиИнструмента Цикл
		Дерево.Колонки.Добавить(Колонка);
	КонецЦикла;
	
	ТекущаяДата = ТекущаяДатаСеанса();
	
	ИсключаемыеСтатусы = Новый СписокЗначений;
	ИсключаемыеСтатусы.Добавить(Справочники.СтатусыОбъектов.Решен);
	ИсключаемыеСтатусы.Добавить(Справочники.СтатусыОбъектов.Отклонен);
		
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.Текст =
	#Область ТекстЗапроса
	"ВЫБРАТЬ
	|	Филиалы.Руководитель КАК Руководитель,
	|	Филиалы.Ссылка КАК Филиал
	|ПОМЕСТИТЬ ФилиалыРуководителей
	|ИЗ
	|	Справочник.Филиалы КАК Филиалы
	|ГДЕ
	|	НЕ Филиалы.ПометкаУдаления
	|	И Филиалы.Родитель = ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка)
	|	И Филиалы.Руководитель <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛичныеДелаСрезПоследних.Сотрудник КАК Пользователь,
	|	ФилиалыРуководителей.Филиал КАК Филиал
	|ПОМЕСТИТЬ ЛичныеДелаФилиалы
	|ИЗ
	|	РегистрСведений.ЛичныеДела.СрезПоследних(&ТекущаяДата, Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПереведенВДругоеПодразделение)) КАК ЛичныеДелаСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК Филиалы
	|		ПО ((ВЫРАЗИТЬ(ЛичныеДелаСрезПоследних.Данные КАК Справочник.Филиалы)) = Филиалы.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФилиалыРуководителей КАК ФилиалыРуководителей
	|		ПО (ФилиалыРуководителей.Руководитель = Филиалы.Руководитель)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Филиалы.Ссылка КАК Филиал
	|ПОМЕСТИТЬ ВсеФилиалы
	|ИЗ
	|	Справочник.Филиалы КАК Филиалы
	|ГДЕ
	|	Филиалы.Ссылка В(&ВыбранныеФилиалы)
	|	И Филиалы.Родитель = ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Филиалы.Родитель
	|ИЗ
	|	Справочник.Филиалы КАК Филиалы
	|ГДЕ
	|	Филиалы.Ссылка В(&ВыбранныеФилиалы)
	|	И Филиалы.Родитель <> ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументЗадача.Ссылка КАК Задача,
	|	""Задача "" + ДокументЗадача.Номер + "". "" + ДокументЗадача.Наименование КАК ЗадачаПредставление,
	|	ДокументЗадача.Статус КАК Статус,
	|	ДокументЗадача.ДатаНачалаРазработки КАК ДатаНачалаРазработки,
	|	ДокументЗадача.Дата КАК Дата,
	|	ДокументЗадача.ТребуетсяПубликация КАК ТребуетсяПубликация,
	|	ДокументЗадача.Назначена КАК Назначена,
	|	""Неназначенные"" КАК ГруппаЗадачиЗаголовок,
	|	ЛОЖЬ КАК Недействителен,
	|	ЛОЖЬ КАК Служебный,
	|	"""" КАК НазначенаПредставление,
	|	ЛОЖЬ КАК ПометкаУдаления,
	|	ДокументЗадача.ОбъектОснование КАК ОбъектОснование,
	|	ДокументЗадача.СистемаУчета КАК СистемаУчета
	|ПОМЕСТИТЬ ОтобранныеЗадачи
	|ИЗ
	|	Документ.Задача КАК ДокументЗадача
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеФилиалы КАК ВсеФилиалы
	|		ПО ДокументЗадача.Филиал = ВсеФилиалы.Филиал
	|ГДЕ
	|	ДокументЗадача.Назначена = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|	И ДокументЗадача.Статус НЕ В(&Статусы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументЗадача.Ссылка,
	|	""Задача "" + ДокументЗадача.Номер + "". "" + ДокументЗадача.Наименование,
	|	ДокументЗадача.Статус,
	|	ДокументЗадача.ДатаНачалаРазработки,
	|	ДокументЗадача.Дата,
	|	ДокументЗадача.ТребуетсяПубликация,
	|	ДокументЗадача.Назначена,
	|	ВЫБОР
	|		КОГДА ЛичныеДелаФилиалы.Филиал ЕСТЬ NULL
	|			ТОГДА ""Задачи на """"Заказчиках""""""
	|		ИНАЧЕ ""Задачи на """"Разработчиках""""""
	|	КОНЕЦ,
	|	Пользователи.Недействителен,
	|	Пользователи.Служебный,
	|	Пользователи.ФИО,
	|	Пользователи.ПометкаУдаления,
	|	ДокументЗадача.ОбъектОснование,
	|	ДокументЗадача.СистемаУчета
	|ИЗ
	|	Документ.Задача КАК ДокументЗадача
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ДокументЗадача.Назначена = Пользователи.Ссылка
	|			И (НЕ Пользователи.Служебный)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЛичныеДелаФилиалы КАК ЛичныеДелаФилиалы
	|		ПО ДокументЗадача.Назначена = ЛичныеДелаФилиалы.Пользователь
	|			И ДокументЗадача.Филиал = ЛичныеДелаФилиалы.Филиал
	|ГДЕ
	|	ДокументЗадача.Филиал В(&ВыбранныеФилиалы)
	|	И ДокументЗадача.КомандаРазработчиков = ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка)
	|	И ДокументЗадача.Статус НЕ В(&Статусы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументЗадача.Ссылка,
	|	""Задача "" + ДокументЗадача.Номер + "". "" + ДокументЗадача.Наименование,
	|	ДокументЗадача.Статус,
	|	ДокументЗадача.ДатаНачалаРазработки,
	|	ДокументЗадача.Дата,
	|	ДокументЗадача.ТребуетсяПубликация,
	|	ДокументЗадача.Назначена,
	|	ВЫБОР
	|		КОГДА ЛичныеДелаФилиалы.Филиал ЕСТЬ NULL
	|			ТОГДА ""Задачи на """"Заказчиках""""""
	|		ИНАЧЕ ""Задачи на """"Разработчиках""""""
	|	КОНЕЦ,
	|	Пользователи.Недействителен,
	|	Пользователи.Служебный,
	|	Пользователи.ФИО,
	|	Пользователи.ПометкаУдаления,
	|	ДокументЗадача.ОбъектОснование,
	|	ДокументЗадача.СистемаУчета
	|ИЗ
	|	Документ.Задача КАК ДокументЗадача
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ДокументЗадача.Назначена = Пользователи.Ссылка
	|			И (НЕ Пользователи.Служебный)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЛичныеДелаФилиалы КАК ЛичныеДелаФилиалы
	|		ПО ДокументЗадача.Назначена = ЛичныеДелаФилиалы.Пользователь
	|			И ДокументЗадача.Филиал = ЛичныеДелаФилиалы.Филиал
	|ГДЕ
	|	ДокументЗадача.КомандаРазработчиков В(&ВыбранныеФилиалы)
	|	И ДокументЗадача.Статус НЕ В(&Статусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтобранныеЗадачи.Задача КАК Задача,
	|	КОЛИЧЕСТВО(ПодготовленныеСообщенияПользователяПоКатегориям.Объект) КАК КоличествоСобытий
	|ПОМЕСТИТЬ ПодсчетСобытий
	|ИЗ
	|	РегистрСведений.ПодготовленныеСообщенияПользователяПоКатегориям КАК ПодготовленныеСообщенияПользователяПоКатегориям
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтобранныеЗадачи КАК ОтобранныеЗадачи
	|		ПО (ОтобранныеЗадачи.Задача = (ВЫРАЗИТЬ(ПодготовленныеСообщенияПользователяПоКатегориям.Объект КАК Документ.Задача)))
	|ГДЕ
	|	НЕ ПодготовленныеСообщенияПользователяПоКатегориям.Отправлено
	|	И ПодготовленныеСообщенияПользователяПоКатегориям.Пользователь = &Пользователь
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтобранныеЗадачи.Задача
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияПубликацииЗадачСрезПоследних.Задача КАК Задача,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ИсторияПубликацииЗадачСрезПоследних.ДатаИсторииХранилища, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА ""Сегодня""
	|		КОГДА НАЧАЛОПЕРИОДА(ИсторияПубликацииЗадачСрезПоследних.ДатаИсторииХранилища, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ВчерашняяДата, ДЕНЬ)
	|			ТОГДА ""Вчера""
	|		ИНАЧЕ ИсторияПубликацииЗадачСрезПоследних.ДатаИсторииХранилища
	|	КОНЕЦ КАК Публикация
	|ПОМЕСТИТЬ ПоследняяПубликация
	|ИЗ
	|	РегистрСведений.ИсторияПубликацииЗадач.СрезПоследних(
	|			,
	|			Задача В
	|				(ВЫБРАТЬ
	|					ОтобранныеЗадачи.Задача
	|				ИЗ
	|					ОтобранныеЗадачи КАК ОтобранныеЗадачи)) КАК ИсторияПубликацииЗадачСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияИзмененийОбъектовПоСобытиямСрезПоследних.Объект КАК Задача,
	|	МАКСИМУМ(ИсторияИзмененийОбъектовПоСобытиямСрезПоследних.Период) КАК ПоследнееИзменение
	|ПОМЕСТИТЬ ПоследнииИзмененияЗадач
	|ИЗ
	|	РегистрСведений.ИсторияИзмененийОбъектовПоСобытиям.СрезПоследних(
	|			,
	|			Объект В
	|				(ВЫБРАТЬ
	|					ОтобранныеЗадачи.Задача
	|				ИЗ
	|					ОтобранныеЗадачи КАК ОтобранныеЗадачи)) КАК ИсторияИзмененийОбъектовПоСобытиямСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсторияИзмененийОбъектовПоСобытиямСрезПоследних.Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КомментарииСрезПоследних.Объект КАК Задача,
	|	МАКСИМУМ(КомментарииСрезПоследних.Период) КАК ПоследнийКомментарий
	|ПОМЕСТИТЬ ПоследнииКомментарииЗадач
	|ИЗ
	|	РегистрСведений.Комментарии.СрезПоследних(
	|			,
	|			Объект В
	|				(ВЫБРАТЬ
	|					ОтобранныеЗадачи.Задача
	|				ИЗ
	|					ОтобранныеЗадачи КАК ОтобранныеЗадачи)) КАК КомментарииСрезПоследних
	|ГДЕ
	|	НЕ КомментарииСрезПоследних.Служебный
	|
	|СГРУППИРОВАТЬ ПО
	|	КомментарииСрезПоследних.Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтобранныеЗадачи.Задача КАК Задача,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПоследнииИзмененияЗадач.ПоследнееИзменение, ДАТАВРЕМЯ(1, 1, 1)) > ЕСТЬNULL(ПоследнииКомментарииЗадач.ПоследнийКомментарий, ДАТАВРЕМЯ(1, 1, 1))
	|			ТОГДА ЕСТЬNULL(ПоследнииИзмененияЗадач.ПоследнееИзменение, ДАТАВРЕМЯ(1, 1, 1))
	|		ИНАЧЕ ЕСТЬNULL(ПоследнииКомментарииЗадач.ПоследнийКомментарий, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ КАК Активность
	|ПОМЕСТИТЬ ПоследняяАктивность
	|ИЗ
	|	ОтобранныеЗадачи КАК ОтобранныеЗадачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследнииИзмененияЗадач КАК ПоследнииИзмененияЗадач
	|		ПО ОтобранныеЗадачи.Задача = ПоследнииИзмененияЗадач.Задача
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследнииКомментарииЗадач КАК ПоследнииКомментарииЗадач
	|		ПО ОтобранныеЗадачи.Задача = ПоследнииКомментарииЗадач.Задача
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтобранныеЗадачи.Задача КАК Задача,
	|	РАЗНОСТЬДАТ(ЕСТЬNULL(СвойстваЗадач.Период, ВЫБОР
	|				КОГДА ОтобранныеЗадачи.ДатаНачалаРазработки = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ОтобранныеЗадачи.Дата
	|				ИНАЧЕ ОтобранныеЗадачи.ДатаНачалаРазработки
	|			КОНЕЦ), &ТекущаяДата, ДЕНЬ) КАК ДнейНа
	|ПОМЕСТИТЬ КоличествоДнейНаПользователе
	|ИЗ
	|	ОтобранныеЗадачи КАК ОтобранныеЗадачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваЗадач.СрезПоследних КАК СвойстваЗадач
	|		ПО ОтобранныеЗадачи.Задача = СвойстваЗадач.Объект
	|			И ОтобранныеЗадачи.Назначена = СвойстваЗадач.Исполнитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтобранныеЗадачи.Задача КАК Задача,
	|	Пользователи.ФИО КАК ИсполнительПредставление
	|ИЗ
	|	ОтобранныеЗадачи КАК ОтобранныеЗадачи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваЗадач КАК СвойстваЗадач
	|		ПО ОтобранныеЗадачи.Задача = СвойстваЗадач.Объект
	|			И (СвойстваЗадач.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ВРаботе))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО (СвойстваЗадач.Исполнитель = Пользователи.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтобранныеЗадачи.ГруппаЗадачиЗаголовок КАК ГруппаЗадачиЗаголовок,
	|	ОтобранныеЗадачи.Задача КАК Задача,
	|	ОтобранныеЗадачи.ЗадачаПредставление КАК Наименование,
	|	ОтобранныеЗадачи.Назначена КАК Назначена,
	|	ОтобранныеЗадачи.НазначенаПредставление КАК НазначенаПредставление,
	|	ОтобранныеЗадачи.Статус КАК Статус,
	|	ОтобранныеЗадачи.ТребуетсяПубликация КАК ТребуетсяПубликация,
	|	ОтобранныеЗадачи.Недействителен КАК Недействителен,
	|	ОтобранныеЗадачи.ПометкаУдаления КАК ПометкаУдаления,
	|	СтатусыОбъектов.Наименование КАК СтатусПредставление,
	|	СтатусыОбъектов.ИндексКартинки КАК ИндексКартинки,
	|	КоличествоДнейНаПользователе.ДнейНа КАК ДнейНа,
	|	ПоследняяАктивность.Активность КАК Активность,
	|	ЕСТЬNULL(ПодсчетСобытий.КоличествоСобытий, 0) КАК События,
	|	ЕСТЬNULL(ПоследняяПубликация.Публикация, ДАТАВРЕМЯ(1, 1, 1)) КАК Публикация,
	|	ОтобранныеЗадачи.ОбъектОснование КАК ОбъектОснование,
	|	ЗаявкаНаРазработкуСистемыРазработки.ГруппаЗаказчиков КАК ГруппаЗаказчиков,
	|	ОтобранныеЗадачи.СистемаУчета КАК Система,
	|	ПРЕДСТАВЛЕНИЕ(ЗаявкаНаРазработку.Продукт) КАК Продукт
	|ИЗ
	|	ОтобранныеЗадачи КАК ОтобранныеЗадачи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО ОтобранныеЗадачи.Статус = СтатусыОбъектов.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КоличествоДнейНаПользователе КАК КоличествоДнейНаПользователе
	|		ПО ОтобранныеЗадачи.Задача = КоличествоДнейНаПользователе.Задача
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследняяАктивность КАК ПоследняяАктивность
	|		ПО ОтобранныеЗадачи.Задача = ПоследняяАктивность.Задача
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку.СистемыРазработки КАК ЗаявкаНаРазработкуСистемыРазработки
	|		ПО ОтобранныеЗадачи.ОбъектОснование = ЗаявкаНаРазработкуСистемыРазработки.Ссылка
	|			И ОтобранныеЗадачи.СистемаУчета = ЗаявкаНаРазработкуСистемыРазработки.Система
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку КАК ЗаявкаНаРазработку
	|		ПО ОтобранныеЗадачи.ОбъектОснование = ЗаявкаНаРазработку.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследняяПубликация КАК ПоследняяПубликация
	|		ПО ОтобранныеЗадачи.Задача = ПоследняяПубликация.Задача
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПодсчетСобытий КАК ПодсчетСобытий
	|		ПО ОтобранныеЗадачи.Задача = ПодсчетСобытий.Задача
	|		{ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Продукты КАК Продукты
	|		ПО (ЗаявкаНаРазработку.Продукт = Продукты.Ссылка)}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваЗадач КАК СвойстваЗадач
	|		ПО ОтобранныеЗадачи.Задача = СвойстваЗадач.Объект
	|			И (СвойстваЗадач.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ВРаботе))}
	|{ГДЕ
	|	ОтобранныеЗадачи.СистемаУчета КАК Система,
	|	ОтобранныеЗадачи.Статус КАК Статус,
	|	(ВЫБОР
	|			КОГДА НЕ Продукты.Ссылка ЕСТЬ NULL
	|				ТОГДА Продукты.Ссылка
	|			ИНАЧЕ ЗаявкаНаРазработкуСистемыРазработки.ГруппаЗаказчиков
	|		КОНЕЦ) КАК СписокПродуктГруппаЗаказчиков,
	|	СвойстваЗадач.Исполнитель КАК Исполнитель}
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГруппаЗадачиЗаголовок,
	|	ДнейНа УБЫВ
	|ИТОГИ ПО
	|	ГруппаЗадачиЗаголовок";	
	#КонецОбласти
		
	ТипСтруктура = Тип("Структура");
	ТипСписокЗначений = Тип("СписокЗначений");
	СписокПродуктГруппаЗаказчиков = Новый СписокЗначений;
	
	Для Каждого ЭлементНастроек Из НастройкиСписка.Фильтры Цикл
		Если ТипЗнч(ЭлементНастроек.Значение) = ТипСписокЗначений Тогда
			
			Если ЭлементНастроек.Ключ = "ГруппаЗаказчиков" ИЛИ ЭлементНастроек.Ключ = "Продукт" Тогда
				Для Каждого ЭлементСписка Из ЭлементНастроек.Значение Цикл
					СписокПродуктГруппаЗаказчиков.Добавить(ЭлементСписка.Значение);	
				КонецЦикла;
				Продолжить;
			КонецЕсли;
			
			ЭлементОтбора = ПостроительЗапроса.Отбор.Добавить(ЭлементНастроек.Ключ);
			ЭлементОтбора.ВидСравнения = ВидСравнения.ВСписке;
			ЭлементОтбора.Значение = ЭлементНастроек.Значение;
			ЭлементОтбора.Использование = (ЭлементНастроек.Значение.Количество() > 0);
		КонецЕсли;
	КонецЦикла; 
	
	Если СписокПродуктГруппаЗаказчиков.Количество() > 0 Тогда 
		ОбщегоНазначения.ПостроительЗапросаУстановитьОтбор(ПостроительЗапроса, "СписокПродуктГруппаЗаказчиков", 
			ВидСравнения.ВСписке, СписокПродуктГруппаЗаказчиков);
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(НастройкиСписка.ВыбранныеИсполнители) Тогда
		ОбщегоНазначения.ПостроительЗапросаУстановитьОтбор(ПостроительЗапроса,
			"Исполнитель", ВидСравнения.ВСписке, НастройкиСписка.ВыбранныеИсполнители);
	КонецЕсли;
	
	РезультатЗапроса = ПостроительЗапроса.ПолучитьЗапрос();
	
	РезультатЗапроса.Параметры.Вставить("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	РезультатЗапроса.Параметры.Вставить("Статусы", ИсключаемыеСтатусы);
	РезультатЗапроса.Параметры.Вставить("ТекущаяДата", ТекущаяДата);
	РезультатЗапроса.Параметры.Вставить("ВчерашняяДата", ТекущаяДата - 86400);
	РезультатЗапроса.Параметры.Вставить("ВыбранныеФилиалы", НастройкиСписка.ВыбранныеФилиалы);
	
	РезультатПакеты = РезультатЗапроса.ВыполнитьПакет();
	КоличествоПакетов = РезультатПакеты.ВГраница();
	ВыборкаГруппа = РезультатПакеты[КоличествоПакетов].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ДанныеИсполнителей = РезультатПакеты[КоличествоПакетов - 1].Выгрузить();
	
	ИдентификаторыСтрокДерева = Новый Соответствие;	
	
	Пока ВыборкаГруппа.Следующий() Цикл
		СтрокаГруппа = Дерево.Строки.Добавить();
		СтрокаГруппа.Наименование = ВыборкаГруппа.ГруппаЗадачиЗаголовок;
		СтрокаГруппа.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ВыборкаГруппа.ГруппаЗадачиЗаголовок);
		СтрокаГруппа.ЭтоГруппа = Истина;
		СтрокаГруппа.ИндексКартинки = -1;
		
		ИдентификаторыСтрокДерева.Вставить(СтрокаГруппа.UID, СтрокаГруппа);
				
		ВыборкаЗадача = ВыборкаГруппа.Выбрать();
		
		Пока ВыборкаЗадача.Следующий() Цикл
			СтрокаЗадачи = СтрокаГруппа.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаЗадачи, ВыборкаЗадача);
			
			НадписьУволен = "";
			Если ВыборкаЗадача.Недействителен ИЛИ ВыборкаЗадача.ПометкаУдаления Тогда
				НадписьУволен = "(УВОЛЕН) ";
			КонецЕсли;
			
			СтрокаЗадачи.НазначенаПредставление = НадписьУволен + ВыборкаЗадача.НазначенаПредставление;
			СтрокаЗадачи.Публикация = ?(ЗначениеЗаполнено(ВыборкаЗадача.Публикация), Формат(ВыборкаЗадача.Публикация, "ДФ=[dd.MM.yy]"), "");
			
			Если ТипЗнч(ВыборкаЗадача.Активность) = Тип("Дата") Тогда
				Если НачалоДня(ВыборкаЗадача.Активность) = НачалоДня(ТекущаяДата) Тогда
					СтрокаЗадачи.Активность = "Сегодня";
				ИначеЕсли НачалоДня(ВыборкаЗадача.Активность) = НачалоДня(ТекущаяДата - 86400) Тогда
					СтрокаЗадачи.Активность = "Вчера";
				Иначе
					СтрокаЗадачи.Активность = Строка(Формат(ВыборкаЗадача.Активность, "ДФ=dd.MM.yy"));
				КонецЕсли;
			Иначе 
				СтрокаЗадачи.Активность = "";
			КонецЕсли; 
			
			ПараметрыОтбора = Новый Структура("Задача", ВыборкаЗадача.Задача);
			НайденныеСтроки = ДанныеИсполнителей.НайтиСтроки(ПараметрыОтбора);
			Исполнители = Новый Массив;
			
			Для Каждого Строка Из НайденныеСтроки Цикл
				Исполнители.Добавить(Строка.ИсполнительПредставление);
			КонецЦикла; 
			
			СтрокаЗадачи.Исполнитель = СтрСоединить(Исполнители, ", ");
						
			ИдентификаторЗадачи = Строка(ВыборкаЗадача.Задача.УникальныйИдентификатор());
			СтрокаЗадачи.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(СтрШаблон("%1;%2", 
				ВыборкаГруппа.ГруппаЗадачиЗаголовок, ИдентификаторЗадачи));
			ИдентификаторыСтрокДерева.Вставить(СтрокаЗадачи.UID, СтрокаЗадачи);
		КонецЦикла;
	КонецЦикла;
	
	ДанныеДерева = ИнструментыСервер.ПодготовитьДанныеИнструментаДляКлиента(Дерево, КолонкиИнструмента);
	
	Возврат ДанныеДерева;
	
КонецФункции

#КонецОбласти
