///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Получить настройку прочих отборов
// 
// Возвращаемое значение:
//  Структура  - насройка для отображения прочих отборов в НастройкиИнструментов 
//
Функция ПолучитьНастройкуПрочихОтборов(Параметры) Экспорт
	 
	ПользовательПустаяСсылка = Справочники.Пользователи.ПустаяСсылка();
	ПроектПустаяСсылка = Справочники.Проекты.ПустаяСсылка();
	ПродуктПустаяСсылка = Справочники.Продукты.ПустаяСсылка();
	ТегПустаяСсылка = Справочники.Теги.ПустаяСсылка();
	НаправлениеПустаяСсылка = Справочники.НаправленияРазработки.ПустаяСсылка();
	НазначениеПустаяСсылка = Справочники.НазначенияЗадач.ПустаяСсылка();
	ГруппаЗаказчиковПустаяСсылка = Справочники.ГруппыЗаказчиковНаправлений.ПустаяСсылка();   
	СистемаПустаяСсылка = Справочники.СистемыУчета.ПустаяСсылка();
	СтатусПустаяСсылка = Справочники.СтатусыОбъектов.ПустаяСсылка();
	                                                                          			
	НастройкиПрочиеОтборы = Новый Структура;
	НастройкиПрочиеОтборы.Вставить("Автор", Новый Структура("ПоУмолчанию", ПользовательПустаяСсылка));
	НастройкиПрочиеОтборы.Вставить("Направление", Новый Структура("ПоУмолчанию", НаправлениеПустаяСсылка));
	НастройкиПрочиеОтборы.Вставить("Назначение", Новый Структура("ПоУмолчанию", НазначениеПустаяСсылка));
	НастройкиПрочиеОтборы.Вставить("Наименование", Новый Структура("ПоУмолчанию", ""));	 
    НастройкиПрочиеОтборы.Вставить("Статус", Новый Структура("ПоУмолчанию", СтатусПустаяСсылка));	
	НастройкиПрочиеОтборы.Вставить("Проект", Новый Структура("ПоУмолчанию", ПроектПустаяСсылка));
	НастройкиПрочиеОтборы.Вставить("Тег", Новый Структура("ПоУмолчанию", ПроектПустаяСсылка));
	
	Если Параметры.ВидОчереди = Перечисления.ВидыОчереди.НаправлениеСистемаГруппаЗаказчиков 
		ИЛИ Параметры.ВидОчереди = Перечисления.ВидыОчереди.НаправлениеСистема 
		ИЛИ Параметры.ВидОчереди = Перечисления.ВидыОчереди.Филиал 
		ИЛИ Параметры.ВидОчереди = Перечисления.ВидыОчереди.ГабаритноеПланирование Тогда
		
		НастройкиПрочиеОтборы.Вставить("Продукт", Новый Структура("ПоУмолчанию", ПродуктПустаяСсылка));
		НастройкиПрочиеОтборы.Вставить("ГруппаЗаказчиков", Новый Структура("ПоУмолчанию", ГруппаЗаказчиковПустаяСсылка));
	КонецЕсли;
	
	Если Параметры.ВидОчереди = Перечисления.ВидыОчереди.Продукт
		ИЛИ Параметры.ВидОчереди = Перечисления.ВидыОчереди.ПродуктСистема
		ИЛИ Параметры.ВидОчереди = Перечисления.ВидыОчереди.Филиал
		ИЛИ Параметры.ВидОчереди = Перечисления.ВидыОчереди.ГабаритноеПланирование Тогда
		
		НастройкиПрочиеОтборы.Вставить("Система", Новый Структура("ПоУмолчанию", СистемаПустаяСсылка));
	КонецЕсли; 

	Возврат НастройкиПрочиеОтборы;
	
КонецФункции

Процедура ПолучитьДанныеОчередьЗаявок(НастройкиСписка, АдресРезультата, УИДЗамера) Экспорт
	
	ВремяНачала = ОценкаПроизводительности.НачатьЗамерВремени();

	ДанныеДерева = СформироватьСписокОчередьЗаявок(НастройкиСписка);
	
	ИнструментыСервер.ОповеститьИнструментОбОбновлении(ДанныеДерева, АдресРезультата, УИДЗамера);
	
	ОценкаПроизводительности.ЗакончитьЗамерВремениТехнологический("Обработки.ОчередьЗаявок.ПолучитьДанныеОчередьЗаявок.ВыполнениеФонового", ВремяНачала, , Строка(УИДЗамера));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

Функция СформироватьСписокОчередьЗаявок(НастройкиСписка)
	
	Дерево = Новый ДеревоЗначений;
	
	КолонкиИнструмента = Новый Массив;
	КолонкиИнструмента.Добавить("ИндексКартинки");
	КолонкиИнструмента.Добавить("Направление");
	КолонкиИнструмента.Добавить("Наименование");
	КолонкиИнструмента.Добавить("ЭтоГруппа");
	КолонкиИнструмента.Добавить("Порядок");
	КолонкиИнструмента.Добавить("UID");
	КолонкиИнструмента.Добавить("Заявка");
	КолонкиИнструмента.Добавить("Зафиксирован");
	КолонкиИнструмента.Добавить("Назначение");
	КолонкиИнструмента.Добавить("ПредставлениеПорядка");
	КолонкиИнструмента.Добавить("МояЗаявка");
	КолонкиИнструмента.Добавить("Система");
	КолонкиИнструмента.Добавить("ВидПроцесса");
	КолонкиИнструмента.Добавить("Автор");
	КолонкиИнструмента.Добавить("ДнейВОчереди");
	КолонкиИнструмента.Добавить("ГруппаЗаказчиков");
	КолонкиИнструмента.Добавить("ИндексКартинкиДоФиксации");
	КолонкиИнструмента.Добавить("Связь");
	КолонкиИнструмента.Добавить("МаксимальныйПорядок");
	КолонкиИнструмента.Добавить("МинимальныйПорядок");
	КолонкиИнструмента.Добавить("ПлановоеВремяЗадачЗаявки");
	КолонкиИнструмента.Добавить("СрокРеализации");
	КолонкиИнструмента.Добавить("Продукт");
	КолонкиИнструмента.Добавить("ПредставлениеСистемЗаявки");
	КолонкиИнструмента.Добавить("КлючОчереди");
	КолонкиИнструмента.Добавить("ПолучатьОповещения");
	КолонкиИнструмента.Добавить("Филиал");
	КолонкиИнструмента.Добавить("ОбъектКомментарий");
	КолонкиИнструмента.Добавить("ОграниченныйПросмотр");
	КолонкиИнструмента.Добавить("Назначена");
	КолонкиИнструмента.Добавить("ПредставлениеГруппЗаказчиков");
	КолонкиИнструмента.Добавить("Спринт");
	КолонкиИнструмента.Добавить("ЦелеваяЗаявка");
	КолонкиИнструмента.Добавить("Статус");
	
	Для Каждого Колонка Из КолонкиИнструмента Цикл
		Дерево.Колонки.Добавить(Колонка);
	КонецЦикла;
	
	ПостроительОбщий = Новый ПостроительЗапроса;
	ПостроительОбщий.Текст =
	#Область ТекстЗапроса
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОчередиЗаявок.КлючОчередиОбъекта КАК КлючОчереди,
	|	ЗаявкаНаРазработку.Направление КАК Направление,
	|	СистемыЗаявокНазначеныеПользователю.Система КАК Система,
	|	ЗаявкаСистемыРазработки.ГруппаЗаказчиков КАК ГруппаЗаказчиков,
	|	КлючиОчереди.Филиал КАК Филиал,
	|	ЗаявкаНаРазработку.Продукт КАК Продукт,
	|	ОчередиЗаявок.Заявка КАК Заявка,
	|	ОчередиЗаявок.Проект КАК Проект,
	|	ОчередиЗаявок.Порядок КАК Порядок,
	|	ОчередиЗаявок.Зафиксирован КАК Зафиксирован,
	|	ЕСТЬNULL(СтатусыЗаявокПоСистемамФилиалов.Статус, МинимальныеСтатусыЗаявок.Статус) КАК Статус
	|ПОМЕСТИТЬ ОчередьЗаявок
	|ИЗ
	|	РегистрСведений.ОчередиЗаявок КАК ОчередиЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючОчереди КАК КлючиОчереди
	|		ПО ОчередиЗаявок.КлючОчередиОбъекта = КлючиОчереди.Ссылка
	|			И (КлючиОчереди.ВидОчереди = &ВидОчереди)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку КАК ЗаявкаНаРазработку
	|		ПО (ЗаявкаНаРазработку.Ссылка = ОчередиЗаявок.Заявка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СистемыЗаявокНазначеныеПользователю КАК СистемыЗаявокНазначеныеПользователю
	|		ПО (СистемыЗаявокНазначеныеПользователю.Заявка = ОчередиЗаявок.Заявка)
	|			И (СистемыЗаявокНазначеныеПользователю.Филиал = КлючиОчереди.Филиал)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку.СистемыРазработки КАК ЗаявкаСистемыРазработки
	|		ПО (ЗаявкаСистемыРазработки.Ссылка = ОчередиЗаявок.Заявка)
	|			И (ЗаявкаСистемыРазработки.Система = СистемыЗаявокНазначеныеПользователю.Система)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаявокПоСистемамФилиалов КАК СтатусыЗаявокПоСистемамФилиалов
	|		ПО ОчередиЗаявок.Заявка = СтатусыЗаявокПоСистемамФилиалов.Заявка
	|			И (КлючиОчереди.Филиал = СтатусыЗаявокПоСистемамФилиалов.Филиал)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальныеСтатусыЗаявок КАК МинимальныеСтатусыЗаявок
	|		ПО ОчередиЗаявок.Заявка = МинимальныеСтатусыЗаявок.Заявка
	|ГДЕ
	|	&ВидОчереди = ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.Филиал)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОчередиЗаявок.КлючОчередиОбъекта,
	|	ЗаявкаНаРазработку.Направление,
	|	ВЫБОР
	|		КОГДА &ВидОчереди = ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.ПродуктСистема)
	|			ТОГДА КлючОчереди.Система
	|		ИНАЧЕ СтатусыЗаявокПоСистемам.Система
	|	КОНЕЦ,
	|	ЗаявкаСистемыРазработки.ГруппаЗаказчиков,
	|	ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка),
	|	КлючОчереди.Продукт,
	|	ОчередиЗаявок.Заявка,
	|	ОчередиЗаявок.Проект,
	|	ОчередиЗаявок.Порядок,
	|	ОчередиЗаявок.Зафиксирован,
	|	СтатусыЗаявокПоСистемам.Статус
	|ИЗ
	|	РегистрСведений.ОчередиЗаявок КАК ОчередиЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючОчереди КАК КлючОчереди
	|		ПО ОчередиЗаявок.КлючОчередиОбъекта = КлючОчереди.Ссылка
	|			И (КлючОчереди.ВидОчереди = &ВидОчереди)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку КАК ЗаявкаНаРазработку
	|		ПО (ЗаявкаНаРазработку.Ссылка = ОчередиЗаявок.Заявка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаявокПоСистемам КАК СтатусыЗаявокПоСистемам
	|		ПО (СтатусыЗаявокПоСистемам.Заявка = ОчередиЗаявок.Заявка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку.СистемыРазработки КАК ЗаявкаСистемыРазработки
	|		ПО (ЗаявкаСистемыРазработки.Ссылка = ОчередиЗаявок.Заявка)
	|			И (ЗаявкаСистемыРазработки.Система = СтатусыЗаявокПоСистемам.Система)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО (СтатусыЗаявокПоСистемам.Статус = СтатусыОбъектов.Ссылка)
	|			И (СтатусыОбъектов.Порядок <= &ПорядокСтатусаВРеализацию)
	|ГДЕ
	|	&ВидОчереди В (ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.Продукт), ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.ПродуктСистема))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОчередиЗаявок.КлючОчередиОбъекта,
	|	КлючОчереди.Направление,
	|	КлючОчереди.Система,
	|	ЗаявкаСистемыРазработки.ГруппаЗаказчиков,
	|	ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка),
	|	ЗаявкаНаРазработку.Продукт,
	|	ОчередиЗаявок.Заявка,
	|	ОчередиЗаявок.Проект,
	|	ОчередиЗаявок.Порядок,
	|	ОчередиЗаявок.Зафиксирован,
	|	СтатусыЗаявокПоСистемам.Статус
	|ИЗ
	|	РегистрСведений.ОчередиЗаявок КАК ОчередиЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючОчереди КАК КлючОчереди
	|		ПО ОчередиЗаявок.КлючОчередиОбъекта = КлючОчереди.Ссылка
	|			И (КлючОчереди.ВидОчереди = &ВидОчереди)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку КАК ЗаявкаНаРазработку
	|		ПО (ЗаявкаНаРазработку.Ссылка = ОчередиЗаявок.Заявка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку.СистемыРазработки КАК ЗаявкаСистемыРазработки
	|		ПО (ЗаявкаСистемыРазработки.Ссылка = ОчередиЗаявок.Заявка)
	|			И (ЗаявкаСистемыРазработки.Система = КлючОчереди.Система)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаявокПоСистемам КАК СтатусыЗаявокПоСистемам
	|		ПО (СтатусыЗаявокПоСистемам.Заявка = ОчередиЗаявок.Заявка)
	|			И (СтатусыЗаявокПоСистемам.Система = КлючОчереди.Система)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО (СтатусыЗаявокПоСистемам.Статус = СтатусыОбъектов.Ссылка)
	|			И (СтатусыОбъектов.Порядок <= &ПорядокСтатусаВРеализацию)
	|ГДЕ
	|	&ВидОчереди В (ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.НаправлениеСистемаГруппаЗаказчиков), ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.НаправлениеСистема))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОчередиЗаявок.КлючОчередиОбъекта,
	|	ЗаявкаНаРазработку.Направление,
	|	ЗаявкаСистемыРазработки.Система,
	|	ЗаявкаСистемыРазработки.ГруппаЗаказчиков,
	|	КлючОчереди.Филиал,
	|	ЗаявкаНаРазработку.Продукт,
	|	ОчередиЗаявок.Заявка,
	|	ОчередиЗаявок.Проект,
	|	ОчередиЗаявок.Порядок,
	|	ОчередиЗаявок.Зафиксирован,
	|	СтатусыЗаявокПоГруппамРазработки.Статус
	|ИЗ
	|	РегистрСведений.ОчередиЗаявок КАК ОчередиЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючОчереди КАК КлючОчереди
	|		ПО ОчередиЗаявок.КлючОчередиОбъекта = КлючОчереди.Ссылка
	|			И (КлючОчереди.ВидОчереди = &ВидОчереди)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку КАК ЗаявкаНаРазработку
	|		ПО ОчередиЗаявок.Заявка = ЗаявкаНаРазработку.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку.СистемыРазработки КАК ЗаявкаСистемыРазработки
	|		ПО (ЗаявкаСистемыРазработки.Ссылка = ОчередиЗаявок.Заявка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаявокПоГруппамРазработки КАК СтатусыЗаявокПоГруппамРазработки
	|		ПО (СтатусыЗаявокПоГруппамРазработки.Заявка = ОчередиЗаявок.Заявка)
	|			И (КлючОчереди.Филиал = СтатусыЗаявокПоГруппамРазработки.Филиал)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО (СтатусыЗаявокПоГруппамРазработки.Статус = СтатусыОбъектов.Ссылка)
	|			И (СтатусыОбъектов.Порядок <= &ПорядокСтатусаВРеализацию)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыВерхнегоУровняСтруктурыПодчиненности КАК ОбъектыВерхнегоУровняСтруктурыПодчиненности
	|		ПО (ОбъектыВерхнегоУровняСтруктурыПодчиненности.Объект = ОчередиЗаявок.Заявка)
	|			И (ОбъектыВерхнегоУровняСтруктурыПодчиненности.ВысшийРодитель ССЫЛКА Справочник.Проекты)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтруктураПодчиненности КАК СтруктураПодчиненности
	|		ПО (СтруктураПодчиненности.Объект = ОчередиЗаявок.Заявка)
	|			И (СтруктураПодчиненности.Родитель ССЫЛКА Справочник.Проекты)
	|ГДЕ
	|	&ВидОчереди = ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.ГабаритноеПланирование)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОчередиЗаявок.КлючОчередиОбъекта,
	|	ЗаявкаНаРазработку.Направление,
	|	ЗаявкаСистемыРазработки.Система,
	|	ЗаявкаСистемыРазработки.ГруппаЗаказчиков,
	|	КлючОчереди.Филиал,
	|	ЗаявкаНаРазработку.Продукт,
	|	ОчередиЗаявок.Заявка,
	|	ОчередиЗаявок.Проект,
	|	ОчередиЗаявок.Порядок,
	|	ОчередиЗаявок.Зафиксирован,
	|	ЕСТЬNULL(СтатусыЗаявокПоСистемамФилиалов.Статус, МинимальныеСтатусыЗаявок.Статус)
	|ИЗ
	|	РегистрСведений.ОчередиЗаявок КАК ОчередиЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючОчереди КАК КлючОчереди
	|		ПО ОчередиЗаявок.КлючОчередиОбъекта = КлючОчереди.Ссылка
	|			И (КлючОчереди.ВидОчереди = &ВидОчереди)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку КАК ЗаявкаНаРазработку
	|		ПО (ЗаявкаНаРазработку.Ссылка = ОчередиЗаявок.Заявка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СистемыЗаявокНазначеныеПользователю КАК СистемыЗаявокНазначеныеПользователю
	|		ПО (СистемыЗаявокНазначеныеПользователю.Заявка = ОчередиЗаявок.Заявка)
	|			И (СистемыЗаявокНазначеныеПользователю.Филиал = КлючОчереди.Филиал)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку.СистемыРазработки КАК ЗаявкаСистемыРазработки
	|		ПО (ЗаявкаСистемыРазработки.Ссылка = ОчередиЗаявок.Заявка)
	|			И (ЗаявкаСистемыРазработки.Система = СистемыЗаявокНазначеныеПользователю.Система)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаявокПоСистемамФилиалов КАК СтатусыЗаявокПоСистемамФилиалов
	|		ПО ОчередиЗаявок.Заявка = СтатусыЗаявокПоСистемамФилиалов.Заявка
	|			И (КлючОчереди.Филиал = СтатусыЗаявокПоСистемамФилиалов.Филиал)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальныеСтатусыЗаявок КАК МинимальныеСтатусыЗаявок
	|		ПО ОчередиЗаявок.Заявка = МинимальныеСтатусыЗаявок.Заявка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыВерхнегоУровняСтруктурыПодчиненности КАК ОбъектыВерхнегоУровняСтруктурыПодчиненности
	|		ПО (ОбъектыВерхнегоУровняСтруктурыПодчиненности.Объект = ОчередиЗаявок.Заявка)
	|			И (ОбъектыВерхнегоУровняСтруктурыПодчиненности.ВысшийРодитель ССЫЛКА Справочник.Проекты)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтруктураПодчиненности КАК СтруктураПодчиненности
	|		ПО (СтруктураПодчиненности.Объект = ОчередиЗаявок.Заявка)
	|			И (СтруктураПодчиненности.Родитель ССЫЛКА Справочник.Проекты)
	|ГДЕ
	|	&ВидОчереди = ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.ГабаритноеПланирование)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОчередьЗаявок.Заявка КАК Заявка
	|ПОМЕСТИТЬ СписокЗаявок
	|ИЗ
	|	ОчередьЗаявок КАК ОчередьЗаявок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокЗаявок.Заявка КАК Заявка,
	|	СУММА(ПланируемыеТрудозатраты.Трудозатраты) КАК ПлановыеТрудозатраты
	|ПОМЕСТИТЬ ПлановыеТрудозатратыЗадач
	|ИЗ
	|	СписокЗаявок КАК СписокЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СвязьОбъектовСЗаявкамиНаРазработку КАК СвязьОбъектовСЗаявкамиНаРазработку
	|		ПО СписокЗаявок.Заявка = СвязьОбъектовСЗаявкамиНаРазработку.Заявка_Новая
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПланируемыеТрудозатраты КАК ПланируемыеТрудозатраты
	|		ПО ((ВЫРАЗИТЬ(СвязьОбъектовСЗаявкамиНаРазработку.Объект КАК Документ.Задача)) = ПланируемыеТрудозатраты.Объект)
	|			И (ПланируемыеТрудозатраты.ТипТрудозатрат = ЗНАЧЕНИЕ(Перечисление.ТипыТрудозатрат.Разработка))
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокЗаявок.Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛичныеДелаСрезПоследних.Сотрудник КАК Сотрудник,
	|	ВЫРАЗИТЬ(ЛичныеДелаСрезПоследних.Данные КАК Справочник.Филиалы) КАК Филиал
	|ПОМЕСТИТЬ ЛичныеДела
	|ИЗ
	|	РегистрСведений.ЛичныеДела.СрезПоследних(
	|			&ТекущаяДата,
	|			Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоЛичнымДелам.ПереведенВДругоеПодразделение)
	|				И (ВЫРАЗИТЬ(Данные КАК Справочник.Филиалы)) <> ЗНАЧЕНИЕ(Справочник.Филиалы.ПустаяСсылка)) КАК ЛичныеДелаСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОчередьЗаявок.Заявка КАК Заявка,
	|	ОчередьЗаявок.Система КАК Система,
	|	Задача.Назначена КАК Назначена
	|ПОМЕСТИТЬ ПодчиненныеЗадачи
	|ИЗ
	|	ОчередьЗаявок КАК ОчередьЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтруктураПодчиненности КАК СтруктураПодчиненности
	|		ПО ((ВЫРАЗИТЬ(СтруктураПодчиненности.Родитель КАК Документ.ЗаявкаНаРазработку)) = ОчередьЗаявок.Заявка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Задача КАК Задача
	|		ПО (Задача.Ссылка = (ВЫРАЗИТЬ(СтруктураПодчиненности.Объект КАК Документ.Задача)))
	|			И (Задача.СистемаУчета = ОчередьЗаявок.Система)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОчередьЗаявок.Заявка КАК Заявка,
	|	ОчередьЗаявок.Система КАК Система,
	|	ЕСТЬNULL(СистемыЗаявокНазначеныеПользователю.ТекущийИсполнитель, ПодчиненныеЗадачи.Назначена) КАК Назначена
	|ПОМЕСТИТЬ НазначенныеЗаявокПоСистемам
	|ИЗ
	|	ОчередьЗаявок КАК ОчередьЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СистемыЗаявокНазначеныеПользователю КАК СистемыЗаявокНазначеныеПользователю
	|		ПО ОчередьЗаявок.Заявка = СистемыЗаявокНазначеныеПользователю.Заявка
	|			И ОчередьЗаявок.Система = СистемыЗаявокНазначеныеПользователю.Система
	|			И (СистемыЗаявокНазначеныеПользователю.ТекущийИсполнитель <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПодчиненныеЗадачи КАК ПодчиненныеЗадачи
	|		ПО (ПодчиненныеЗадачи.Заявка = ОчередьЗаявок.Заявка)
	|			И (ПодчиненныеЗадачи.Система = ОчередьЗаявок.Система)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НазначенныеЗаявокПоСистемам.Заявка КАК Заявка,
	|	НазначенныеЗаявокПоСистемам.Система КАК Система,
	|	ВЫБОР
	|		КОГДА НазначенныеЗаявокПоСистемам.Назначена = &Пользователь
	|			ТОГДА ""На мне""
	|		КОГДА НазначенныеЗаявокПоСистемам.Назначена = ЗаявкаНаРазработку.Автор
	|			ТОГДА ""Заказчик""
	|		КОГДА СправочникФилиалы.ТипФилиала <> ЗНАЧЕНИЕ(Перечисление.ТипыФилиалов.НеIT)
	|			ТОГДА ""IT""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Назначена
	|ПОМЕСТИТЬ НазначенаПоСистеме
	|ИЗ
	|	НазначенныеЗаявокПоСистемам КАК НазначенныеЗаявокПоСистемам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку КАК ЗаявкаНаРазработку
	|		ПО (ЗаявкаНаРазработку.Ссылка = НазначенныеЗаявокПоСистемам.Заявка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЛичныеДела КАК ЛичныеДела
	|		ПО (ЛичныеДела.Сотрудник = НазначенныеЗаявокПоСистемам.Назначена)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК СправочникФилиалы
	|		ПО (ЛичныеДела.Филиал = СправочникФилиалы.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОчередьЗаявок.Заявка КАК Заявка,
	|	ОчередьЗаявок.КлючОчереди КАК КлючОчереди,
	|	СвязанныеОбъекты.ВидСвязи КАК ВидСвязи,
	|	СвязанныеОбъекты.ПриемникСвязи КАК СвязаннаяЗаявка,
	|	ЕСТЬNULL(ОчередьЗаявокДоп.Порядок, НЕОПРЕДЕЛЕНО) КАК ПорядокСвязаннойЗаявки
	|ПОМЕСТИТЬ СвязиЗаявок
	|ИЗ
	|	ОчередьЗаявок КАК ОчередьЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СвязанныеОбъекты КАК СвязанныеОбъекты
	|		ПО ((ВЫРАЗИТЬ(СвязанныеОбъекты.ИсточникСвязи КАК Документ.ЗаявкаНаРазработку)) = ОчередьЗаявок.Заявка)
	|			И (СвязанныеОбъекты.ПриемникСвязи ССЫЛКА Документ.ЗаявкаНаРазработку)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОчередьЗаявок КАК ОчередьЗаявокДоп
	|		ПО (СвязанныеОбъекты.ПриемникСвязи = ОчередьЗаявокДоп.Заявка)
	|			И ОчередьЗаявок.КлючОчереди = ОчередьЗаявокДоп.КлючОчереди
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку КАК ДокументЗаявкаНаРазработку
	|		ПО ((ВЫРАЗИТЬ(СвязанныеОбъекты.ПриемникСвязи КАК Документ.ЗаявкаНаРазработку)) = ДокументЗаявкаНаРазработку.Ссылка)
	|ГДЕ
	|	НЕ ЕСТЬNULL(ДокументЗаявкаНаРазработку.Черновик, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОчередьЗаявок.Заявка,
	|	ОчередьЗаявок.КлючОчереди,
	|	ВЫБОР
	|		КОГДА СвязанныеОбъекты.ВидСвязи = ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Дублирует)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Дублируется)
	|		КОГДА СвязанныеОбъекты.ВидСвязи = ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Блокирует)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Блокируется)
	|		КОГДА СвязанныеОбъекты.ВидСвязи = ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Следующая)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Предыдущая)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.СвязанаС)
	|	КОНЕЦ,
	|	СвязанныеОбъекты.ИсточникСвязи,
	|	ЕСТЬNULL(ОчередьЗаявокДоп.Порядок, НЕОПРЕДЕЛЕНО)
	|ИЗ
	|	ОчередьЗаявок КАК ОчередьЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СвязанныеОбъекты КАК СвязанныеОбъекты
	|		ПО ((ВЫРАЗИТЬ(СвязанныеОбъекты.ПриемникСвязи КАК Документ.ЗаявкаНаРазработку)) = ОчередьЗаявок.Заявка)
	|			И (СвязанныеОбъекты.ИсточникСвязи ССЫЛКА Документ.ЗаявкаНаРазработку)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОчередьЗаявок КАК ОчередьЗаявокДоп
	|		ПО (СвязанныеОбъекты.ИсточникСвязи = ОчередьЗаявокДоп.Заявка)
	|			И ОчередьЗаявок.КлючОчереди = ОчередьЗаявокДоп.КлючОчереди
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку КАК ДокументЗаявкаНаРазработку
	|		ПО ((ВЫРАЗИТЬ(СвязанныеОбъекты.ИсточникСвязи КАК Документ.ЗаявкаНаРазработку)) = ДокументЗаявкаНаРазработку.Ссылка)
	|ГДЕ
	|	НЕ ЕСТЬNULL(ДокументЗаявкаНаРазработку.Черновик, ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СвязиЗаявок.Заявка КАК Заявка,
	|	СвязиЗаявок.КлючОчереди КАК КлючОчереди,
	|	МИНИМУМ(СвязиЗаявок.ПорядокСвязаннойЗаявки) КАК МинимальныйПорядок
	|ПОМЕСТИТЬ СвязиМинимальныйПорядок
	|ИЗ
	|	СвязиЗаявок КАК СвязиЗаявок
	|ГДЕ
	|	(СвязиЗаявок.ВидСвязи = ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Блокирует)
	|			ИЛИ СвязиЗаявок.ВидСвязи = ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Следующая))
	|
	|СГРУППИРОВАТЬ ПО
	|	СвязиЗаявок.Заявка,
	|	СвязиЗаявок.КлючОчереди
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СвязиЗаявок.Заявка КАК Заявка,
	|	СвязиЗаявок.КлючОчереди КАК КлючОчереди,
	|	МАКСИМУМ(СвязиЗаявок.ПорядокСвязаннойЗаявки) КАК МаксимальныйПорядок
	|ПОМЕСТИТЬ СвязиМаксимальныйПорядок
	|ИЗ
	|	СвязиЗаявок КАК СвязиЗаявок
	|ГДЕ
	|	(СвязиЗаявок.ВидСвязи = ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Блокируется)
	|			ИЛИ СвязиЗаявок.ВидСвязи = ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Предыдущая))
	|
	|СГРУППИРОВАТЬ ПО
	|	СвязиЗаявок.Заявка,
	|	СвязиЗаявок.КлючОчереди
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СвязиЗаявок.Заявка КАК Заявка,
	|	СвязиЗаявок.КлючОчереди КАК КлючОчереди,
	|	ЕСТЬNULL(СвязиМинимальныйПорядок.МинимальныйПорядок, НЕОПРЕДЕЛЕНО) КАК МинимальныйПорядок,
	|	ЕСТЬNULL(СвязиМаксимальныйПорядок.МаксимальныйПорядок, НЕОПРЕДЕЛЕНО) КАК МаксимальныйПорядок,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(СвязиЗаявок.ВидСвязи) > 1
	|			ТОГДА 5
	|		КОГДА МАКСИМУМ(СвязиЗаявок.ВидСвязи) = ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.СвязанаС)
	|			ТОГДА 5
	|		КОГДА МАКСИМУМ(СвязиЗаявок.ВидСвязи) = ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Дублирует)
	|			ТОГДА 1
	|		КОГДА МАКСИМУМ(СвязиЗаявок.ВидСвязи) = ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Дублируется)
	|			ТОГДА 1
	|		КОГДА МАКСИМУМ(СвязиЗаявок.ВидСвязи) = ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Блокирует)
	|			ТОГДА 2
	|		КОГДА МАКСИМУМ(СвязиЗаявок.ВидСвязи) = ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Блокируется)
	|			ТОГДА 2
	|		КОГДА МАКСИМУМ(СвязиЗаявок.ВидСвязи) = ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Предыдущая)
	|			ТОГДА 3
	|		КОГДА МАКСИМУМ(СвязиЗаявок.ВидСвязи) = ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Следующая)
	|			ТОГДА 4
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ИндексКартинкиСвязи
	|ПОМЕСТИТЬ СвязиИтог
	|ИЗ
	|	СвязиЗаявок КАК СвязиЗаявок
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвязиМинимальныйПорядок КАК СвязиМинимальныйПорядок
	|		ПО СвязиЗаявок.Заявка = СвязиМинимальныйПорядок.Заявка
	|			И СвязиЗаявок.КлючОчереди = СвязиМинимальныйПорядок.КлючОчереди
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвязиМаксимальныйПорядок КАК СвязиМаксимальныйПорядок
	|		ПО СвязиЗаявок.Заявка = СвязиМаксимальныйПорядок.Заявка
	|			И СвязиЗаявок.КлючОчереди = СвязиМаксимальныйПорядок.КлючОчереди
	|
	|СГРУППИРОВАТЬ ПО
	|	СвязиЗаявок.Заявка,
	|	СвязиЗаявок.КлючОчереди,
	|	СвязиМаксимальныйПорядок.МаксимальныйПорядок,
	|	СвязиМинимальныйПорядок.МинимальныйПорядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокЗаявок.Заявка КАК Заявка
	|ПОМЕСТИТЬ Подписки
	|ИЗ
	|	СписокЗаявок КАК СписокЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Участники КАК Участники
	|		ПО (Участники.Объект = СписокЗаявок.Заявка)
	|			И (Участники.Пользователь = &Пользователь)
	|			И (Участники.ПолучатьОповещения)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодготовленныеСообщенияПользователяПоКатегориям.Объект КАК Объект,
	|	СУММА(ВЫБОР
	|			КОГДА ПодготовленныеСообщенияПользователяПоКатегориям.КатегорияСообщения = ЗНАЧЕНИЕ(Перечисление.КатегорииСообщенийПользователя.Комментарии)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СобытияКомментарии
	|ПОМЕСТИТЬ СобытияПоТипам
	|ИЗ
	|	СписокЗаявок КАК СписокЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПодготовленныеСообщенияПользователяПоКатегориям КАК ПодготовленныеСообщенияПользователяПоКатегориям
	|		ПО (СписокЗаявок.Заявка = (ВЫРАЗИТЬ(ПодготовленныеСообщенияПользователяПоКатегориям.Объект КАК Документ.ЗаявкаНаРазработку)))
	|			И (ПодготовленныеСообщенияПользователяПоКатегориям.ТипОповещения = ЗНАЧЕНИЕ(Перечисление.ТипыОповещенийПользователя.ОповещениеВРабочийСтол))
	|			И (ПодготовленныеСообщенияПользователяПоКатегориям.Пользователь = &Пользователь)
	|			И (НЕ ПодготовленныеСообщенияПользователяПоКатегориям.Отправлено)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодготовленныеСообщенияПользователяПоКатегориям.Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокЗаявок.Заявка КАК Заявка,
	|	МИНИМУМ(ДокументСпринт.ДатаНачала) КАК ДатаНачала
	|ПОМЕСТИТЬ ЗаявкиСоСпринтами
	|ИЗ
	|	РегистрСведений.СоставСпринтов КАК СоставСпринтов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокЗаявок КАК СписокЗаявок
	|		ПО СоставСпринтов.Объект = СписокЗаявок.Заявка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Спринт КАК ДокументСпринт
	|		ПО СоставСпринтов.Спринт = ДокументСпринт.Ссылка
	|ГДЕ
	|	КОНЕЦПЕРИОДА(ДокументСпринт.ДатаОкончания, ДЕНЬ) >= &ТекущаяДата
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокЗаявок.Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОчередьЗаявок.КлючОчереди КАК КлючОчереди,
	|	ОчередьЗаявок.Направление КАК Направление,
	|	ОчередьЗаявок.Система КАК Система,
	|	ОчередьЗаявок.ГруппаЗаказчиков КАК ГруппаЗаказчиков,
	|	ОчередьЗаявок.Филиал КАК Филиал,
	|	ОчередьЗаявок.Продукт КАК Продукт,
	|	ОчередьЗаявок.Заявка КАК Заявка,
	|	ОчередьЗаявок.Проект КАК Проект,
	|	ОчередьЗаявок.Порядок КАК Порядок,
	|	ОчередьЗаявок.Зафиксирован КАК Зафиксирован,
	|	ОчередьЗаявок.Статус КАК Статус,
	|	СтатусыОбъектов.ИндексКартинки КАК ИндексКартинкиДоФиксации,
	|	ВЫБОР
	|		КОГДА НЕ ОчередьЗаявок.Зафиксирован
	|			ТОГДА СтатусыОбъектов.ИндексКартинки
	|		КОГДА СтатусыОбъектов.ИндексЗафиксирован > 0
	|			ТОГДА СтатусыОбъектов.ИндексЗафиксирован
	|		ИНАЧЕ &ИндексКартинкиЗафиксирован
	|	КОНЕЦ КАК ИндексКартинки,
	|	ДокументЗаявка.Номер КАК Номер,
	|	ДокументЗаявка.Наименование КАК Наименование,
	|	ВЫРАЗИТЬ(ДокументЗаявка.ПредставлениеСистем КАК СТРОКА(200)) КАК ПредставлениеСистемЗаявки,
	|	ДокументЗаявка.ВидПроцесса КАК ВидПроцесса,
	|	ДокументЗаявка.Автор КАК Автор,
	|	ДокументЗаявка.Назначение КАК Назначение,
	|	ДокументЗаявка.СерьезностьОшибки КАК СерьезностьОшибки,
	|	ДокументЗаявка.СрокРеализации КАК СрокРеализации,
	|	ДокументЗаявка.ОграниченныйПросмотр КАК ОграниченныйПросмотр,
	|	РАЗНОСТЬДАТ(СрезИсторииСтатусов.Период, &ТекущаяДата, ДЕНЬ) КАК ДнейВОчереди,
	|	ЕСТЬNULL(ЗначенияДополнительныхРеквизитовОбъектов.Значение, ЛОЖЬ) КАК ЦелеваяЗаявка
	|ПОМЕСТИТЬ ДанныеЗаявокВОчереди
	|ИЗ
	|	ОчередьЗаявок КАК ОчередьЗаявок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО ОчередьЗаявок.Статус = СтатусыОбъектов.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку КАК ДокументЗаявка
	|		ПО (ДокументЗаявка.Ссылка = ОчередьЗаявок.Заявка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСтатусовЗаявокПоСистемам.СрезПервых КАК СрезИсторииСтатусов
	|		ПО ОчередьЗаявок.Заявка = СрезИсторииСтатусов.Заявка
	|			И ОчередьЗаявок.Система = СрезИсторииСтатусов.Система
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияДополнительныхРеквизитовОбъектов КАК ЗначенияДополнительныхРеквизитовОбъектов
	|		ПО (ДокументЗаявка.Ссылка = ЗначенияДополнительныхРеквизитовОбъектов.Объект)
	|			И (ЗначенияДополнительныхРеквизитовОбъектов.Реквизит = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДополнительныхРеквизитов.ЦелеваяЗаявка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеЗаявокВОчереди.КлючОчереди КАК КлючОчереди,
	|	ДанныеЗаявокВОчереди.Направление КАК Направление,
	|	ДанныеЗаявокВОчереди.Система КАК Система,
	|	ДанныеЗаявокВОчереди.ГруппаЗаказчиков КАК ГруппаЗаказчиков,
	|	ДанныеЗаявокВОчереди.Филиал КАК Филиал,
	|	ДанныеЗаявокВОчереди.Продукт КАК Продукт,
	|	ДанныеЗаявокВОчереди.Заявка КАК Заявка,
	|	ДанныеЗаявокВОчереди.Порядок КАК Порядок,
	|	ДанныеЗаявокВОчереди.Зафиксирован КАК Зафиксирован,
	|	ДанныеЗаявокВОчереди.Статус КАК Статус,
	|	ДанныеЗаявокВОчереди.ИндексКартинкиДоФиксации КАК ИндексКартинкиДоФиксации,
	|	ДанныеЗаявокВОчереди.ИндексКартинки КАК ИндексКартинки,
	|	ДанныеЗаявокВОчереди.Номер КАК Номер,
	|	ДанныеЗаявокВОчереди.Наименование КАК Наименование,
	|	ДанныеЗаявокВОчереди.ПредставлениеСистемЗаявки КАК ПредставлениеСистемЗаявки,
	|	ДанныеЗаявокВОчереди.Проект КАК Проект,
	|	ДанныеЗаявокВОчереди.ВидПроцесса КАК ВидПроцесса,
	|	ДанныеЗаявокВОчереди.Автор КАК Автор,
	|	ДанныеЗаявокВОчереди.Назначение КАК Назначение,
	|	ДанныеЗаявокВОчереди.СерьезностьОшибки КАК СерьезностьОшибки,
	|	ДанныеЗаявокВОчереди.СрокРеализации КАК СрокРеализации,
	|	ВЫБОР
	|		КОГДА ДанныеЗаявокВОчереди.Автор = &Пользователь
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК МояЗаявка,
	|	ДанныеЗаявокВОчереди.ДнейВОчереди КАК ДнейВОчереди,
	|	ДанныеЗаявокВОчереди.ОграниченныйПросмотр КАК ОграниченныйПросмотр,
	|	ПРЕДСТАВЛЕНИЕ(ЗаявкаСистемыРазработки.ГруппаЗаказчиков) КАК ГруппаЗаказчиковПредставлениеВсе,
	|	СправочникПользователи.Наименование КАК АвторПредставление,
	|	НаправленияРазработки.Наименование КАК ПредставлениеНаправления,
	|	СправочникСистемыУчета.Наименование КАК ПредставлениеСистемы,
	|	ЕСТЬNULL(СерьезностьОшибок.ИмяКартинки, НазначенияЗадач.ИмяКартинки) КАК НазначениеИмяКартинки,
	|	ЕСТЬNULL(Филиалы.Наименование, """") КАК ПредставлениеФилиал,
	|	ЕСТЬNULL(ГруппыЗаказчиковНаправлений.Наименование, """") КАК ПредставлениеГруппыЗаказчиков,
	|	ВЫБОР
	|		КОГДА ДанныеЗаявокВОчереди.ГруппаЗаказчиков = ЗНАЧЕНИЕ(Справочник.ГруппыЗаказчиковНаправлений.ПрочиеЗаказчики)
	|			ТОГДА ""яяяяяяяяя""
	|		ИНАЧЕ ЕСТЬNULL(ГруппыЗаказчиковНаправлений.Наименование, """")
	|	КОНЕЦ КАК СортировкаГруппыЗаказчиков,
	|	ЕСТЬNULL(Проекты.КороткоеНазвание, """") КАК КороткоеНазваниеПроекта,
	|	ЕСТЬNULL(СвязиИтог.ИндексКартинкиСвязи, НЕОПРЕДЕЛЕНО) КАК Связь,
	|	ЕСТЬNULL(СвязиИтог.МаксимальныйПорядок, НЕОПРЕДЕЛЕНО) КАК МаксимальныйПорядок,
	|	ЕСТЬNULL(СвязиИтог.МинимальныйПорядок, НЕОПРЕДЕЛЕНО) КАК МинимальныйПорядок,
	|	ЕСТЬNULL(ПлановыеТрудозатратыЗадач.ПлановыеТрудозатраты, 0) КАК ПлановоеВремяЗадачЗаявки,
	|	ВЫБОР
	|		КОГДА Подписки.Заявка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПолучатьОповещения,
	|	ЕСТЬNULL(СобытияПоТипам.СобытияКомментарии, 0) КАК Комментарии,
	|	ЕСТЬNULL(ЗаявкиСоСпринтами.ДатаНачала, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаНачалаСпринт,
	|	ЕСТЬNULL(НазначенаПоСистеме.Назначена, """") КАК Назначена,
	|	ДанныеЗаявокВОчереди.ЦелеваяЗаявка КАК ЦелеваяЗаявка
	|ИЗ
	|	ДанныеЗаявокВОчереди КАК ДанныеЗаявокВОчереди
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку.СистемыРазработки КАК ЗаявкаСистемыРазработки
	|		ПО (ЗаявкаСистемыРазработки.Ссылка = ДанныеЗаявокВОчереди.Заявка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НаправленияРазработки КАК НаправленияРазработки
	|		ПО ДанныеЗаявокВОчереди.Направление = НаправленияРазработки.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СистемыУчета КАК СправочникСистемыУчета
	|		ПО ДанныеЗаявокВОчереди.Система = СправочникСистемыУчета.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК СправочникПользователи
	|		ПО ДанныеЗаявокВОчереди.Автор = СправочникПользователи.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НазначенияЗадач КАК НазначенияЗадач
	|		ПО ДанныеЗаявокВОчереди.Назначение = НазначенияЗадач.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерьезностьОшибок КАК СерьезностьОшибок
	|		ПО (СерьезностьОшибок.Ссылка = ДанныеЗаявокВОчереди.СерьезностьОшибки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК Филиалы
	|		ПО ДанныеЗаявокВОчереди.Филиал = Филиалы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыЗаказчиковНаправлений КАК ГруппыЗаказчиковНаправлений
	|		ПО ДанныеЗаявокВОчереди.ГруппаЗаказчиков = ГруппыЗаказчиковНаправлений.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Проекты КАК Проекты
	|		ПО ДанныеЗаявокВОчереди.Проект = Проекты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвязиИтог КАК СвязиИтог
	|		ПО ДанныеЗаявокВОчереди.Заявка = СвязиИтог.Заявка
	|			И ДанныеЗаявокВОчереди.КлючОчереди = СвязиИтог.КлючОчереди
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПлановыеТрудозатратыЗадач КАК ПлановыеТрудозатратыЗадач
	|		ПО ДанныеЗаявокВОчереди.Заявка = ПлановыеТрудозатратыЗадач.Заявка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Подписки КАК Подписки
	|		ПО ДанныеЗаявокВОчереди.Заявка = Подписки.Заявка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СобытияПоТипам КАК СобытияПоТипам
	|		ПО ДанныеЗаявокВОчереди.Заявка = СобытияПоТипам.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТегиОбъектов КАК ТегиОбъектов
	|		ПО ((ВЫРАЗИТЬ(ТегиОбъектов.Объект КАК Документ.ЗаявкаНаРазработку)) = ДанныеЗаявокВОчереди.Заявка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ НазначенаПоСистеме КАК НазначенаПоСистеме
	|		ПО (НазначенаПоСистеме.Заявка = ДанныеЗаявокВОчереди.Заявка)
	|			И (НазначенаПоСистеме.Система = ДанныеЗаявокВОчереди.Система)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкиСоСпринтами КАК ЗаявкиСоСпринтами
	|		ПО (ЗаявкиСоСпринтами.Заявка = ДанныеЗаявокВОчереди.Заявка)
	|{ГДЕ
	|	ТегиОбъектов.Тег КАК Тег}";
	#КонецОбласти
	
	ПостроительОбщий.ЗаполнитьНастройки();
	
	ТекущаяДата = ТекущаяДатаСеанса();
	Порядок = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Справочники.СтатусыОбъектов.ВРеализацию, "Порядок");
	ВидОчереди = НастройкиСписка.ВидОчереди;
	
	ПостроительОбщий.Параметры.Вставить("ВидОчереди", ВидОчереди);
	ПостроительОбщий.Параметры.Вставить("ДатаНачала", НачалоМесяца(ТекущаяДата));
	ПостроительОбщий.Параметры.Вставить("ДатаОкончания", КонецМесяца(ТекущаяДата));
	ПостроительОбщий.Параметры.Вставить("ИндексКартинкиЗафиксирован", Справочники.СтатусыОбъектов.ИндексКартинкиЗафиксирован());
	ПостроительОбщий.Параметры.Вставить("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	ПостроительОбщий.Параметры.Вставить("ПорядокСтатусаВРеализацию", Порядок);
	ПостроительОбщий.Параметры.Вставить("ТекущаяДата", НачалоДня(ТекущаяДата));
	
	Если ВидОчереди = Перечисления.ВидыОчереди.НаправлениеСистемаГруппаЗаказчиков 
		ИЛИ ВидОчереди = Перечисления.ВидыОчереди.НаправлениеСистема Тогда
		
		ОбщегоНазначения.ПостроительЗапросаУстановитьОтбор(ПостроительОбщий, "Система", ВидСравнения.ВСписке, НастройкиСписка.Системы);
		
	ИначеЕсли ВидОчереди = Перечисления.ВидыОчереди.Продукт
		ИЛИ ВидОчереди = Перечисления.ВидыОчереди.ПродуктСистема Тогда
		
		ОбщегоНазначения.ПостроительЗапросаУстановитьОтбор(ПостроительОбщий, "Продукт", ВидСравнения.ВСписке, НастройкиСписка.Продукты);
		
	ИначеЕсли ВидОчереди = Перечисления.ВидыОчереди.Филиал
		ИЛИ ВидОчереди = Перечисления.ВидыОчереди.ГабаритноеПланирование Тогда
		
		ОбщегоНазначения.ПостроительЗапросаУстановитьОтбор(ПостроительОбщий, "Филиал", ВидСравнения.ВСписке, НастройкиСписка.Филиалы);
	КонецЕсли;
	
	Для Каждого Фильтр Из НастройкиСписка.Фильтры Цикл
		Если Фильтр.Значение.Использование Тогда
			ОбщегоНазначения.ПостроительЗапросаУстановитьОтбор(ПостроительОбщий, Фильтр.Ключ, 
				Фильтр.Значение.ВидСравнения, Фильтр.Значение.ПравоеЗначение);
		КонецЕсли;
	КонецЦикла;
	
	ПостроительОбщий.Выполнить(); 
	
	Выборка = ИнтеграцияДополнительныхПодсистем.ДополнитьИсточникДаннымиГабаритногоПланирования(ПостроительОбщий.Результат, ВидОчереди);
	
	Источник = Новый ОписаниеИсточникаДанных(Выборка);
	
	Источник.Колонки["Направление"].Измерение = Истина;
	Источник.Колонки["Система"].Измерение = Истина;
	Источник.Колонки["ГруппаЗаказчиков"].Измерение = Истина;
	Источник.Колонки["Продукт"].Измерение = Истина;
	Источник.Колонки["Филиал"].Измерение = Истина;
	Источник.Колонки["Заявка"].Измерение = Истина;
	
	Если ВидОчереди = Перечисления.ВидыОчереди.ГабаритноеПланирование Тогда
		Источник.Колонки["ГруппировкаГабаритногоПланирования"].Измерение = Истина;
	КонецЕсли;
	
	Для Каждого Колонка Из Источник.Колонки Цикл
		Колонка.Итог = СтрШаблон("МИНИМУМ(%1)", Колонка.Имя);
	КонецЦикла;
	
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.ИсточникДанных = Источник;
	ПостроительЗапроса.ЗаполнитьНастройки();
	ПостроительЗапроса.Измерения.Очистить();
	ПостроительЗапроса.Порядок.Очистить();
	
	// Итоги по заявке используются, чтобы на уровне детальных записей 
	// собрать представление групп заказчиков и назначенных заявки.
	
	Если ВидОчереди = Перечисления.ВидыОчереди.Продукт Тогда
		ПостроительЗапроса.Измерения.Добавить("Продукт");
		ПостроительЗапроса.Измерения.Добавить("Заявка");
		
		ПостроительЗапроса.Порядок.Добавить("Продукт");
		ПостроительЗапроса.Порядок.Добавить("Порядок");
		
	ИначеЕсли ВидОчереди = Перечисления.ВидыОчереди.ПродуктСистема Тогда
		ПостроительЗапроса.Измерения.Добавить("Продукт");
		ПостроительЗапроса.Измерения.Добавить("Система");
		ПостроительЗапроса.Измерения.Добавить("Заявка");
		
		ПостроительЗапроса.Порядок.Добавить("Продукт");
		ПостроительЗапроса.Порядок.Добавить("ПредставлениеСистемы");
		ПостроительЗапроса.Порядок.Добавить("Порядок");
		
	ИначеЕсли ВидОчереди = Перечисления.ВидыОчереди.Филиал Тогда
		ПостроительЗапроса.Измерения.Добавить("Филиал");
		ПостроительЗапроса.Измерения.Добавить("Заявка");
		
		ПостроительЗапроса.Порядок.Добавить("Филиал");
		ПостроительЗапроса.Порядок.Добавить("ПредставлениеФилиал");
		ПостроительЗапроса.Порядок.Добавить("Порядок");
		
	ИначеЕсли ВидОчереди = Перечисления.ВидыОчереди.НаправлениеСистема Тогда
		ПостроительЗапроса.Измерения.Добавить("Направление");
		ПостроительЗапроса.Измерения.Добавить("Система");
		ПостроительЗапроса.Измерения.Добавить("Заявка");
		
		ПостроительЗапроса.Порядок.Добавить("ПредставлениеНаправления");
		ПостроительЗапроса.Порядок.Добавить("ПредставлениеСистемы");
		ПостроительЗапроса.Порядок.Добавить("Порядок");
		
	ИначеЕсли ВидОчереди = Перечисления.ВидыОчереди.ГабаритноеПланирование Тогда
		ПостроительЗапроса.Измерения.Добавить("Филиал");
		ПостроительЗапроса.Измерения.Добавить("ГруппировкаГабаритногоПланирования");
		ПостроительЗапроса.Измерения.Добавить("Заявка");
		
		ПостроительЗапроса.Порядок.Добавить("Филиал");
		ПостроительЗапроса.Порядок.Добавить("ПредставлениеФилиал");
		ПостроительЗапроса.Порядок.Добавить("ПорядокГруппировокГабаритногоПланирования");
		ПостроительЗапроса.Порядок.Добавить("Порядок");
		
	Иначе
		
		// Перечисления.ВидыОчереди.НаправлениеСистемаГруппаЗаказчиков
		ПостроительЗапроса.Измерения.Добавить("Направление");
		ПостроительЗапроса.Измерения.Добавить("Система");
		ПостроительЗапроса.Измерения.Добавить("ГруппаЗаказчиков");
		ПостроительЗапроса.Измерения.Добавить("Заявка");
		
		ПостроительЗапроса.Порядок.Добавить("ПредставлениеНаправления");
		ПостроительЗапроса.Порядок.Добавить("ПредставлениеСистемы");
		ПостроительЗапроса.Порядок.Добавить("СортировкаГруппыЗаказчиков");
		ПостроительЗапроса.Порядок.Добавить("Порядок");
	КонецЕсли;
	
	ПостроительЗапроса.Выполнить();
	
	ОбщаяВыборка = ПостроительЗапроса.Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ОбщаяВыборка.Следующий();
	
	ИндексКартинки_Группа = Справочники.СтатусыОбъектов.ИндексКартинкиГруппа();
	
	КартинкиСвязей = Новый Соответствие;
	КартинкиСвязей.Вставить(1, БиблиотекаКартинок.Дублирует);
	КартинкиСвязей.Вставить(2, БиблиотекаКартинок.Блокирует);
	КартинкиСвязей.Вставить(3, БиблиотекаКартинок.Предыдущая);
	КартинкиСвязей.Вставить(4, БиблиотекаКартинок.Следующая);
	КартинкиСвязей.Вставить(5, БиблиотекаКартинок.СвязанаС);
	
	Если ВидОчереди = Перечисления.ВидыОчереди.НаправлениеСистемаГруппаЗаказчиков Тогда
		ВыборкаГруппаНаправление = ОбщаяВыборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаГруппаНаправление.Следующий() Цикл
			КоличествоЗаявокНаправление = 0;
			ИдентификаторНаправления = Строка(ВыборкаГруппаНаправление.Направление.УникальныйИдентификатор());

			НоваяСтрокаНаправление = Дерево.Строки.Добавить();
			НоваяСтрокаНаправление.ИндексКартинки = ИндексКартинки_Группа;
			НоваяСтрокаНаправление.Направление = ВыборкаГруппаНаправление.Направление;
			НоваяСтрокаНаправление.ЭтоГруппа = Истина;
			НоваяСтрокаНаправление.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторНаправления);
			
			ВыборкаГруппаСистема = ВыборкаГруппаНаправление.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаГруппаСистема.Следующий() Цикл
				КоличествоЗаявокСистема = 0;
				ИдентификаторСистемы = Строка(ВыборкаГруппаСистема.Система.УникальныйИдентификатор());
				ИдентификаторСтроки = ИдентификаторНаправления + ";" + ИдентификаторСистемы;
				
				НоваяСтрокаСистема = НоваяСтрокаНаправление.Строки.Добавить();
				НоваяСтрокаСистема.ИндексКартинки = ИндексКартинки_Группа;
				НоваяСтрокаСистема.Направление = ВыборкаГруппаНаправление.Направление;
				НоваяСтрокаСистема.Система = ВыборкаГруппаСистема.Система;
				НоваяСтрокаСистема.ЭтоГруппа = Истина;
				НоваяСтрокаСистема.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторСтроки);
				
				ВыборкаГруппаЗаказчик = ВыборкаГруппаСистема.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаГруппаЗаказчик.Следующий() Цикл
					ВыводимГруппуЗаказчиков = ЗначениеЗаполнено(ВыборкаГруппаЗаказчик.ГруппаЗаказчиков);
					
					Если ВыводимГруппуЗаказчиков Тогда
						ИдентификаторГруппыЗаказчиков = Строка(ВыборкаГруппаЗаказчик.ГруппаЗаказчиков.УникальныйИдентификатор());
						ИдентификаторСтроки = ИдентификаторНаправления + ";" + ИдентификаторСистемы + ";" + ИдентификаторГруппыЗаказчиков;
						
						НоваяСтрокаЗаказчик = НоваяСтрокаСистема.Строки.Добавить();
						НоваяСтрокаЗаказчик.ИндексКартинки = ИндексКартинки_Группа;
						НоваяСтрокаЗаказчик.Направление = ВыборкаГруппаНаправление.Направление;
						НоваяСтрокаЗаказчик.Система = ВыборкаГруппаСистема.Система;
						НоваяСтрокаЗаказчик.ГруппаЗаказчиков = ВыборкаГруппаЗаказчик.ГруппаЗаказчиков;
						НоваяСтрокаЗаказчик.ЭтоГруппа = Истина;
						НоваяСтрокаЗаказчик.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторСтроки);
						
						СтрокаГруппыДляВыводаЗаявок = НоваяСтрокаЗаказчик;
					Иначе
						СтрокаГруппыДляВыводаЗаявок = НоваяСтрокаСистема;
					КонецЕсли;
					
					ВыборкаЗаявка = ВыборкаГруппаЗаказчик.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					КоличествоЗаявок = ВыборкаЗаявка.Количество();
					
					Пока ВыборкаЗаявка.Следующий() Цикл
						ИдентификаторЭлемента = Строка(ВыборкаЗаявка.Заявка.УникальныйИдентификатор());
						ИдентификаторСтроки = ИдентификаторНаправления + ";" + ИдентификаторСистемы + ";" + ИдентификаторЭлемента;
						
						НоваяСтрока = СтрокаГруппыДляВыводаЗаявок.Строки.Добавить();
						UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторСтроки);
						
						ЗаполнитьСтрокуЗаявки_ОчередьЗаявок(НоваяСтрока, ВыборкаЗаявка, UID, КартинкиСвязей);  
						
						Если НЕ ЗначениеЗаполнено(ВыборкаЗаявка.Заявка) Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
					Если ВыводимГруппуЗаказчиков Тогда
						// Представление группы заказчиков
						НоваяСтрокаЗаказчик.Наименование = СтрШаблон("%1   |   Заявок: %2", 
						ВыборкаГруппаЗаказчик.ПредставлениеГруппыЗаказчиков, КоличествоЗаявок);
					КонецЕсли; 
					
					КоличествоЗаявокСистема = КоличествоЗаявокСистема + КоличествоЗаявок;
				КонецЦикла;
				
				// Представление системы
				НоваяСтрокаСистема.Наименование = СтрШаблон("%1   |   Заявок: %2", 
				ВыборкаГруппаСистема.ПредставлениеСистемы, КоличествоЗаявокСистема);
				
				КоличествоЗаявокНаправление = КоличествоЗаявокНаправление + КоличествоЗаявокСистема;
			КонецЦикла;
			
			// Представление направления
			НоваяСтрокаНаправление.Наименование = СтрШаблон("%1   |   Заявок: %2", 
			ВыборкаГруппаНаправление.ПредставлениеНаправления, КоличествоЗаявокНаправление);
		КонецЦикла;
		
	ИначеЕсли ВидОчереди = Перечисления.ВидыОчереди.НаправлениеСистема Тогда   
		ВыборкаГруппаНаправление = ОбщаяВыборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаГруппаНаправление.Следующий() Цикл
			КоличествоЗаявокНаправление = 0;
			ИдентификаторНаправления = Строка(ВыборкаГруппаНаправление.Направление.УникальныйИдентификатор());
			
			НоваяСтрокаНаправление = Дерево.Строки.Добавить();	
			НоваяСтрокаНаправление.ИндексКартинки = ИндексКартинки_Группа;
			НоваяСтрокаНаправление.Направление = ВыборкаГруппаНаправление.Направление;
			НоваяСтрокаНаправление.ЭтоГруппа = Истина;
			НоваяСтрокаНаправление.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторНаправления);
			
			ВыборкаГруппаСистема = ВыборкаГруппаНаправление.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаГруппаСистема.Следующий() Цикл			
				ИдентификаторСистемы = Строка(ВыборкаГруппаСистема.Система.УникальныйИдентификатор());
				ИдентификаторСтроки = ИдентификаторНаправления + ";" + ИдентификаторСистемы;
				
				НоваяСтрокаСистема = НоваяСтрокаНаправление.Строки.Добавить();
				НоваяСтрокаСистема.ИндексКартинки = ИндексКартинки_Группа;
				НоваяСтрокаСистема.Направление = ВыборкаГруппаНаправление.Направление;
				НоваяСтрокаСистема.Система = ВыборкаГруппаСистема.Система;
				НоваяСтрокаСистема.ЭтоГруппа = Истина;
				НоваяСтрокаСистема.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторСтроки);
				
				ВыборкаЗаявка = ВыборкаГруппаСистема.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				КоличествоЗаявокСистема = ВыборкаЗаявка.Количество();
				
				Пока ВыборкаЗаявка.Следующий() Цикл
					ИдентификаторЭлемента = Строка(ВыборкаЗаявка.Заявка.УникальныйИдентификатор());
					ИдентификаторСтроки = ИдентификаторНаправления + ";" + ИдентификаторСистемы + ";" + ИдентификаторЭлемента;
					
					НоваяСтрока = НоваяСтрокаСистема.Строки.Добавить();
					UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторСтроки);
					
					ЗаполнитьСтрокуЗаявки_ОчередьЗаявок(НоваяСтрока, ВыборкаЗаявка, UID, КартинкиСвязей);  
					
					Если НЕ ЗначениеЗаполнено(ВыборкаЗаявка.Заявка) Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла; 
				
				// Представление системы
				НоваяСтрокаСистема.Наименование = СтрШаблон("%1   |   Заявок: %2", 
				ВыборкаГруппаСистема.ПредставлениеСистемы, КоличествоЗаявокСистема); 
				
				КоличествоЗаявокНаправление = КоличествоЗаявокНаправление + КоличествоЗаявокСистема;
			КонецЦикла;
			
			// Представление направления
			НоваяСтрокаНаправление.Наименование = СтрШаблон("%1   |   Заявок: %2", 
			ВыборкаГруппаНаправление.ПредставлениеНаправления, КоличествоЗаявокНаправление);
		КонецЦикла;
		
	ИначеЕсли ВидОчереди = Перечисления.ВидыОчереди.Продукт Тогда   
		ВыборкаГруппаПродукт = ОбщаяВыборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаГруппаПродукт.Следующий() Цикл
			ИдентификаторГруппы = Строка(ВыборкаГруппаПродукт.Продукт.УникальныйИдентификатор());
			
			НоваяСтрокаПродукт = Дерево.Строки.Добавить();	
			НоваяСтрокаПродукт.ИндексКартинки = ИндексКартинки_Группа;
			НоваяСтрокаПродукт.Продукт = ВыборкаГруппаПродукт.Продукт;
			НоваяСтрокаПродукт.ЭтоГруппа = Истина;
			НоваяСтрокаПродукт.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторГруппы);
			
			ВыборкаЗаявка = ВыборкаГруппаПродукт.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаЗаявка.Следующий() Цикл	
				ИдентификаторЭлемента = Строка(ВыборкаЗаявка.Заявка.УникальныйИдентификатор());
				UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторГруппы + ИдентификаторЭлемента);
				НоваяСтрока = НоваяСтрокаПродукт.Строки.Добавить(); 					
				ЗаполнитьСтрокуЗаявки_ОчередьЗаявок(НоваяСтрока, ВыборкаЗаявка, UID, КартинкиСвязей);				   
				
				Если НЕ ЗначениеЗаполнено(ВыборкаЗаявка.Заявка) Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			НоваяСтрокаПродукт.Наименование = СтрШаблон("%1   |   Заявок: %2", 
			Строка(ВыборкаГруппаПродукт.Продукт), ВыборкаЗаявка.Количество());
		КонецЦикла;
		
	ИначеЕсли ВидОчереди = Перечисления.ВидыОчереди.ПродуктСистема Тогда
		ВыборкаГруппаПродукт = ОбщаяВыборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаГруппаПродукт.Следующий() Цикл 
			КоличествоЗаявокПродукт = 0;
			ИдентификаторГруппы = Строка(ВыборкаГруппаПродукт.Продукт.УникальныйИдентификатор());
			
			НоваяСтрокаПродукт = Дерево.Строки.Добавить();
			НоваяСтрокаПродукт.ИндексКартинки = ИндексКартинки_Группа;
			НоваяСтрокаПродукт.Продукт = ВыборкаГруппаПродукт.Продукт;
			НоваяСтрокаПродукт.ЭтоГруппа = Истина;
			НоваяСтрокаПродукт.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторГруппы);
			
			ВыборкаГруппаСистема = ВыборкаГруппаПродукт.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаГруппаСистема.Следующий() Цикл
				ИдентификаторСистемы = Строка(ВыборкаГруппаСистема.Система.УникальныйИдентификатор());
				ИдентификаторСтроки = ИдентификаторГруппы + ";" + ИдентификаторСистемы;
				
				НоваяСтрокаСистема = НоваяСтрокаПродукт.Строки.Добавить();
				НоваяСтрокаСистема.ИндексКартинки = ИндексКартинки_Группа;
				НоваяСтрокаСистема.Продукт = ВыборкаГруппаПродукт.Продукт;
				НоваяСтрокаСистема.Система = ВыборкаГруппаСистема.Система;
				НоваяСтрокаСистема.ЭтоГруппа = Истина;
				НоваяСтрокаСистема.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторСтроки);
				
				ВыборкаЗаявка = ВыборкаГруппаСистема.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				КоличествоЗаявокСистема = ВыборкаЗаявка.Количество();
				
				Пока ВыборкаЗаявка.Следующий() Цикл	
					ИдентификаторЭлемента = Строка(ВыборкаЗаявка.Заявка.УникальныйИдентификатор());
					ИдентификаторСтроки = ИдентификаторГруппы + ";" + ИдентификаторСистемы + ";" + ИдентификаторЭлемента;
					
					UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторСтроки);
					НоваяСтрока = НоваяСтрокаСистема.Строки.Добавить();
					ЗаполнитьСтрокуЗаявки_ОчередьЗаявок(НоваяСтрока, ВыборкаЗаявка, UID, КартинкиСвязей);  
					
					Если НЕ ЗначениеЗаполнено(ВыборкаЗаявка.Заявка) Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				НоваяСтрокаСистема.Наименование = СтрШаблон("%1   |   Заявок: %2", 
				ВыборкаГруппаСистема.ПредставлениеСистемы, КоличествоЗаявокСистема);
				КоличествоЗаявокПродукт = КоличествоЗаявокПродукт + КоличествоЗаявокСистема;
			КонецЦикла;
			
			НоваяСтрокаПродукт.Наименование = СтрШаблон("%1   |   Заявок: %2", 
			Строка(ВыборкаГруппаПродукт.Продукт), КоличествоЗаявокПродукт);
		КонецЦикла;
		
	ИначеЕсли ВидОчереди = Перечисления.ВидыОчереди.Филиал Тогда
		ВыборкаГруппаФилиал = ОбщаяВыборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаГруппаФилиал.Следующий() Цикл
			ИдентификаторГруппы = Строка(ВыборкаГруппаФилиал.Филиал.УникальныйИдентификатор());
			
			НоваяСтрокаПродукт = Дерево.Строки.Добавить();	
			НоваяСтрокаПродукт.ИндексКартинки = ИндексКартинки_Группа;
			НоваяСтрокаПродукт.Филиал = ВыборкаГруппаФилиал.Филиал;
			НоваяСтрокаПродукт.ЭтоГруппа = Истина;
			НоваяСтрокаПродукт.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторГруппы);
			
			ВыборкаЗаявка = ВыборкаГруппаФилиал.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаЗаявка.Следующий() Цикл	
				ИдентификаторЭлемента = Строка(ВыборкаЗаявка.Заявка.УникальныйИдентификатор());
				UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторГруппы + ИдентификаторЭлемента);
				НоваяСтрока = НоваяСтрокаПродукт.Строки.Добавить();
				ЗаполнитьСтрокуЗаявки_ОчередьЗаявок(НоваяСтрока, ВыборкаЗаявка, UID, КартинкиСвязей);
				
				Если НЕ ЗначениеЗаполнено(ВыборкаЗаявка.Заявка) Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			НоваяСтрокаПродукт.Наименование = СтрШаблон("%1   |   Заявок: %2", 
			Строка(ВыборкаГруппаФилиал.Филиал), ВыборкаЗаявка.Количество());
		КонецЦикла;
		
	ИначеЕсли ВидОчереди = Перечисления.ВидыОчереди.ГабаритноеПланирование Тогда
		ВыборкаГруппаФилиал = ОбщаяВыборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаГруппаФилиал.Следующий() Цикл
			КоличествоЗаявокФилиал = 0;
			СквознойПорядок = 0;
			ИдентификаторГруппыФилиал = Строка(ВыборкаГруппаФилиал.Филиал.УникальныйИдентификатор());
			
			НоваяСтрокаПродукт = Дерево.Строки.Добавить();
			НоваяСтрокаПродукт.ИндексКартинки = ИндексКартинки_Группа;
			НоваяСтрокаПродукт.Филиал = ВыборкаГруппаФилиал.Филиал;
			НоваяСтрокаПродукт.ЭтоГруппа = Истина;
			НоваяСтрокаПродукт.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторГруппыФилиал);
			
			ВыборкаГруппировки = ВыборкаГруппаФилиал.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаГруппировки.Следующий() Цикл 
				ИдентификаторГруппы = ВыборкаГруппировки.ГруппировкаГабаритногоПланирования;
				
				СтрокаГруппы = НоваяСтрокаПродукт.Строки.Добавить();
				СтрокаГруппы.ИндексКартинки = ИндексКартинки_Группа;
				СтрокаГруппы.ЭтоГруппа = Истина;
				СтрокаГруппы.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(
				ИдентификаторГруппыФилиал + ";" + ИдентификаторГруппы); 
				
				ВыборкаЗаявка = ВыборкаГруппировки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаЗаявка.Следующий() Цикл	
					ИдентификаторЭлемента = Строка(ВыборкаЗаявка.Заявка.УникальныйИдентификатор());
					ИдентификаторСтроки = ИдентификаторГруппыФилиал + ";" + ИдентификаторГруппы + ";" + ИдентификаторЭлемента;
					
					UID = ОбщегоНазначенияВызовСервера.ХэшСумма(ИдентификаторСтроки);
					
					НоваяСтрока = СтрокаГруппы.Строки.Добавить();
					СквознойПорядок = СквознойПорядок + 1;
					ЗаполнитьСтрокуЗаявки_ОчередьЗаявок(НоваяСтрока, ВыборкаЗаявка, UID, КартинкиСвязей, СквознойПорядок);
					
					Если НЕ ЗначениеЗаполнено(ВыборкаЗаявка.Заявка) Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				СтрокаГруппы.Наименование = СтрШаблон("%1   |   Заявок: %2", 
				Строка(ВыборкаГруппировки.ГруппировкаГабаритногоПланирования), ВыборкаЗаявка.Количество());
				
				КоличествоЗаявокФилиал = КоличествоЗаявокФилиал + ВыборкаЗаявка.Количество();
			КонецЦикла;
			
			НоваяСтрокаПродукт.Наименование = СтрШаблон("%1   |   Заявок: %2",
			Строка(ВыборкаГруппаФилиал.Филиал), КоличествоЗаявокФилиал);
		КонецЦикла;
	КонецЕсли;
	
	ДанныеДерева = ИнструментыСервер.ПодготовитьДанныеИнструментаДляКлиента(Дерево, КолонкиИнструмента);
	
	Возврат ДанныеДерева;

КонецФункции

Процедура ЗаполнитьСтрокуЗаявки_ОчередьЗаявок(НоваяСтрока, Выборка, UID, КартинкиСвязей, СквознойПорядок = Неопределено)
	
	ЭтоПустаяЗаявка = НЕ ЗначениеЗаполнено(Выборка.Заявка);
		
	Если НЕ ЭтоПустаяЗаявка Тогда
		Если ЗначениеЗаполнено(Выборка.КороткоеНазваниеПроекта) Тогда
			Информация = СтрШаблон("Автор: %1. Проект: %2", Выборка.АвторПредставление, Выборка.КороткоеНазваниеПроекта);
		Иначе
			Информация = СтрШаблон("Автор: %1", Выборка.АвторПредставление);
		КонецЕсли;
		
		НаименованиеЗаявки = СтрШаблон("[%1] %2 (%3)", Выборка.Номер, Выборка.Наименование, Информация);
	Иначе
		НаименованиеЗаявки = "Очередь пустая. Двойной клик для создания заявки.";
	КонецЕсли;	
	
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	
	НоваяСтрока.Наименование = НаименованиеЗаявки;
	НоваяСтрока.UID = UID;
	НоваяСтрока.Назначение = БиблиотекаКартинок[Выборка.НазначениеИмяКартинки];	
	
	Если СквознойПорядок = Неопределено Тогда
		НоваяСтрока.ПредставлениеПорядка = Выборка.Порядок;
	Иначе
		НоваяСтрока.ПредставлениеПорядка = СквознойПорядок;
	КонецЕсли;
	
	НоваяСтрока.Связь = КартинкиСвязей.Получить(Выборка.Связь); 
	НоваяСтрока.ОбъектКомментарий = ?(Выборка.Комментарии = 0, "", Выборка.Комментарии);
	
	Если Выборка.ДатаНачалаСпринт > ТекущаяДатаСеанса() Тогда 
		НоваяСтрока.Спринт = БиблиотекаКартинок["СпринтБудущий"];
	ИначеЕсли ЗначениеЗаполнено(Выборка.ДатаНачалаСпринт) Тогда
		НоваяСтрока.Спринт = БиблиотекаКартинок["СпринтПланирование"];
	КонецЕсли;	
	
	ВыборкаДополнительныеДанные = Выборка.Выбрать();
	
	ГруппыЗаказчиков = Новый Массив;
	Назначенные = Новый Массив;
	
	Пока ВыборкаДополнительныеДанные.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаДополнительныеДанные.Назначена) 
			И Назначенные.Найти(ВыборкаДополнительныеДанные.Назначена) = Неопределено Тогда
			Назначенные.Добавить(ВыборкаДополнительныеДанные.Назначена);
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыборкаДополнительныеДанные.ГруппаЗаказчиковПредставлениеВсе) 
			И ГруппыЗаказчиков.Найти(ВыборкаДополнительныеДанные.ГруппаЗаказчиковПредставлениеВсе) = Неопределено Тогда
			ГруппыЗаказчиков.Добавить(ВыборкаДополнительныеДанные.ГруппаЗаказчиковПредставлениеВсе);
		КонецЕсли;
	КонецЦикла;
	
	Если Назначенные.Количество() > 0 Тогда
		НоваяСтрока.Назначена = СтрСоединить(Назначенные, " / ");
	КонецЕсли;
	
	Если ГруппыЗаказчиков.Количество() > 0 Тогда
		НоваяСтрока.ПредставлениеГруппЗаказчиков = СтрСоединить(ГруппыЗаказчиков, "; ");
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти
