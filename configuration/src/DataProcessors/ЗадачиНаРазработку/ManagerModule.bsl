
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

Процедура ПолучитьДанныеЗадачиНаРазработку(Настройки, СписокСпринтов, АдресРезультата, УИДЗамера) Экспорт
	
	ВремяНачала = ОценкаПроизводительности.НачатьЗамерВремени();
	
	ДанныеДерева = СформироватьСписокЗадачиНаРазработку(Настройки, СписокСпринтов);
	ИнструментыСервер.ОповеститьИнструментОбОбновлении(ДанныеДерева, АдресРезультата, УИДЗамера);
	
	ОценкаПроизводительности.ЗакончитьЗамерВремениТехнологический("Обработки.ЗадачиНаРазработку.ПолучитьДанныеЗадачиНаРазработку.ВыполнениеФонового", ВремяНачала, , Строка(УИДЗамера));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьСписокЗадачиНаРазработку(Настройки, СписокСпринтов)
	
	Результат = Новый Структура("Дерево, СписокСпринтов", Неопределено, Новый Массив);
	
	КолонкиИнструмента = Новый Массив;
	КолонкиИнструмента.Добавить("Порядок");
	КолонкиИнструмента.Добавить("ПлановыеТрудозатраты");
	КолонкиИнструмента.Добавить("ДнейВОчереди");
	КолонкиИнструмента.Добавить("ЭтоГруппа");
	КолонкиИнструмента.Добавить("ИндексКартинки");
	КолонкиИнструмента.Добавить("ГруппаЗаказчиков");
	КолонкиИнструмента.Добавить("СистемаУчета");
	КолонкиИнструмента.Добавить("СложностьЗадачи");
	КолонкиИнструмента.Добавить("Назначение");
	КолонкиИнструмента.Добавить("ПредставлениеЗадача");
	КолонкиИнструмента.Добавить("Заблокирована");
	КолонкиИнструмента.Добавить("Спринт");
	КолонкиИнструмента.Добавить("Продукт");
	КолонкиИнструмента.Добавить("ЦелеваяЗаявка");
	КолонкиИнструмента.Добавить("Задача");
	КолонкиИнструмента.Добавить("UID");
	
	Дерево = Новый ДеревоЗначений;
	Для Каждого Колонка Из КолонкиИнструмента Цикл
		Дерево.Колонки.Добавить(Колонка);
	КонецЦикла;
	
	// Утсановим значение "Все" при первом запуске
	Если НЕ ЗначениеЗаполнено(СписокСпринтов) Тогда 
		СписокСпринтов = "Все";
	КонецЕсли;

	ИндексКартинки_Группа = Справочники.СтатусыОбъектов.ИндексКартинкиГруппа();
	
	// Порядок статуса -необходимый парамаетр для запроса, нужен для отбора статусов блокирующих задач не меньше чем "Тестирование"
	ПорядокСтатуса = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Справочники.СтатусыОбъектов.Тестирование, "Порядок");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	#Область ТекстЗапроса
	"ВЫБРАТЬ
	|	Пользователи.Филиал КАК Филиал,
	|	Пользователи.Должность КАК Должность
	|ПОМЕСТИТЬ ФилиалДолжность
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.Ссылка = &Пользователь
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДиапазоныСложностиЗадачДляДолжностей.МинимальнаяСложность КАК МинимальнаяСложность,
	|	ДиапазоныСложностиЗадачДляДолжностей.МаксимальнаяСложность КАК МаксимальнаяСложность
	|ПОМЕСТИТЬ ДиапазонСложности
	|ИЗ
	|	ФилиалДолжность КАК ФилиалДолжность
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДиапазоныСложностиЗадачДляДолжностей КАК ДиапазоныСложностиЗадачДляДолжностей
	|		ПО ФилиалДолжность.Филиал = ДиапазоныСложностиЗадачДляДолжностей.Филиал
	|			И ФилиалДолжность.Должность = ДиапазоныСложностиЗадачДляДолжностей.Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Филиалы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОтобранныеФилиалы
	|ИЗ
	|	Справочник.Филиалы КАК Филиалы
	|ГДЕ
	|	Филиалы.Ссылка = &Филиал
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СвязанныеОбъекты.ПриемникСвязи
	|ИЗ
	|	РегистрСведений.СвязанныеОбъекты КАК СвязанныеОбъекты
	|ГДЕ
	|	СвязанныеОбъекты.ИсточникСвязи = &Филиал
	|	И СвязанныеОбъекты.ВидСвязи = ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.СвязанаС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Задача.Ссылка КАК Задача,
	|	ЕСТЬNULL(СложностиЗадач.Сложность, 0) КАК Сложность,
	|	Задача.ОбъектОснование КАК ОбъектОснование,
	|	Задача.СистемаУчета КАК СистемаУчета,
	|	Задача.ДатаГотовностиРеализации КАК ДатаГотовностиРеализации,
	|	Задача.Направление КАК Направление,
	|	Задача.Статус КАК Статус,
	|	""["" + Задача.Номер + ""] "" + Задача.Наименование КАК ПредставлениеЗадача,
	|	НазначенияЗадач.ИмяКартинки КАК ИмяНазначения
	|ПОМЕСТИТЬ ЗадачиВРеализацию
	|ИЗ
	|	Документ.Задача КАК Задача
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтобранныеФилиалы КАК ОтобранныеФилиалы
	|		ПО Задача.Филиал = ОтобранныеФилиалы.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НазначенияЗадач КАК НазначенияЗадач
	|		ПО Задача.Назначение = НазначенияЗадач.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СложностиЗадач КАК СложностиЗадач
	|		ПО (СложностиЗадач.Объект = Задача.Ссылка)
	|ГДЕ
	|	Задача.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ВРеализацию)
	|	И Задача.Назначена = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗадачиВРеализацию.Задача КАК Задача,
	|	ЗадачиВРеализацию.ОбъектОснование КАК ОбъектОснование,
	|	ЗадачиВРеализацию.СистемаУчета КАК СистемаУчета,
	|	ЗадачиВРеализацию.ДатаГотовностиРеализации КАК ДатаГотовностиРеализации,
	|	ЗадачиВРеализацию.Направление КАК Направление,
	|	ЗадачиВРеализацию.Статус КАК Статус,
	|	ЗадачиВРеализацию.Сложность КАК Сложность,
	|	ЗадачиВРеализацию.ИмяНазначения КАК ИмяНазначения,
	|	ЗадачиВРеализацию.ПредставлениеЗадача КАК ПредставлениеЗадача,
	|	ЕСТЬNULL(СоставСпринтов.Спринт, ЗНАЧЕНИЕ(Документ.Спринт.ПустаяСсылка)) КАК Спринт
	|ПОМЕСТИТЬ ОтобранныеЗадачи
	|ИЗ
	|	ЗадачиВРеализацию КАК ЗадачиВРеализацию
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДиапазонСложности КАК ДиапазонСложности
	|		ПО (ЗадачиВРеализацию.Сложность МЕЖДУ ДиапазонСложности.МинимальнаяСложность И ДиапазонСложности.МаксимальнаяСложность)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставСпринтов КАК СоставСпринтов
	|		ПО ЗадачиВРеализацию.Задача = СоставСпринтов.Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗадачиВРеализацию.Задача,
	|	ЗадачиВРеализацию.ОбъектОснование,
	|	ЗадачиВРеализацию.СистемаУчета,
	|	ЗадачиВРеализацию.ДатаГотовностиРеализации,
	|	ЗадачиВРеализацию.Направление,
	|	ЗадачиВРеализацию.Статус,
	|	ЗадачиВРеализацию.Сложность,
	|	ЗадачиВРеализацию.ИмяНазначения,
	|	ЗадачиВРеализацию.ПредставлениеЗадача,
	|	ЕСТЬNULL(СоставСпринтов.Спринт, ЗНАЧЕНИЕ(Документ.Спринт.ПустаяСсылка))
	|ИЗ
	|	ЗадачиВРеализацию КАК ЗадачиВРеализацию
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставСпринтов КАК СоставСпринтов
	|		ПО ЗадачиВРеализацию.Задача = СоставСпринтов.Объект
	|ГДЕ
	|	ЗадачиВРеализацию.Сложность ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтобранныеЗадачи.Задача КАК Задача,
	|	ВЫБОР
	|		КОГДА НЕ ОчередьЗаявокПродуктСистема.Порядок ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(ОчередьЗаявокПродуктСистема.Порядок, 0)
	|		КОГДА НЕ ОчередьЗаявокПродукт.Порядок ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(ОчередьЗаявокПродукт.Порядок, 0)
	|		КОГДА НЕ ОчередьЗаявокСистема.Порядок ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(ОчередьЗаявокСистема.Порядок, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Порядок,
	|	ЕСТЬNULL(ПланируемыеТрудозатраты.Трудозатраты, 0) КАК ПлановыеТрудозатраты,
	|	ВЫБОР
	|		КОГДА ОтобранныеЗадачи.ДатаГотовностиРеализации > ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА РАЗНОСТЬДАТ(ОтобранныеЗадачи.ДатаГотовностиРеализации, &ТекущаяДата, ДЕНЬ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДнейВОчереди,
	|	ОтобранныеЗадачи.Направление КАК Направление,
	|	СтатусыОбъектов.ИндексКартинки КАК ИндексКартинки,
	|	ОтобранныеЗадачи.ОбъектОснование КАК ОбъектОснование,
	|	ОтобранныеЗадачи.СистемаУчета КАК СистемаУчета,
	|	ОтобранныеЗадачи.Сложность КАК Сложность,
	|	ОтобранныеЗадачи.ИмяНазначения КАК ИмяНазначения,
	|	ОтобранныеЗадачи.ПредставлениеЗадача КАК ПредставлениеЗадача,
	|	ЗаявкаНаРазработкуСистемыРазработки.ГруппаЗаказчиков КАК ГруппаЗаказчиков,
	|	ДокументЗаявкаНаРазработку.Продукт КАК Продукт,
	|	ОтобранныеЗадачи.Спринт КАК Спринт,
	|	ЕСТЬNULL(ЗначенияДополнительныхРеквизитовОбъектов.Значение, Ложь) КАК ЦелеваяЗаявка
	|ПОМЕСТИТЬ ЗадачиДляОтбора
	|ИЗ
	|	ОтобранныеЗадачи КАК ОтобранныеЗадачи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО ОтобранныеЗадачи.Статус = СтатусыОбъектов.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку КАК ДокументЗаявкаНаРазработку
	|		ПО ОтобранныеЗадачи.ОбъектОснование = ДокументЗаявкаНаРазработку.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРазработку.СистемыРазработки КАК ЗаявкаНаРазработкуСистемыРазработки
	|		ПО (ДокументЗаявкаНаРазработку.Ссылка = ЗаявкаНаРазработкуСистемыРазработки.Ссылка)
	|			И ОтобранныеЗадачи.СистемаУчета = ЗаявкаНаРазработкуСистемыРазработки.Система
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПланируемыеТрудозатраты КАК ПланируемыеТрудозатраты
	|		ПО ОтобранныеЗадачи.Задача = ПланируемыеТрудозатраты.Объект
	|			И (ПланируемыеТрудозатраты.ТипТрудозатрат = ЗНАЧЕНИЕ(Перечисление.ТипыТрудозатрат.Разработка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОчередиЗаявок КАК ОчередьЗаявокСистема
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючОчереди КАК КлючОчереди
	|			ПО (КлючОчереди.Ссылка = ОчередьЗаявокСистема.КлючОчередиОбъекта)
	|				И (КлючОчереди.ВидОчереди = ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.НаправлениеСистемаГруппаЗаказчиков))
	|		ПО (ДокументЗаявкаНаРазработку.Ссылка = ОчередьЗаявокСистема.Заявка)
	|			И (КлючОчереди.Система = ОтобранныеЗадачи.СистемаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОчередиЗаявок КАК ОчередьЗаявокПродукт
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючОчереди КАК КлючОчередиПродукт
	|			ПО (КлючОчередиПродукт.Ссылка = ОчередьЗаявокПродукт.КлючОчередиОбъекта)
	|				И (КлючОчередиПродукт.ВидОчереди = ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.Продукт))
	|		ПО (ДокументЗаявкаНаРазработку.Ссылка = ОчередьЗаявокПродукт.Заявка)
	|			И (ДокументЗаявкаНаРазработку.Продукт = КлючОчередиПродукт.Продукт)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОчередиЗаявок КАК ОчередьЗаявокПродуктСистема
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючОчереди КАК КлючОчередиПродуктСистема
	|			ПО (КлючОчередиПродуктСистема.Ссылка = ОчередьЗаявокПродуктСистема.КлючОчередиОбъекта)
	|				И (КлючОчередиПродуктСистема.ВидОчереди = ЗНАЧЕНИЕ(Перечисление.ВидыОчереди.ПродуктСистема))
	|		ПО (ДокументЗаявкаНаРазработку.Ссылка = ОчередьЗаявокПродуктСистема.Заявка)
	|			И (КлючОчередиПродуктСистема.Система = ОтобранныеЗадачи.СистемаУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Спринт КАК ДокументСпринт
	|		ПО (ДокументСпринт.Ссылка = ОтобранныеЗадачи.Спринт)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияДополнительныхРеквизитовОбъектов КАК ЗначенияДополнительныхРеквизитовОбъектов
	|		ПО (ОтобранныеЗадачи.ОбъектОснование = ЗначенияДополнительныхРеквизитовОбъектов.Объект)
	|			И (ЗначенияДополнительныхРеквизитовОбъектов.Реквизит = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыДополнительныхРеквизитов.ЦелеваяЗаявка))
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ДокументСпринт.Ссылка ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ КОНЕЦПЕРИОДА(ДокументСпринт.ДатаОкончания, ДЕНЬ) > &ТекущаяДата
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗадачиДляОтбора.Задача КАК Задача,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗадачаСвязанногоОбъекта.Ссылка ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			КОГДА СтатусыОбъектов.Порядок >= &ПорядокСтатуса
	|				ТОГДА ЗадачаСвязанногоОбъекта.ТребуетсяПубликация
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК Заблокирована
	|ПОМЕСТИТЬ ЗадачиДляТаблицы
	|ИЗ
	|	ЗадачиДляОтбора КАК ЗадачиДляОтбора
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязанныеОбъекты КАК СвязанныеОбъекты
	|		ПО ЗадачиДляОтбора.Задача = СвязанныеОбъекты.ПриемникСвязи
	|			И (СвязанныеОбъекты.ВидСвязи = ЗНАЧЕНИЕ(Перечисление.ВидыСвязейОбъектов.Блокирует))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Задача КАК ЗадачаСвязанногоОбъекта
	|		ПО (СвязанныеОбъекты.ИсточникСвязи = ЗадачаСвязанногоОбъекта.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатусыОбъектов КАК СтатусыОбъектов
	|		ПО (ЗадачаСвязанногоОбъекта.Статус = СтатусыОбъектов.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗадачиДляОтбора.Задача
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗадачиДляОтбора.Задача КАК Задача,
	|	ЗадачиДляОтбора.Продукт КАК Продукт,
	|	ЗадачиДляОтбора.Порядок КАК Порядок,
	|	ЗадачиДляОтбора.ПлановыеТрудозатраты КАК ПлановыеТрудозатраты,
	|	ЗадачиДляОтбора.ДнейВОчереди КАК ДнейВОчереди,
	|	ЗадачиДляОтбора.Направление КАК Направление,
	|	ЗадачиДляОтбора.ИндексКартинки КАК ИндексКартинки,
	|	ЗадачиДляОтбора.ОбъектОснование КАК ОбъектОснование,
	|	ЗадачиДляОтбора.СистемаУчета КАК СистемаУчета,
	|	ЗадачиДляОтбора.Сложность КАК Сложность,
	|	ЗадачиДляОтбора.ИмяНазначения КАК ИмяНазначения,
	|	ЗадачиДляОтбора.ПредставлениеЗадача КАК ПредставлениеЗадача,
	|	ЗадачиДляОтбора.ГруппаЗаказчиков КАК ГруппаЗаказчиков,
	|	ЗадачиДляТаблицы.Заблокирована КАК Заблокирована,
	|	ЗадачиДляОтбора.Спринт КАК Спринт,
	|	ЗадачиДляОтбора.ЦелеваяЗаявка КАК ЦелеваяЗаявка
	|ИЗ
	|	ЗадачиДляОтбора КАК ЗадачиДляОтбора
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗадачиДляТаблицы КАК ЗадачиДляТаблицы
	|		ПО ЗадачиДляОтбора.Задача = ЗадачиДляТаблицы.Задача
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Продукты КАК Продукты
	|		ПО ЗадачиДляОтбора.Продукт = Продукты.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ОтображатьЗаблокированныеЗадачи = ИСТИНА
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ НЕ ЗадачиДляТаблицы.Заблокирована
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА НЕ &ОтборПродуктГруппаЗаказчиков
	|				ТОГДА ИСТИНА
	|			КОГДА НЕ Продукты.Ссылка ЕСТЬ NULL
	|				ТОГДА Продукты.Ссылка В (&СписокПродуктГруппаЗаказчиков)
	|			ИНАЧЕ ЗадачиДляОтбора.ГруппаЗаказчиков В (&СписокПродуктГруппаЗаказчиков)
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗадачиДляОтбора.Спринт КАК Спринт
	|ИЗ
	|	ЗадачиДляОтбора КАК ЗадачиДляОтбора
	|ГДЕ
	|	ЗадачиДляОтбора.Спринт <> ЗНАЧЕНИЕ(Документ.Спринт.ПустаяСсылка)";
	#КонецОбласти
	
	СписокПродуктГруппаЗаказчиков = Новый СписокЗначений;
	
	Если Настройки.ВыбранныеГруппыЗаказчиков.Количество() > 0 Тогда	
		Для Каждого Элемент Из Настройки.ВыбранныеГруппыЗаказчиков Цикл
			СписокПродуктГруппаЗаказчиков.Добавить(Элемент.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Если Настройки.ВыбранныеПродукты.Количество() > 0 Тогда	
		Для Каждого Элемент Из Настройки.ВыбранныеПродукты Цикл
			СписокПродуктГруппаЗаказчиков.Добавить(Элемент.Значение);
		КонецЦикла;
	КонецЕсли;   
		
	Запрос.УстановитьПараметр("ОтборПродуктГруппаЗаказчиков", СписокПродуктГруппаЗаказчиков.Количество() > 0);
	Запрос.УстановитьПараметр("СписокПродуктГруппаЗаказчиков", СписокПродуктГруппаЗаказчиков);
	Запрос.УстановитьПараметр("Филиал", ПараметрыСеанса.Филиал);
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("ПорядокСтатуса", ПорядокСтатуса);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ОтображатьЗаблокированныеЗадачи", 
		Настройки.ОтображатьЗаблокированныеЗадачи);	
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ПакетТаблицы = РезультатЗапроса[7];
	ПакетСпринтов = РезультатЗапроса[8];
	
#Область ОтборыПостроителя

	Построитель = Новый ПостроительЗапроса;
	
	Если Настройки.ГруппировкаЗадач = 1 Тогда 	
		ИсточникДанных = Новый ОписаниеИсточникаДанных(ПакетТаблицы);
		ИсточникДанных.Колонки.Направление.Измерение = Истина;
		Построитель.ИсточникДанных = ИсточникДанных;
	Иначе 
		Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ПакетТаблицы);
	КонецЕсли;
	
	Если СписокСпринтов <> "Все" Тогда 
		Если СписокСпринтов = "Без спринта" Тогда
			ОтборТаблицы = Документы.Спринт.ПустаяСсылка();
		Иначе
			ОтборТаблицы = СписокСпринтов;
		КонецЕсли;
		ОбщегоНазначения.ДобавитьЭлементОтбораПостроителяЗапросов(Построитель, "Спринт", ВидСравнения.Равно, ОтборТаблицы);
	КонецЕсли;
	
	Если Настройки.ГруппировкаЗадач = 1 Тогда 		
		Построитель.Измерения.Очистить();
		Построитель.Измерения.Добавить("Направление");
		Построитель.Выполнить();
		ВыборкаВерхняя = Построитель.Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Иначе
		Построитель.Выполнить();
		ВыборкаВерхняя = Построитель.Результат.Выбрать();
	КонецЕсли;
	
#КонецОбласти

	ПредставлениеПорядка = 0;
	Пока ВыборкаВерхняя.Следующий() Цикл	
		Если Настройки.ГруппировкаЗадач = 1 Тогда
			СтрокаДереваВерхняя =  Дерево.Строки.Добавить();
			СтрокаДереваВерхняя.ПредставлениеЗадача = ВыборкаВерхняя.Направление;
			СтрокаДереваВерхняя.ИндексКартинки = ИндексКартинки_Группа;
			СтрокаДереваВерхняя.ЭтоГруппа = Истина;
			
			UID = ОбщегоНазначенияВызовСервера.ХэшСумма(Строка(ВыборкаВерхняя.Направление), Истина);
			СтрокаДереваВерхняя.UID = UID;

			ВыборкаНижняя = ВыборкаВерхняя.Выбрать();
			Пока ВыборкаНижняя.Следующий() Цикл
				ПредставлениеПорядка = ПредставлениеПорядка + 1;
				ЭлементыСтрокиВерхней = СтрокаДереваВерхняя.Строки;
				ЗаполнитьСтроку(ЭлементыСтрокиВерхней, ВыборкаНижняя, ПредставлениеПорядка);
			КонецЦикла; 
		Иначе
			ПредставлениеПорядка = ПредставлениеПорядка + 1;
			ЗаполнитьСтроку(Дерево.Строки, ВыборкаВерхняя, ПредставлениеПорядка);
		КонецЕсли;
	КонецЦикла;
	
	Результат.СписокСпринтов = ПакетСпринтов.Выгрузить().ВыгрузитьКолонку("Спринт");
	
	Результат.Дерево = ИнструментыСервер.ПодготовитьДанныеИнструментаДляКлиента(Дерево, КолонкиИнструмента);
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьСтроку(ЭлементыДерева, Знач Выборка, Знач ПредставлениеПорядка)
	
	СтрокаДерева = ЭлементыДерева.Добавить();
	СтрокаДерева.Задача = Выборка.Задача;
	СтрокаДерева.ПредставлениеЗадача = Выборка.ПредставлениеЗадача;
	СтрокаДерева.СистемаУчета = Выборка.СистемаУчета;
	СтрокаДерева.СложностьЗадачи = Выборка.Сложность;
	СтрокаДерева.ГруппаЗаказчиков = Выборка.ГруппаЗаказчиков;
	СтрокаДерева.ДнейВОчереди = ЗаполнитьДниВОчереди(СтрокаДерева, Выборка);
	СтрокаДерева.ИндексКартинки = Выборка.ИндексКартинки; 
	СтрокаДерева.Назначение = БиблиотекаКартинок[Выборка.ИмяНазначения];
	СтрокаДерева.Заблокирована = Выборка.Заблокирована;
	СтрокаДерева.Спринт = Выборка.Спринт;
	СтрокаДерева.Порядок = ПредставлениеПорядка;
	СтрокаДерева.Продукт = Выборка.Продукт;
	СтрокаДерева.UID = ОбщегоНазначенияВызовСервера.ХэшСумма(Выборка.ПредставлениеЗадача, Истина);
	
КонецПроцедуры

Функция ЗаполнитьДниВОчереди(Строка, Выборка)
	
	ЗаполнитьЗначенияСвойств(Строка, Выборка, , "ДнейВОчереди, ГруппаЗаказчиков, ПредставлениеЗадача");
	
	Если Выборка.ДнейВОчереди > 0 Тогда
		Строка.ДнейВОчереди = СтрокаСЧислом("; %1 день; ; %1 дня; %1 дней; %1 дня",
		Выборка.ДнейВОчереди, ВидЧисловогоЗначения.Количественное);
	КонецЕсли;
	
	ОчередностьДней = Выборка.ДнейВОчереди;
	
	Возврат ОчередностьДней;
	
КонецФункции

#КонецОбласти

#КонецЕсли