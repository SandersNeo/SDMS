///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>  
//
// Для модулей форм в заголовке рекомендуется размещать описание параметров формы.
////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

// Только для модулей, которые могут содержать раздел описания переменных.
// Все переменные модуля должны быть снабжены комментарием, достаточным для 
// понимания их назначения. Комментарий рекомендуется размещать в той же 
// строке, где объявляется переменная.

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Периодичность = 2;
	
	ТекущаяДата = ТекущаяДатаСеанса();
	Период.ДатаНачала    = НачалоМесяца(ТекущаяДата);
	Период.ДатаОкончания = КонецМесяца(ТекущаяДата);
	
	ОбновитьБлоки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПериодичностьПриИзменении(Элемент)
	
	ОбновитьБлоки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ОбновитьБлоки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_

// В разделах «Обработчики событий элементов таблицы формы <имя таблицы формы>»
// размещаются процедуры-обработчики таблиц формы и элементов таблиц. Для 
// процедур-обработчиков каждой таблицы должен быть создан свой раздел.
//
// Перед служебными процедурами и функциями в модуле формы располагаются 
// обработчики событий формы, а также обработчики событий команд и элементов
// формы. Рекомендуется обработчики одного элемента формы располагать вместе, 
// придерживаясь, при этом, порядка их следования в панели свойств редактора 
// формы в конфигураторе.

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьБлоки();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьБлоки()
	
	ОбновитьБлок_ДинамикаСозданияЗадач();
	ОбновитьБлок_ДинамикаСозданияЗаявок();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьБлок_ДинамикаСозданияЗадач()
	
	ДинамикаСозданияЗадач_Заголовок = Новый ФорматированнаяСтрока("Динамика создания задач");
	
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Периодичность = 0
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗадача.Дата, ЧАС)
	|		КОГДА &Периодичность = 1
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗадача.Дата, ДЕНЬ)
	|		КОГДА &Периодичность = 2
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗадача.Дата, НЕДЕЛЯ)
	|		КОГДА &Периодичность = 3
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗадача.Дата, МЕСЯЦ)
	|		КОГДА &Периодичность = 4
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗадача.Дата, КВАРТАЛ)
	|		КОГДА &Периодичность = 5
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗадача.Дата, ПОЛУГОДИЕ)
	|		КОГДА &Периодичность = 6
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗадача.Дата, ГОД)
	|	КОНЕЦ КАК Период,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДокументЗадача.Ссылка) КАК Количество
	|ИЗ
	|	Документ.Задача КАК ДокументЗадача
	|{ГДЕ
	|	ДокументЗадача.Дата}
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА &Периодичность = 0
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗадача.Дата, ЧАС)
	|		КОГДА &Периодичность = 1
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗадача.Дата, ДЕНЬ)
	|		КОГДА &Периодичность = 2
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗадача.Дата, НЕДЕЛЯ)
	|		КОГДА &Периодичность = 3
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗадача.Дата, МЕСЯЦ)
	|		КОГДА &Периодичность = 4
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗадача.Дата, КВАРТАЛ)
	|		КОГДА &Периодичность = 5
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗадача.Дата, ПОЛУГОДИЕ)
	|		КОГДА &Периодичность = 6
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗадача.Дата, ГОД)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Период";
	
	ПостроительЗапроса.Параметры.Вставить("Периодичность", Периодичность);
	
	Если ЗначениеЗаполнено(Период.ДатаНачала) ИЛИ ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
		ОтборПериод = ПостроительЗапроса.Отбор.Добавить("Дата");
		ОтборПериод.Использование = Истина;
		
		Если ЗначениеЗаполнено(Период.ДатаНачала) И ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
			ОтборПериод.ВидСравнения = ВидСравнения.ИнтервалВключаяГраницы;
			ОтборПериод.ЗначениеС    = Период.ДатаНачала;
			ОтборПериод.ЗначениеПо   = Период.ДатаОкончания;
		ИначеЕсли ЗначениеЗаполнено(Период.ДатаНачала) Тогда
			ОтборПериод.ВидСравнения = ВидСравнения.БольшеИлиРавно;
			ОтборПериод.ЗначениеС    = Период.ДатаНачала;
		ИначеЕсли ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
			ОтборПериод.ВидСравнения = ВидСравнения.МеньшеИлиРавно;
			ОтборПериод.ЗначениеПо   = Период.ДатаОкончания;
		КонецЕсли;
		
	КонецЕсли;
	
	ПостроительЗапроса.Выполнить();
	
	Диаграмма = ДинамикаСозданияЗадач_График;
	
	Диаграмма.Обновление = Ложь;
	Диаграмма.АвтоТранспонирование = Ложь;
	Диаграмма.Очистить();
	
	Точка = Диаграмма.УстановитьТочку("Количество");
	
	ВыборкаПериод = ПостроительЗапроса.Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ФорматнаяСтрока = ФорматнаяСтрокаДляПериодичности(Периодичность);
	
	Пока ВыборкаПериод.Следующий() Цикл
		Серия = Диаграмма.УстановитьСерию(ВыборкаПериод.Период);
		Серия.Текст       = Формат(ВыборкаПериод.Период, ФорматнаяСтрока);
		Серия.Расшифровка = ВыборкаПериод.Период;
		Диаграмма.УстановитьЗначение(Точка, Серия, ВыборкаПериод.Количество, Серия.Расшифровка);
	КонецЦикла;
	
	Диаграмма.АвтоТранспонирование = Истина;
	Диаграмма.Обновление           = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьБлок_ДинамикаСозданияЗаявок()
	
	ДинамикаСозданияЗаявок_Заголовок = Новый ФорматированнаяСтрока("Динамика создания заявок");
	
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Периодичность = 0
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗаявка.Дата, ЧАС)
	|		КОГДА &Периодичность = 1
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗаявка.Дата, ДЕНЬ)
	|		КОГДА &Периодичность = 2
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗаявка.Дата, НЕДЕЛЯ)
	|		КОГДА &Периодичность = 3
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗаявка.Дата, МЕСЯЦ)
	|		КОГДА &Периодичность = 4
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗаявка.Дата, КВАРТАЛ)
	|		КОГДА &Периодичность = 5
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗаявка.Дата, ПОЛУГОДИЕ)
	|		КОГДА &Периодичность = 6
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗаявка.Дата, ГОД)
	|	КОНЕЦ КАК Период,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДокументЗаявка.Ссылка) КАК Количество
	|ИЗ
	|	Документ.ЗаявкаНаРазработку КАК ДокументЗаявка
	|{ГДЕ
	|	ДокументЗаявка.Дата}
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА &Периодичность = 0
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗаявка.Дата, ЧАС)
	|		КОГДА &Периодичность = 1
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗаявка.Дата, ДЕНЬ)
	|		КОГДА &Периодичность = 2
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗаявка.Дата, НЕДЕЛЯ)
	|		КОГДА &Периодичность = 3
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗаявка.Дата, МЕСЯЦ)
	|		КОГДА &Периодичность = 4
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗаявка.Дата, КВАРТАЛ)
	|		КОГДА &Периодичность = 5
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗаявка.Дата, ПОЛУГОДИЕ)
	|		КОГДА &Периодичность = 6
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументЗаявка.Дата, ГОД)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Период";
	
	ПостроительЗапроса.Параметры.Вставить("Периодичность", Периодичность);
	
	Если ЗначениеЗаполнено(Период.ДатаНачала) ИЛИ ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
		ОтборПериод = ПостроительЗапроса.Отбор.Добавить("Дата");
		ОтборПериод.Использование = Истина;
		
		Если ЗначениеЗаполнено(Период.ДатаНачала) И ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
			ОтборПериод.ВидСравнения = ВидСравнения.ИнтервалВключаяГраницы;
			ОтборПериод.ЗначениеС    = Период.ДатаНачала;
			ОтборПериод.ЗначениеПо   = Период.ДатаОкончания;
		ИначеЕсли ЗначениеЗаполнено(Период.ДатаНачала) Тогда
			ОтборПериод.ВидСравнения = ВидСравнения.БольшеИлиРавно;
			ОтборПериод.ЗначениеС    = Период.ДатаНачала;
		ИначеЕсли ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
			ОтборПериод.ВидСравнения = ВидСравнения.МеньшеИлиРавно;
			ОтборПериод.ЗначениеПо   = Период.ДатаОкончания;
		КонецЕсли;
		
	КонецЕсли;	
	
	ПостроительЗапроса.Выполнить();
	
	Диаграмма = ДинамикаСозданияЗаявок_График;
	
	Диаграмма.Обновление = Ложь;
	Диаграмма.АвтоТранспонирование = Ложь;
	Диаграмма.Очистить();
	
	Точка = Диаграмма.УстановитьТочку("Количество");
	
	ВыборкаПериод = ПостроительЗапроса.Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ФорматнаяСтрока = ФорматнаяСтрокаДляПериодичности(Периодичность);
	
	Пока ВыборкаПериод.Следующий() Цикл
		Серия = Диаграмма.УстановитьСерию(ВыборкаПериод.Период);
		Серия.Текст       = Формат(ВыборкаПериод.Период, ФорматнаяСтрока);
		Серия.Расшифровка = ВыборкаПериод.Период;
		Диаграмма.УстановитьЗначение(Точка, Серия, ВыборкаПериод.Количество, Серия.Расшифровка);
	КонецЦикла;
	
	Диаграмма.АвтоТранспонирование = Истина;
	Диаграмма.Обновление           = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ФорматнаяСтрокаДляПериодичности(Знач Периодичность)
	
	Если Периодичность = 0 Тогда
		ФорматнаяСтрока = "ДФ='dd.MM.yyyy HH:mm'";
		
	ИначеЕсли Периодичность = 1 ИЛИ Периодичность = 2 Тогда
		ФорматнаяСтрока = "ДФ='dd.MM.yyyy'";
		
	ИначеЕсли Периодичность = 3 ИЛИ Периодичность = 4 ИЛИ Периодичность = 5 Тогда
		ФорматнаяСтрока = "ДФ='MM.yyyy'";
		
	ИначеЕсли Периодичность = 6 Тогда
		ФорматнаяСтрока = "ДФ='yyyy'";
		
	КонецЕсли;
	
	Возврат ФорматнаяСтрока;
	
КонецФункции

#КонецОбласти

#Область Инициализация

// Раздел инициализации содержит операторы, инициализирующие переменные модуля 
// или объект (форму).

#КонецОбласти
