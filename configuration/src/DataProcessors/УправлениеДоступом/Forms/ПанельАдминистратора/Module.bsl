///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Безопасность.НастроитьФорму(ЭтотОбъект, Отказ);
	
	Элементы.СтраницыПанелиАдминистратора.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
	ЗаполнитьДеревоМетаданных();
	
	Отбор = СписокБезопасностиМетаданных.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование = Истина;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект");
	Отбор.ПравоеЗначение = Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДеревоНастройкаБезопасностиМетаданныхПриАктивизацииСтроки(Элемент)
	
	Отбор = СписокБезопасностиМетаданных.Отбор.Элементы.Получить(0);
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.Использование = Истина;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект");
	Отбор.ПравоеЗначение = Элементы.ДеревоНастройкаБезопасностиМетаданных.ТекущиеДанные.Ссылка;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокБезопасностиМетаданныхПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элементы.ДеревоНастройкаБезопасностиМетаданных.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("РегистрСведений.СвязьОбъектовИРолей.ФормаЗаписи", Новый Структура("Объект", ТекущиеДанные.Ссылка));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ЗаполнитьИдентификаторы(Команда)
	
	ЭтоАдминистратор = УправлениеДоступомВызовСервера.ПроверитьДоступностьРоли("Администратор");
	
	Если ЭтоАдминистратор Тогда
		Результат = СинхронизироватьИдентификаторыМетаданных();
		Если Результат Тогда
			ТекстСообщения = "Синхронизация выполнена успешно.";
		Иначе
			ТекстСообщения = "Были ошибки. Подробности в журнале регистрации.";
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нет прав на синхронизацию идентификаторов метаданных");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьБезопасностьОбъектов(Команда)
	
	ОткрытьФорму("РегистрСведений.НастройкиПравОбъектов.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГруппыДоступа(Команда)
	
	ОткрытьФорму("Справочник.ГруппыДоступа.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПрограммныеРоли(Команда)
	
	ОткрытьФорму("Справочник.ПрограммныеРоли.ФормаСписка");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВывестиМетаданные(ДеревоЗначений, Знач ОбъектМетаданных, Знач НазваниеМетаданных, Знач ИмяКартинки)
	
	ЭтоФормыОбъектов = (ОбъектМетаданных <> Справочники.ИдентификаторыОбъектовМетаданных.ОбщаяФорма);
	
	СтрокаВерхнегоУровня = ДеревоЗначений.Строки.Добавить();
	СтрокаВерхнегоУровня.Картинка = БиблиотекаКартинок[ИмяКартинки];
	СтрокаВерхнегоУровня.ОбъектМетаданных = НазваниеМетаданных;
	СтрокаВерхнегоУровня.ЭтоГруппа = Истина;
	СтрокаВерхнегоУровня.Ссылка = ОбъектМетаданных;
	
	Для Каждого ОбъектМетаданных Из Метаданные[НазваниеМетаданных] Цикл
		СтрокаСреднегоУровня = СтрокаВерхнегоУровня.Строки.Добавить();
		СтрокаСреднегоУровня.Картинка = БиблиотекаКартинок[ИмяКартинки];
		СтрокаСреднегоУровня.ОбъектМетаданных = ОбъектМетаданных.Имя;
		СтрокаСреднегоУровня.ЭтоГруппа = ЭтоФормыОбъектов;
		
		Если ЭтоФормыОбъектов Тогда		
			Для Каждого ФормаОбъекта Из ОбъектМетаданных.Формы Цикл
				СтрокаНижнегоУровня = СтрокаСреднегоУровня.Строки.Добавить();
				СтрокаНижнегоУровня.Картинка = БиблиотекаКартинок.Форма;
				СтрокаНижнегоУровня.ОбъектМетаданных = ФормаОбъекта.Имя;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоМетаданных()
	
	ДеревоЗначений = РеквизитФормыВЗначение("ДеревоНастройкаБезопасностиМетаданных", Тип("ДеревоЗначений"));
	Идентификаторы = Справочники.ИдентификаторыОбъектовМетаданных;
	
	ВывестиМетаданные(ДеревоЗначений, Идентификаторы.ОбщаяФорма, "ОбщиеФормы", "Форма");	
	ВывестиМетаданные(ДеревоЗначений, Идентификаторы.Справочник, "Справочники", "Справочник");
	ВывестиМетаданные(ДеревоЗначений, Идентификаторы.Документ, "Документы", "Документ");
	ВывестиМетаданные(ДеревоЗначений, Идентификаторы.Отчет, "Отчеты", "Отчет");
	ВывестиМетаданные(ДеревоЗначений, Идентификаторы.Обработка, "Обработки", "Обработка");
	ВывестиМетаданные(ДеревоЗначений, Идентификаторы.ПланВидовХарактеристик, "ПланыВидовХарактеристик", "ПланВидовХарактеристик");
	ВывестиМетаданные(ДеревоЗначений, Идентификаторы.РегистрСведений, "РегистрыСведений", "РегистрСведений");
	ВывестиМетаданные(ДеревоЗначений, Идентификаторы.РегистрНакопления, "РегистрыНакопления", "РегистрНакопления");
	
	ЗаполнитьБезопасностьОбъектовМетаданных(ДеревоЗначений);
	
	ЗначениеВРеквизитФормы(ДеревоЗначений, "ДеревоНастройкаБезопасностиМетаданных");
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьБезопасностьОбъектовМетаданных(ДеревоЗначений)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СвязьОбъектовИРолей.Объект КАК Объект
	|ПОМЕСТИТЬ ОбъектыСБезопасностью
	|ИЗ
	|	РегистрСведений.СвязьОбъектовИРолей КАК СвязьОбъектовИРолей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИдентификаторыОбъектовМетаданных.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ИдентификаторыОбъектовМетаданных.Ссылка) КАК Наименование,
	|	ИдентификаторыОбъектовМетаданных.Родитель КАК Родитель,
	|	ВЫБОР
	|		КОГДА ОбъектыСБезопасностью.Объект ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьБезопасность
	|ИЗ
	|	Справочник.ИдентификаторыОбъектовМетаданных КАК ИдентификаторыОбъектовМетаданных
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбъектыСБезопасностью КАК ОбъектыСБезопасностью
	|		ПО ИдентификаторыОбъектовМетаданных.Ссылка = ОбъектыСБезопасностью.Объект";
	
	ТаблицаМетаданных = Запрос.Выполнить().Выгрузить();
	
	Типы = ТаблицаМетаданных.НайтиСтроки(Новый Структура("Родитель", Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка()));
	Для Каждого ТипМетаданных Из Типы Цикл
		СтрокаДереваТип = ДеревоЗначений.Строки.Найти(ТипМетаданных.Ссылка, "Ссылка");
		
		Если СтрокаДереваТип <> Неопределено Тогда
			СтрокаДереваТип.УстановленыПрава = ТипМетаданных.ЕстьБезопасность;
			
			Названия = ТаблицаМетаданных.НайтиСтроки(Новый Структура("Родитель", ТипМетаданных.Ссылка));
			Для Каждого НазваниеМетаданных Из Названия Цикл
				СтрокаДереваНазвание = СтрокаДереваТип.Строки.Найти(НазваниеМетаданных.Наименование, "ОбъектМетаданных");
				
				Если СтрокаДереваНазвание <> Неопределено Тогда
					СтрокаДереваНазвание.Ссылка = НазваниеМетаданных.Ссылка;
					СтрокаДереваНазвание.УстановленыПрава = НазваниеМетаданных.ЕстьБезопасность;
					
					Формы = ТаблицаМетаданных.НайтиСтроки(Новый Структура("Родитель", НазваниеМетаданных.Ссылка));
					Для Каждого ФормаМетаданных Из Формы Цикл
						СтрокаДереваФорма = СтрокаДереваНазвание.Строки.Найти(ФормаМетаданных.Наименование, "ОбъектМетаданных");
						
						Если СтрокаДереваФорма <> Неопределено Тогда
							СтрокаДереваФорма.Ссылка = ФормаМетаданных.Ссылка;
							СтрокаДереваФорма.УстановленыПрава = ФормаМетаданных.ЕстьБезопасность;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаСервереБезКонтекста
Функция СинхронизироватьИдентификаторыМетаданных()
	
	Возврат Справочники.ИдентификаторыОбъектовМетаданных.СинхронизироватьИдентификаторыМетаданных();
	
КонецФункции

#КонецОбласти

#Область СервисныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьПравоДляВыбранногоОбъекта(Команда)
	
	ТекущиеДанные = Элементы.ДеревоНастройкаБезопасностиМетаданных.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура("Объект", ТекущиеДанные.Ссылка);
	ОткрытьФорму("РегистрСведений.СвязьОбъектовИРолей.ФормаЗаписи", ПараметрыОткрытия, ЭтотОбъект, ЭтотОбъект.УникальныйИдентификатор,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИспользованиеПрав(Команда)
	
	ОткрытьФорму("ОбщаяФорма.ИспользованиеПравВОбъектах",, ЭтотОбъект, ЭтотОбъект.УникальныйИдентификатор,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти
