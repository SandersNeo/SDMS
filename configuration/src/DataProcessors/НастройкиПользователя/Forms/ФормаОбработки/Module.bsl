///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2025, ООО ДНС Технологии
// SDMS (Software Development Management System) — это корпоративная система учета разработки и управления проектами 
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии General Public License (GNU GPL v3)
// Текст лицензии доступен по ссылке:
// https://www.gnu.org/licenses/gpl-3.0.html
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбъявлениеПеременных

// Хранит имена измененных реквизитов между циклами сохранения
&НаКлиенте
Перем ИменаИзмененныхРеквизитов;

&НаКлиенте
Перем КэшВспомогательныхДанных;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСНастройками.СформироватьЭлементыФормы(ЭтотОбъект, Истина);
	Пользователь = ПараметрыСеанса.ТекущийПользователь;
		
	ОбновитьНастройкиПользователя();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИзменитьДоступностьДетальныхНастроек();
	КэшВспомогательныхДанных = ПолучитьКэшВспомогательныхДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ЗавершениеРаботы  И ИменаИзмененныхРеквизитов.Количество() > 0 Тогда
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВопросСохраненияНастроек", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "Есть несохраненные настройки, сохранить?", РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура АвтоматическоеВосстановлениеПриИзменении(Элемент)
	
	ПриИзмененииРеквизитаФормы(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаЗаказчиковОбработкаВыбора(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат <> Неопределено Тогда
		ИдентификаторФормы = ОбщегоНазначенияКлиентСервер.СтрУникальныйИдентификатор(УникальныйИдентификатор);
		ИмяРеквизитаГруппаЗаказчиков = ПолноеИмяРеквизита("ГруппаЗаказчиковДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
		ЭтотОбъект[ИмяРеквизитаГруппаЗаказчиков] = Результат;
		ПриИзмененииРеквизитаФормы(ИмяРеквизитаГруппаЗаказчиков);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкаНаправлениеСистемаПриИзменении(Элемент)
	
	ЗаполнитьДеревоНаправлениеСистема();	
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНаправленийСистемОповещенияМеткаПубликацияЗадачПриИзменении(Элемент)
	
	МеткаДереваПриИзменении(Элементы.ДеревоНаправленийСистемОповещения, "МеткаПубликацияЗадач");
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНаправленийСистемОповещенияМеткаСозданиеЗаявокПриИзменении(Элемент)
	
	МеткаДереваПриИзменении(Элементы.ДеревоНаправленийСистемОповещения, "МеткаСозданиеЗаявок");

КонецПроцедуры

&НаКлиенте
Процедура ДеревоНаправленийСистемОповещенияПриИзменении(Элемент)
	
	ПриИзмененииРеквизитаФормы(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте       
Процедура ДеревоРазделовПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоРазделов.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		НайденнаяСтраница = Элементы.Найти(ТекущиеДанные.Идентификатор);
		Если НайденнаяСтраница <> Неопределено Тогда
			Элементы.ГруппаСтраницыНастроек.ТекущаяСтраница = НайденнаяСтраница;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьОповещенияПриИзменении(Элемент)
	
	ИзменитьДоступностьДетальныхНастроек();
	ПриИзмененииРеквизитаФормы("ТаблицаДетальныеНастройки");
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ГруппаЗаказчиковНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИдентификаторФормы = ОбщегоНазначенияКлиентСервер.СтрУникальныйИдентификатор(УникальныйИдентификатор);
	ИмяРеквизитаНаправление = ПолноеИмяРеквизита("НаправлениеДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
	ИмяРеквизитаСистема = ПолноеИмяРеквизита("СистемаДляБыстрогоСозданияЗадачи", ИдентификаторФормы);

	ОтфильтрованныеГруппыЗаказчиков = ПолучитьГруппыЗаказчиков(ЭтотОбъект[ИмяРеквизитаНаправление],
		ЭтотОбъект[ИмяРеквизитаСистема], КэшВспомогательныхДанных.ГруппыЗаказчиков);

	ИмяРеквизитаГруппаЗаказчиков = ПолноеИмяРеквизита("ГруппаЗаказчиковДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
	ИнтерфейсПриложенияКлиент.ОткрытьФормуВыбораГруппыЗаказчиков(ЭтотОбъект, ОтфильтрованныеГруппыЗаказчиков,
		Элементы[ИмяРеквизитаГруппаЗаказчиков]);
	
КонецПроцедуры

// Обработчик события ПриИзмении для всех программно сгенерированных реквизитов
//
// Параметры:
//  Элемент	 - ПолеФормы	 - измененный элемент
//
&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизитаФормы(Элемент)
	
	ПриИзмененииРеквизитаФормы(Элемент.Имя);
	РаботаСНастройкамиКлиент.ПослеИзмененияЭлементаФормы(ЭтотОбъект, Элемент.Имя, ИменаИзмененныхРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДетальныеНастройкиПриИзменении(Элемент)
	
	ПриИзмененииРеквизитаФормы(Элемент.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастройкиПоУмолчанию(Команда)
	
	ИзмененныеРеквизиты = НастройкиПоУмолчаниюНаСервере();
	
	Для Каждого Реквизит Из ИзмененныеРеквизиты Цикл
		ПриИзмененииРеквизитаФормы(Реквизит);
	КонецЦикла;
	
	ИзменитьДоступностьДетальныхНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОсновнуюСправку(Команда)
	
	ОткрытьСправкуФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	ИзменитьВсеМетки(1, ДеревоНаправленийСистемОповещения);
	ИменаИзмененныхРеквизитов.Добавить("ДеревоНаправленийСистемОповещения");
	 
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	ОбработатьИзменениеРеквизитов();
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьВсе(Команда)
	
	ИзменитьВсеМетки(0, ДеревоНаправленийСистемОповещения);
	ИменаИзмененныхРеквизитов.Добавить("ДеревоНаправленийСистемОповещения");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьОдинСпособОповещения(ВыбранноеОповещение)
	
	//ОповещениеЧерезRocket = Ложь;
	//ОповещениеЧерезSDMS = Ложь;
	//ОповещениеЧерезПочту = Ложь; 
	
	ЭтотОбъект[ВыбранноеОповещение] = Истина;  
//	НастройкиСпособаОповещений = Истина;

КонецПроцедуры

Процедура ЗаполнитьДеревоНаправлениеСистема()
	
	ПостроительОбщий = Новый ПостроительЗапроса;
	
	ПостроительОбщий.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НаправленияРазработки.Ссылка КАК Направление,
	|	СистемыУчета.Ссылка КАК Система,
	|	НаправленияРазработки.Наименование КАК НаименованиеНаправления,
	|	СистемыУчета.Наименование КАК НаименованиеСистемы
	|ПОМЕСТИТЬ СписокНаправленийИСистем
	|ИЗ
	|	Справочник.НаправленияРазработки КАК НаправленияРазработки,
	|	Справочник.СистемыУчета КАК СистемыУчета
	|ГДЕ
	|	НЕ НаправленияРазработки.ПометкаУдаления
	|	И НЕ СистемыУчета.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыЗаказчиковНаправлений.Ссылка КАК Ссылка,
	|	ГруппыЗаказчиковНаправлений.Наименование КАК Наименование,
	|	ЕСТЬNULL(ГруппыЗаказчиковНаправленийНаправления.Направление, ЗНАЧЕНИЕ(Справочник.НаправленияРазработки.ПустаяСсылка)) КАК Направление,
	|	ЕСТЬNULL(ГруппыЗаказчиковНаправленийСистемы.Система, ЗНАЧЕНИЕ(Справочник.СистемыУчета.ПустаяСсылка)) КАК Система
	|ПОМЕСТИТЬ ГруппыЗаказчиков
	|ИЗ
	|	Справочник.ГруппыЗаказчиковНаправлений КАК ГруппыЗаказчиковНаправлений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыЗаказчиковНаправлений.Направления КАК ГруппыЗаказчиковНаправленийНаправления
	|		ПО (ГруппыЗаказчиковНаправленийНаправления.Ссылка = ГруппыЗаказчиковНаправлений.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыЗаказчиковНаправлений.Системы КАК ГруппыЗаказчиковНаправленийСистемы
	|		ПО (ГруппыЗаказчиковНаправленийСистемы.Ссылка = ГруппыЗаказчиковНаправлений.Ссылка)
	|ГДЕ
	|	НЕ ГруппыЗаказчиковНаправлений.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокНаправленийИСистем.Направление КАК Направление,
	|	СписокНаправленийИСистем.НаименованиеНаправления КАК НаименованиеНаправления,
	|	СписокНаправленийИСистем.Система КАК Система,
	|	СписокНаправленийИСистем.НаименованиеСистемы КАК НаименованиеСистемы,
	|	ЕСТЬNULL(ГруппыЗаказчиков.Ссылка, ЗНАЧЕНИЕ(Справочник.ГруппыЗаказчиковНаправлений.ПустаяСсылка)) КАК ГруппаЗаказчиков,
	|	ЕСТЬNULL(ГруппыЗаказчиков.Наименование, """") КАК НаименованиеГруппыЗаказчиков
	|ПОМЕСТИТЬ НаправлениеСистемаГруппаЗаказчиков
	|ИЗ
	|	СписокНаправленийИСистем КАК СписокНаправленийИСистем
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГруппыЗаказчиков КАК ГруппыЗаказчиков
	|		ПО СписокНаправленийИСистем.Направление = ГруппыЗаказчиков.Направление
	|			И СписокНаправленийИСистем.Система = ГруппыЗаказчиков.Система
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокНаправленийИСистем.Направление,
	|	СписокНаправленийИСистем.НаименованиеНаправления,
	|	СписокНаправленийИСистем.Система,
	|	СписокНаправленийИСистем.НаименованиеСистемы,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыЗаказчиковНаправлений.ПрочиеЗаказчики),
	|	""Прочие заказчики""
	|ИЗ
	|	СписокНаправленийИСистем КАК СписокНаправленийИСистем
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ГруппыЗаказчиков КАК ГруппыЗаказчиков
	|		ПО СписокНаправленийИСистем.Направление = ГруппыЗаказчиков.Направление
	|			И СписокНаправленийИСистем.Система = ГруппыЗаказчиков.Система
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокНаправленийИСистем.Направление,
	|	СписокНаправленийИСистем.Система,
	|	СписокНаправленийИСистем.НаименованиеНаправления,
	|	СписокНаправленийИСистем.НаименованиеСистемы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиУведомленийПользователей.Направление КАК Направление,
	|	НастройкиУведомленийПользователей.Система КАК Система,
	|	НастройкиУведомленийПользователей.ГруппаЗаказчиков КАК ГруппаЗаказчиков,
	|	СУММА(ВЫБОР
	|			КОГДА НастройкиУведомленийПользователей.ВидУведомления = &ВидУведомленияПубликацияЗадач
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК МеткаПубликацияЗадач,
	|	СУММА(ВЫБОР
	|			КОГДА НастройкиУведомленийПользователей.ВидУведомления = &ВидУведомленияСозданиеЗаявок
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК МеткаСозданиеЗаявок
	|ПОМЕСТИТЬ НастройкиУведомлений
	|ИЗ
	|	РегистрСведений.НастройкиУведомленийПользователей КАК НастройкиУведомленийПользователей
	|ГДЕ
	|	НастройкиУведомленийПользователей.Пользователь = &Пользователь
	|
	|СГРУППИРОВАТЬ ПО
	|	НастройкиУведомленийПользователей.Направление,
	|	НастройкиУведомленийПользователей.Система,
	|	НастройкиУведомленийПользователей.ГруппаЗаказчиков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаправлениеСистемаГруппаЗаказчиков.Направление КАК Направление,
	|	НаправлениеСистемаГруппаЗаказчиков.Система КАК Система,
	|	НаправлениеСистемаГруппаЗаказчиков.ГруппаЗаказчиков КАК ГруппаЗаказчиков,
	|	ВЫБОР
	|		КОГДА НастройкиУведомлений.МеткаПубликацияЗадач ЕСТЬ НЕ NULL 
	|			ТОГДА НастройкиУведомлений.МеткаПубликацияЗадач
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МеткаПубликацияЗадач,
	|	ВЫБОР
	|		КОГДА НастройкиУведомлений.МеткаСозданиеЗаявок ЕСТЬ НЕ NULL 
	|			ТОГДА НастройкиУведомлений.МеткаСозданиеЗаявок
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МеткаСозданиеЗаявок,
	|	НаправлениеСистемаГруппаЗаказчиков.НаименованиеНаправления КАК НаименованиеНаправления,
	|	НаправлениеСистемаГруппаЗаказчиков.НаименованиеСистемы КАК НаименованиеСистемы,
	|	НаправлениеСистемаГруппаЗаказчиков.НаименованиеГруппыЗаказчиков КАК НаименованиеГруппыЗаказчиков
	|ИЗ
	|	НаправлениеСистемаГруппаЗаказчиков КАК НаправлениеСистемаГруппаЗаказчиков
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиУведомлений КАК НастройкиУведомлений
	|		ПО НаправлениеСистемаГруппаЗаказчиков.Направление = НастройкиУведомлений.Направление
	|			И НаправлениеСистемаГруппаЗаказчиков.Система = НастройкиУведомлений.Система
	|			И НаправлениеСистемаГруппаЗаказчиков.ГруппаЗаказчиков = НастройкиУведомлений.ГруппаЗаказчиков
	|
	|УПОРЯДОЧИТЬ ПО
	|	НаправлениеСистемаГруппаЗаказчиков.НаименованиеНаправления,
	|	НаправлениеСистемаГруппаЗаказчиков.НаименованиеСистемы,
	|	НаправлениеСистемаГруппаЗаказчиков.НаименованиеГруппыЗаказчиков";
		
	ПостроительОбщий.Параметры.Вставить("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	ПостроительОбщий.Параметры.Вставить("ВидУведомленияПубликацияЗадач", Перечисления.ВидУведомления.ПубликацияЗадач);
	ПостроительОбщий.Параметры.Вставить("ВидУведомленияСозданиеЗаявок", Перечисления.ВидУведомления.СозданиеЗаявок);

	ПостроительОбщий.Выполнить(); 
	Выборка = ПостроительОбщий.Результат.Выбрать(); 

	Источник = Новый ОписаниеИсточникаДанных(Выборка);	
	
	Источник.Колонки["Направление"].Измерение = Истина;
	Источник.Колонки["Система"].Измерение = Истина;

	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.ИсточникДанных = Источник;
    ПостроительЗапроса.ЗаполнитьНастройки();
	ПостроительЗапроса.Измерения.Очистить();

	Если ГруппировкаНаправлениеСистема = 0 Тогда 
		ПостроительЗапроса.Измерения.Добавить("Направление");
		ПостроительЗапроса.Измерения.Добавить("Система");
	Иначе
		ПостроительЗапроса.Измерения.Добавить("Система");
		ПостроительЗапроса.Измерения.Добавить("Направление");
	КонецЕсли;

	ПостроительЗапроса.Выполнить();
	ВыборкаНастроек = ПостроительЗапроса.Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ЗаполнитьДерево(ВыборкаНастроек, "ДеревоНаправленийСистемОповещения");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево(Выборка, ИмяРеквизита)
	
	Дерево = РеквизитФормыВЗначение("ДеревоНаправленийСистемОповещения");
	Дерево.Строки.Очистить();
	
	Пока Выборка.Следующий() Цикл
		СтрокаДереваВерхняя = Дерево.Строки.Добавить();
		
		ВыборкаУровень = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		СуммаУровеньМеткаПубликацияЗадач = 0;
		СуммаУровеньМеткаСозданиеЗаявок = 0;
	
		Пока ВыборкаУровень.Следующий() Цикл
			
			СтрокаДереваНижняя = СтрокаДереваВерхняя.Строки.Добавить();
			
			ВыборкаГруппЗаказчиков = ВыборкаУровень.Выбрать();
			
			СуммаМеткаПубликацияЗадач = 0;
			СуммаМеткаСозданиеЗаявок = 0;

			Пока ВыборкаГруппЗаказчиков.Следующий() Цикл				
				Если ГруппировкаНаправлениеСистема = 0 Тогда
					СтрокаДереваВерхняя.НаправлениеСсылка = Выборка.Направление;
					СтрокаДереваВерхняя.НаправлениеИСистема = ВыборкаГруппЗаказчиков.НаименованиеНаправления;
					
					СтрокаДереваНижняя.НаправлениеСсылка = Выборка.Направление;
					СтрокаДереваНижняя.СистемаСсылка = ВыборкаУровень.Система;
					СтрокаДереваНижняя.НаправлениеИСистема = ВыборкаГруппЗаказчиков.НаименованиеСистемы;
				Иначе
					СтрокаДереваВерхняя.СистемаСсылка = Выборка.Система;
					СтрокаДереваВерхняя.НаправлениеИСистема = ВыборкаГруппЗаказчиков.НаименованиеСистемы;
					
					СтрокаДереваНижняя.НаправлениеСсылка = ВыборкаУровень.Направление;
					СтрокаДереваНижняя.СистемаСсылка = Выборка.Система;
					СтрокаДереваНижняя.НаправлениеИСистема = ВыборкаГруппЗаказчиков.НаименованиеНаправления;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаГруппЗаказчиков.ГруппаЗаказчиков) Тогда
					СтрокаДерева = СтрокаДереваНижняя.Строки.Добавить();
					
					СтрокаДерева.ГруппаЗаказчиков = ВыборкаГруппЗаказчиков.ГруппаЗаказчиков;
					СтрокаДерева.НаправлениеСсылка = СтрокаДереваНижняя.НаправлениеСсылка;
					СтрокаДерева.СистемаСсылка = СтрокаДереваНижняя.СистемаСсылка;
					СтрокаДерева.НаправлениеИСистема = ВыборкаГруппЗаказчиков.НаименованиеГруппыЗаказчиков;				
					СтрокаДерева.МеткаПубликацияЗадач = ВыборкаГруппЗаказчиков.МеткаПубликацияЗадач;
					СтрокаДерева.МеткаСозданиеЗаявок = ВыборкаГруппЗаказчиков.МеткаСозданиеЗаявок;
				Иначе
					СтрокаДереваНижняя.МеткаПубликацияЗадач = ВыборкаГруппЗаказчиков.МеткаПубликацияЗадач;
					СтрокаДереваНижняя.МеткаСозданиеЗаявок = ВыборкаГруппЗаказчиков.МеткаСозданиеЗаявок;					
				КонецЕсли;
				
				СуммаМеткаПубликацияЗадач = СуммаМеткаПубликацияЗадач + ВыборкаГруппЗаказчиков.МеткаПубликацияЗадач;
				СуммаМеткаСозданиеЗаявок = СуммаМеткаСозданиеЗаявок + ВыборкаГруппЗаказчиков.МеткаСозданиеЗаявок;
			КонецЦикла;
		
			КоличествоГруппЗаказчиков = ВыборкаГруппЗаказчиков.Количество();
			
			Если КоличествоГруппЗаказчиков = СуммаМеткаПубликацияЗадач Тогда
				СтрокаДереваНижняя.МеткаПубликацияЗадач = 1;
			ИначеЕсли СуммаМеткаПубликацияЗадач > 0 Тогда
				СтрокаДереваНижняя.МеткаПубликацияЗадач = 2;
			Иначе
				СтрокаДереваНижняя.МеткаПубликацияЗадач = 0;
			КонецЕсли;
			
			Если КоличествоГруппЗаказчиков = СуммаМеткаСозданиеЗаявок Тогда
				СтрокаДереваНижняя.МеткаСозданиеЗаявок = 1;
			ИначеЕсли СуммаМеткаСозданиеЗаявок > 0 Тогда
				СтрокаДереваНижняя.МеткаСозданиеЗаявок = 2;
			Иначе
				СтрокаДереваНижняя.МеткаСозданиеЗаявок = 0;
			КонецЕсли;
			
			Если СтрокаДереваНижняя.МеткаПубликацияЗадач = 1 Тогда
				СуммаУровеньМеткаПубликацияЗадач = СуммаУровеньМеткаПубликацияЗадач + 1;
			ИначеЕсли СтрокаДереваНижняя.МеткаПубликацияЗадач = 2 Тогда
				СуммаУровеньМеткаПубликацияЗадач = 0.5;
			КонецЕсли;
			
			Если СтрокаДереваНижняя.МеткаСозданиеЗаявок = 1 Тогда
				СуммаУровеньМеткаСозданиеЗаявок = СуммаУровеньМеткаСозданиеЗаявок + 1;
			ИначеЕсли СтрокаДереваНижняя.МеткаСозданиеЗаявок = 2 Тогда
				СуммаУровеньМеткаСозданиеЗаявок = 0.5;
			КонецЕсли;	
		КонецЦикла;
		
		КоличествоСистем = ВыборкаУровень.Количество();
		
		Если КоличествоСистем = СуммаУровеньМеткаПубликацияЗадач Тогда
			СтрокаДереваВерхняя.МеткаПубликацияЗадач = 1;
		ИначеЕсли СуммаУровеньМеткаПубликацияЗадач > 0 Тогда
			СтрокаДереваВерхняя.МеткаПубликацияЗадач = 2;
		Иначе
			СтрокаДереваВерхняя.МеткаПубликацияЗадач = 0;
		КонецЕсли;
		
		Если КоличествоСистем = СуммаУровеньМеткаСозданиеЗаявок Тогда
			СтрокаДереваВерхняя.МеткаСозданиеЗаявок = 1;
		ИначеЕсли СуммаУровеньМеткаСозданиеЗаявок > 0 Тогда
			СтрокаДереваВерхняя.МеткаСозданиеЗаявок = 2;
		Иначе
			СтрокаДереваВерхняя.МеткаСозданиеЗаявок = 0;
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, ИмяРеквизита);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройки()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыНастроекПользователя.Ссылка КАК Ссылка,
	|	ВидыНастроекПользователя.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных
	|ПОМЕСТИТЬ ВсеВидыНастроек
	|ИЗ
	|	ПланВидовХарактеристик.ВидыНастроекПользователя КАК ВидыНастроекПользователя
	|ГДЕ
	|	НЕ ВидыНастроекПользователя.ЭтоГруппа
	|	И НЕ ВидыНастроекПользователя.ПометкаУдаления
	|	И НЕ ВидыНастроекПользователя.Скрытый
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыНастроекПользователя.Ссылка КАК Ссылка,
	|	ВидыНастроекПользователя.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
	|	НастройкиПользователя.Значение КАК Значение
	|ПОМЕСТИТЬ НастройкиПользователя
	|ИЗ
	|	РегистрСведений.НастройкиПользователя КАК НастройкиПользователя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВидыНастроекПользователя КАК ВидыНастроекПользователя
	|		ПО НастройкиПользователя.Настройка = ВидыНастроекПользователя.Ссылка
	|			И (НастройкиПользователя.Пользователь = &Пользователь)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеВидыНастроек.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
	|	ЕСТЬNULL(НастройкиПользователя.Значение, НЕОПРЕДЕЛЕНО) КАК Значение
	|ИЗ
	|	ВсеВидыНастроек КАК ВсеВидыНастроек
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиПользователя КАК НастройкиПользователя
	|		ПО ВсеВидыНастроек.Ссылка = НастройкиПользователя.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоступныеКатегории.КатегорияОповещения КАК Категория,
	|	ДоступныеКатегории.Наименование КАК Наименование,
	|	ДоступныеКатегории.Подсказка КАК Подсказка,
	|	ДоступныеКатегории.ПериодОтправки КАК ПериодОтправки
	|ПОМЕСТИТЬ Категории
	|ИЗ
	|	&ДоступныеКатегории КАК ДоступныеКатегории
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Категории.Категория КАК КатегорияОповещения,
	|	Категории.Наименование КАК Наименование,
	|	Категории.Подсказка КАК Подсказка,
	|	ЕСТЬNULL(НастройкиОповещений.СистемаВзаимодействия, ЛОЖЬ) КАК СистемаВзаимодействия,
	|	ЕСТЬNULL(НастройкиОповещений.ЭлектроннаяПочта, ЛОЖЬ) КАК ЭлектроннаяПочта,
	|	ЕСТЬNULL(НастройкиОповещений.ПериодОтправки, Категории.ПериодОтправки) КАК ПериодОтправки
	|ИЗ
	|	Категории КАК Категории
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи.НастройкиОповещений КАК НастройкиОповещений
	|		ПО Категории.Категория = НастройкиОповещений.КатегорияОповещения
	|			И (НастройкиОповещений.Ссылка = &Пользователь)";

	ДоступныеКатегории = Перечисления.КатегорииСообщенийПользователя.КатегорииОповещенияДляФормыНастройкиОповещений();

	Запрос.УстановитьПараметр("ДоступныеКатегории", ДоступныеКатегории);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	Пакеты = Запрос.ВыполнитьПакет();
	КоличествоПакетов = Пакеты.ВГраница();
	
	РезультатЗапроса = Пакеты.Получить(КоличествоПакетов - 2);
	РезультатТаблицаНастроек = Пакеты.Получить(КоличествоПакетов);

	Если НЕ РезультатЗапроса.Пустой() Тогда
		РаботаСНастройками.УстановитьЗначенияРеквизитам(ЭтотОбъект, РезультатЗапроса);
	КонецЕсли;
	
	ИдентификаторФормы = ОбщегоНазначенияКлиентСервер.СтрУникальныйИдентификатор(УникальныйИдентификатор);	
	ИмяРеквизитаНаправление = ПолноеИмяРеквизита("НаправлениеДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
		
	Если ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизитаНаправление]) Тогда
		ИмяРеквизитаЮрЛицо = ПолноеИмяРеквизита("ЮрЛицоДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
		Элементы[ИмяРеквизитаЮрЛицо].Доступность = Истина;
		Элементы[ИмяРеквизитаЮрЛицо].СписокВыбора.Очистить();
		
		ДанныеСписка = РаботаСНастройкамиВызовСервера.ПолучитьСписокВыбораЮридическихЛиц(ЭтотОбъект[ИмяРеквизитаНаправление]);
		
		Для Каждого ЭлементСписка Из ДанныеСписка Цикл
			Элементы[ИмяРеквизитаЮрЛицо].СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		КонецЦикла;
	КонецЕсли;
	
	ИмяРеквизитаГруппаЗаказчиков = ПолноеИмяРеквизита("ГруппаЗаказчиковДляБыстрогоСозданияЗадачи", ИдентификаторФормы); 
	ИмяРеквизитаПродукт = ПолноеИмяРеквизита("ПродуктДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
	
	ДоступностьГруппаЗаказчиков = НЕ ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизитаПродукт]);
	ДоступностьПродукт = НЕ ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизитаГруппаЗаказчиков]); 
	
	Элементы[ИмяРеквизитаГруппаЗаказчиков].Доступность = ДоступностьГруппаЗаказчиков;
	Элементы[ИмяРеквизитаПродукт].Доступность = ДоступностьПродукт;
	
	Выборка = РезультатТаблицаНастроек.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаДетальныеНастройки.Добавить(), Выборка);
	КонецЦикла;
	
	ОтключитьОповещения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыСеанса.ТекущийПользователь, "ОтключитьВсеОповещения");
	
	ИнтеграцияДополнительныхПодсистем.ДополнитьУсловноеОформлениеНастроекПользователя(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВсеМетки(НужнаяМетка, ДеревоНаправлений)
	
	ИмяКолонки = СтрЗаменить(Элементы.ДеревоНаправленийСистемОповещения.ТекущийЭлемент.Имя, "ДеревоНаправленийСистемОповещения", "");
	
	Если НЕ СтрНачинаетсяС(ИмяКолонки, "Метка") Тогда
		Возврат;
	КонецЕсли;
	
	Дерево = ДеревоНаправлений.ПолучитьЭлементы();
	Для Каждого СтрокаДерева Из Дерево Цикл
		СтрокаДерева[ИмяКолонки] = НужнаяМетка;
		Подстроки = СтрокаДерева.ПолучитьЭлементы();
		Для Каждого Подстрока Из Подстроки Цикл
			Подстрока[ИмяКолонки] = НужнаяМетка;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДоступностьДетальныхНастроек()
	
	Элементы.КатегорииНастроекПользователя.Доступность = НЕ ОтключитьОповещения;
	РаботаСНастройкамиКлиент.НастроитьДоступностьЗависимыхЭлементов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура МеткаДереваПриИзменении(ЭлементДерево, ИмяМетки)
	
	Если ГруппировкаНаправлениеСистема = 0 Тогда
		ДаннаяСтрока = ЭлементДерево.ТекущиеДанные.СистемаСсылка;
	Иначе
		ДаннаяСтрока = ЭлементДерево.ТекущиеДанные.НаправлениеСсылка;
	КонецЕсли;
	
	Если ЭлементДерево.ТекущиеДанные <> Неопределено Тогда	
		ТекущаяМетка = ЭлементДерево.ТекущиеДанные[ИмяМетки];
		
		Если НЕ ЗначениеЗаполнено(ДаннаяСтрока) Тогда
			Если ТекущаяМетка = 2 Тогда
				ЭлементДерево.ТекущиеДанные[ИмяМетки] = 0;
				ТекущаяМетка = 0;
			КонецЕсли;
			
			УстановитьМеткиПодчиненным(ЭлементДерево.ТекущиеДанные, ИмяМетки, ТекущаяМетка);
		Иначе
			Если ТекущаяМетка = 1 Тогда
				ЭлементДерево.ТекущиеДанные[ИмяМетки] = 1;
			Иначе
				ЭлементДерево.ТекущиеДанные[ИмяМетки] = 0;
				ТекущаяМетка = 0;
			КонецЕсли;
			
			УстановитьМеткиПодчиненным(ЭлементДерево.ТекущиеДанные, ИмяМетки, ТекущаяМетка);
			УстановитьМеткиРодителям(ЭлементДерево.ТекущиеДанные, ИмяМетки, ТекущаяМетка)
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НастройкиПоУмолчаниюНаСервере()
	
	ИзмененныеРеквизиты = Новый Массив;

	ОтключитьОповещения = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыНастроекПользователя.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
	|	ВидыНастроекПользователя.ЗначениеПоУмолчанию КАК ЗначениеПоУмолчанию
	|ИЗ
	|	ПланВидовХарактеристик.ВидыНастроекПользователя КАК ВидыНастроекПользователя
	|ГДЕ
	|	НЕ ВидыНастроекПользователя.ЭтоГруппа
	|	И ВидыНастроекПользователя.Предопределенный";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ИдентификаторФормы = ОбщегоНазначенияКлиентСервер.СтрУникальныйИдентификатор(УникальныйИдентификатор);
	
	Пока Выборка.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(Выборка.ЗначениеПоУмолчанию) И ТипЗнч(Выборка.ЗначениеПоУмолчанию) <> Тип("Число") Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяРеквизита = ПолноеИмяРеквизита(Выборка.ИмяПредопределенныхДанных, ИдентификаторФормы);
		ЭтотОбъект[ИмяРеквизита] = Выборка.ЗначениеПоУмолчанию;
		
		ИзмененныеРеквизиты.Добавить(ИмяРеквизита);
	КонецЦикла;
	
	ТаблицаДетальныеНастройки.Загрузить(Перечисления.КатегорииСообщенийПользователя.КатегорииОповещенияДляФормыНастройкиОповещений());
	ИзмененныеРеквизиты.Добавить("ТаблицаДетальныеНастройки");
		
	Модифицированность = Истина;
	
	Возврат ИзмененныеРеквизиты;
	
КонецФункции

&НаСервере
Процедура ОбновитьНастройкиПользователя()
	
	ЗаполнитьНастройки();
	ЗаполнитьДеревоНаправлениеСистема();

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВопросСохраненияНастроек(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОбработатьИзменениеРеквизитов();
		Закрыть();
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		ИменаИзмененныхРеквизитов.Очистить();		
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеРеквизитов()
	
	Если ИменаИзмененныхРеквизитов.Количество() > 0 Тогда	
		НовыеЗначения = РаботаСНастройкамиКлиент.ПолучитьСохраняемыеНастройки(ЭтотОбъект, ИменаИзмененныхРеквизитов);
		
		Если НовыеЗначения.Количество() > 0 Тогда
			СохранитьНастройки(Пользователь, НовыеЗначения, ОтключитьОповещения);
			РаботаСНастройкамиКлиент.ПослеСохраненияНастроек(ЭтотОбъект, ИменаИзмененныхРеквизитов);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьГруппыЗаказчиков(Знач Направление, Знач Система, Знач ГруппыЗаказчиков)

	Результат = Новый Массив;
	
	ЭлементНаправление = ГруппыЗаказчиков.Получить(Направление);
	
	Если ЭлементНаправление <> Неопределено Тогда
		ЭлементСистема = ЭлементНаправление.Получить(Система);
		
		Если ЭлементСистема <> Неопределено Тогда
			Результат = ЭлементСистема;
		КонецЕсли; 
	КонецЕсли; 
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКэшВспомогательныхДанных()
		
	ВспомогательныеДанные = Новый Структура;
	
	ГруппыЗаказчиков = ИнтерфейсПриложения.ПолучитьСписокГруппЗаказчиков();
	ВспомогательныеДанные.Вставить("ГруппыЗаказчиков", ГруппыЗаказчиков);
		
	Возврат ВспомогательныеДанные;
	
КонецФункции

&НаКлиенте
Процедура ПриИзмененииРеквизитаФормы(ИмяРеквизита)
	
	ДобавитьРеквизитВСписокИзмененных(ИмяРеквизита);

	ИдентификаторФормы = ОбщегоНазначенияКлиентСервер.СтрУникальныйИдентификатор(УникальныйИдентификатор);

	Если СтрНачинаетсяС(ИмяРеквизита, "НаправлениеДляБыстрогоСозданияЗадачи") Тогда
		ИмяРеквизитаЮрЛицо = ПолноеИмяРеквизита("ЮрЛицоДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
		
		Если ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизита]) Тогда
			Элементы[ИмяРеквизитаЮрЛицо].Доступность = Истина;

			ДанныеСписка = РаботаСНастройкамиВызовСервера.ПолучитьСписокВыбораЮридическихЛиц(
				ЭтотОбъект[ИмяРеквизита]);

			Элементы[ИмяРеквизитаЮрЛицо].СписокВыбора.Очистить();
			
			Для Каждого ЭлементСписка Из ДанныеСписка Цикл
				Элементы[ИмяРеквизитаЮрЛицо].СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
			КонецЦикла;
			
			Если Элементы[ИмяРеквизитаЮрЛицо].СписокВыбора.НайтиПоЗначению(ЭтотОбъект[ИмяРеквизитаЮрЛицо]) = Неопределено Тогда
				ЭтотОбъект[ИмяРеквизитаЮрЛицо] = Неопределено;
			КонецЕсли;
		Иначе
			Элементы[ИмяРеквизитаЮрЛицо].Доступность = Истина;
			ЭтотОбъект[ИмяРеквизитаЮрЛицо] = Неопределено;
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(ИмяРеквизита, "ПродуктДляБыстрогоСозданияЗадачи") Тогда	
		ДоступностьГруппаЗаказчиков = НЕ ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизита]);
		ИмяРеквизитаГруппаЗаказчиков = ПолноеИмяРеквизита("ГруппаЗаказчиковДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
		Элементы[ИмяРеквизитаГруппаЗаказчиков].Доступность = ДоступностьГруппаЗаказчиков;
		ЭтотОбъект[ИмяРеквизитаГруппаЗаказчиков] = Неопределено;
		ДобавитьРеквизитВСписокИзмененных(ИмяРеквизитаГруппаЗаказчиков);
		
	ИначеЕсли СтрНачинаетсяС(ИмяРеквизита, "ГруппаЗаказчиковДляБыстрогоСозданияЗадачи") Тогда	
		ДоступностьПродукт = НЕ ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизита]);
		ИмяРеквизитаПродукт = ПолноеИмяРеквизита("ПродуктДляБыстрогоСозданияЗадачи", ИдентификаторФормы);
		Элементы[ИмяРеквизитаПродукт].Доступность = ДоступностьПродукт;
		ЭтотОбъект[ИмяРеквизитаПродукт] = Неопределено;
		ДобавитьРеквизитВСписокИзмененных(ИмяРеквизитаПродукт);
	КонецЕсли;
		
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьНастройки(Знач Пользователь, Знач НовыеЗначения, Знач ОтключитьОповещения)
		
	Результат = Новый Структура("НастройкиСохранены, ТекстОшибки", Истина, "");

	Для Каждого СтруктураЗначения Из НовыеЗначения Цикл
		Если СтруктураЗначения.ИмяНастройки = "ТаблицаДетальныеНастройки" Тогда
			
			ТаблицаНастроек = СтруктураЗначения.Значение.Выгрузить();
			ТаблицаНастроек.Колонки.Удалить("Наименование");
			ТаблицаНастроек.Колонки.Удалить("Подсказка");
			
			СохранитьНастройкиОповещений(Результат, Пользователь, ТаблицаНастроек, ОтключитьОповещения);
			
		ИначеЕсли СтруктураЗначения.ИмяНастройки = "ДеревоНаправленийСистемОповещения" Тогда
			СохранитьНастройкиОбъектовОповещения(Результат, Пользователь, СтруктураЗначения.Значение.ПолучитьЭлементы());
						
		Иначе
			НастройкаСсылка = ПланыВидовХарактеристик.ВидыНастроекПользователя[СтруктураЗначения.ИмяНастройки];
			РегистрыСведений.НастройкиПользователя.СохранитьНастройку(Пользователь, НастройкаСсылка, СтруктураЗначения.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ Результат.НастройкиСохранены Тогда
		ЗаписьЖурналаРегистрации("НастройкиПользователя", УровеньЖурналаРегистрации.Ошибка,,, Результат.ТекстОшибки);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьНастройкиОбъектовОповещения(Результат, Пользователь, Знач МассивНаправлений)
	
	ТаблицаИзмененийНастроек = Новый ТаблицаЗначений;
	ТаблицаИзмененийНастроек.Колонки.Добавить("ВидУведомления", Новый ОписаниеТипов("ПеречислениеСсылка.ВидУведомления"));
	ТаблицаИзмененийНастроек.Колонки.Добавить("НаправлениеСсылка", Новый ОписаниеТипов("СправочникСсылка.НаправленияРазработки"));
	ТаблицаИзмененийНастроек.Колонки.Добавить("СистемаСсылка", Новый ОписаниеТипов("СправочникСсылка.СистемыУчета"));
	ТаблицаИзмененийНастроек.Колонки.Добавить("ГруппаЗаказчиков", Новый ОписаниеТипов("СправочникСсылка.ГруппыЗаказчиковНаправлений"));
	ТаблицаИзмененийНастроек.Колонки.Добавить("ПользовательСсылка", Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	
	ВидУведомленияПубликацияЗадач = Перечисления.ВидУведомления.ПубликацияЗадач;
	ВидУведомленияСозданиеЗаявок = Перечисления.ВидУведомления.СозданиеЗаявок;
	
//	МассивНаправлений = Дерево.ПолучитьЭлементы();	
	Для Каждого ЭлементМассива Из МассивНаправлений Цикл
		МассивСистем = ЭлементМассива.ПолучитьЭлементы();
		
		Для Каждого ЭлементСистем Из МассивСистем Цикл			
			Если ЭлементСистем.МеткаПубликацияЗадач = 1 Тогда
				НоваяСтрока = ТаблицаИзмененийНастроек.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементСистем);
				НоваяСтрока.ВидУведомления = ВидУведомленияПубликацияЗадач;
				НоваяСтрока.ПользовательСсылка = Пользователь;
			КонецЕсли;

			Если ЭлементСистем.МеткаСозданиеЗаявок = 1 Тогда
				НоваяСтрока = ТаблицаИзмененийНастроек.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементСистем);
				НоваяСтрока.ВидУведомления = ВидУведомленияСозданиеЗаявок;
				НоваяСтрока.ПользовательСсылка = Пользователь;
			КонецЕсли;
			
			МассивГрупп = ЭлементСистем.ПолучитьЭлементы();
			
			Для Каждого Элемент Из МассивГрупп Цикл
				Если Элемент.МеткаПубликацияЗадач = 1 Тогда
					НоваяСтрока = ТаблицаИзмененийНастроек.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент);
					НоваяСтрока.ВидУведомления = ВидУведомленияПубликацияЗадач;
					НоваяСтрока.ПользовательСсылка = Пользователь;
				КонецЕсли;
				
				Если Элемент.МеткаСозданиеЗаявок = 1 Тогда
					НоваяСтрока = ТаблицаИзмененийНастроек.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент);
					НоваяСтрока.ВидУведомления = ВидУведомленияСозданиеЗаявок;
					НоваяСтрока.ПользовательСсылка = Пользователь;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;			
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИзмененияНастроек.НаправлениеСсылка КАК Направление,
	|	ИзмененияНастроек.СистемаСсылка КАК Система,
	|	ИзмененияНастроек.ГруппаЗаказчиков КАК ГруппаЗаказчиков,
	|	ИзмененияНастроек.ПользовательСсылка КАК Пользователь,
	|	ИзмененияНастроек.ВидУведомления КАК ВидУведомления
	|ПОМЕСТИТЬ ТаблицаНастроекУведомлений
	|ИЗ
	|	&ИзмененияНастроек КАК ИзмененияНастроек
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНастроекУведомлений.ВидУведомления КАК ВидУведомления,
	|	ТаблицаНастроекУведомлений.Направление КАК Направление,
	|	ТаблицаНастроекУведомлений.Система КАК Система,
	|	ТаблицаНастроекУведомлений.ГруппаЗаказчиков КАК ГруппаЗаказчиков,
	|	ИСТИНА КАК Добавить
	|ИЗ
	|	ТаблицаНастроекУведомлений КАК ТаблицаНастроекУведомлений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУведомленийПользователей КАК НастройкиУведомленийПользователей
	|		ПО (НастройкиУведомленийПользователей.ВидУведомления = ТаблицаНастроекУведомлений.ВидУведомления)
	|			И ТаблицаНастроекУведомлений.Направление = НастройкиУведомленийПользователей.Направление
	|			И ТаблицаНастроекУведомлений.Система = НастройкиУведомленийПользователей.Система
	|			И ТаблицаНастроекУведомлений.ГруппаЗаказчиков = НастройкиУведомленийПользователей.ГруппаЗаказчиков
	|			И ТаблицаНастроекУведомлений.Пользователь = НастройкиУведомленийПользователей.Пользователь
	|ГДЕ
	|	НастройкиУведомленийПользователей.Пользователь ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НастройкиУведомленийПользователей.ВидУведомления,
	|	НастройкиУведомленийПользователей.Направление,
	|	НастройкиУведомленийПользователей.Система,
	|	НастройкиУведомленийПользователей.ГруппаЗаказчиков,
	|	ЛОЖЬ
	|ИЗ
	|	РегистрСведений.НастройкиУведомленийПользователей КАК НастройкиУведомленийПользователей
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНастроекУведомлений КАК ТаблицаНастроекУведомлений
	|		ПО НастройкиУведомленийПользователей.ВидУведомления = ТаблицаНастроекУведомлений.ВидУведомления
	|			И НастройкиУведомленийПользователей.Направление = ТаблицаНастроекУведомлений.Направление
	|			И НастройкиУведомленийПользователей.Система = ТаблицаНастроекУведомлений.Система
	|			И (ТаблицаНастроекУведомлений.ГруппаЗаказчиков = НастройкиУведомленийПользователей.ГруппаЗаказчиков)
	|			И НастройкиУведомленийПользователей.Пользователь = ТаблицаНастроекУведомлений.Пользователь
	|ГДЕ
	|	НастройкиУведомленийПользователей.Пользователь = &Пользователь
	|	И ТаблицаНастроекУведомлений.Пользователь ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("ИзмененияНастроек", ТаблицаИзмененийНастроек);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Попытка 
		НачатьТранзакцию();
		Пока Выборка.Следующий() Цикл
			МенеджерЗаписи  = РегистрыСведений.НастройкиУведомленийПользователей.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ВидУведомления = Выборка.ВидУведомления;
			МенеджерЗаписи.Направление = Выборка.Направление;
			МенеджерЗаписи.Система = Выборка.Система;
			МенеджерЗаписи.ГруппаЗаказчиков = Выборка.ГруппаЗаказчиков;
			МенеджерЗаписи.Пользователь = Пользователь;
			
			Если Выборка.Добавить Тогда
				МенеджерЗаписи.Записать(Ложь);
			Иначе
				МенеджерЗаписи.Удалить();
			КонецЕсли;
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		Результат.НастройкиСохранены = Ложь;
		Результат.ТекстОшибки = СтрШаблон(Результат.ТекстОшибки + " Произошла ошибка при сохранении настроек: %1", ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьНастройкиОповещений(Результат, Пользователь, ТаблицаНастроек, ОтключитьОповещения)
	
	ПользовательОбъект = Пользователь.ПолучитьОбъект();
	ПользовательОбъект.ОтключитьВсеОповещения = ОтключитьОповещения;
	ПользовательОбъект.НастройкиОповещений.Загрузить(ТаблицаНастроек);
	ПользовательОбъект.ОбменДанными.Загрузка = Истина;
		
	Попытка
		УстановитьПривилегированныйРежим(Истина);
		ПользовательОбъект.Записать();
		УстановитьПривилегированныйРежим(Ложь);
	Исключение
		Результат.ТекстОшибки = СтрШаблон("Произошла ошибка при сохранении настроек: %1", ОписаниеОшибки());
		Результат.НастройкиСохранены = Ложь;
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьМеткиПодчиненным(Родитель, ИмяМетки, ТекущаяМетка)
	
	Дерево = Родитель.ПолучитьЭлементы();		
	
	Для Каждого СтрокиНаправления Из Дерево Цикл 
		СтрокиНаправления[ИмяМетки] = ТекущаяМетка;
		УстановитьМеткиПодчиненным(СтрокиНаправления, ИмяМетки, ТекущаяМетка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьМеткиРодителям(Строка, ИмяМетки, ТекущаяМетка)
	
	Родитель = Строка.ПолучитьРодителя();
	
	Если Родитель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокСистемВНаправлении = Родитель.ПолучитьЭлементы();
	Счетчик = 0;
	
	Для Каждого ЭлементМассива Из СписокСистемВНаправлении Цикл
		Если ЭлементМассива[ИмяМетки] = 1 Тогда
			Счетчик = Счетчик + 1;
		КонецЕсли;
	КонецЦикла;        
	
	Если СписокСистемВНаправлении.Количество() = Счетчик Тогда
		Родитель[ИмяМетки] = 1;
		УстановитьМеткиРодителям(Родитель, ИмяМетки, ТекущаяМетка);
	ИначеЕсли Счетчик > 0 Тогда
		Родитель[ИмяМетки] = 2;
	Иначе
		Родитель[ИмяМетки] = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРеквизитВСписокИзмененных(ИмяРеквизита)  
	
	НайденныйЭлемент = ИменаИзмененныхРеквизитов.Найти(ИмяРеквизита);
	Если НайденныйЭлемент = Неопределено Тогда
		ИменаИзмененныхРеквизитов.Добавить(ИмяРеквизита);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолноеИмяРеквизита(ИмяРеквизита, ИдентификаторФормы) 
	
	Возврат СтрШаблон("%1_%2", ИмяРеквизита, ИдентификаторФормы);
	
КонецФункции

#КонецОбласти

#Область ИнициализацияПеременных

#Если ТонкийКлиент ИЛИ ВебКлиент Тогда

ИменаИзмененныхРеквизитов = Новый Массив;

#КонецЕсли

#КонецОбласти
